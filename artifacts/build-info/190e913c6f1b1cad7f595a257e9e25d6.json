{
	"id": "190e913c6f1b1cad7f595a257e9e25d6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"stack_contract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ncontract StakingContract is ReentrancyGuard, Ownable {\n\n    IERC20 public stakingToken;\n\n    uint256 public totalStaked;\n    \n    mapping(address => Stake) public userStaking;\n    \n    struct Stake {\n        uint256 stakedAmount;    \n        uint256 withdrawDate;     \n    }\n    \n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    \n    constructor(IERC20 _stakingToken) Ownable(msg.sender) {\n        stakingToken = _stakingToken;\n    }\n    \n    function stake(uint256 amount, uint256 period) external nonReentrant {\n        require(\n            userStaking[msg.sender].stakedAmount == 0 && userStaking[msg.sender].withdrawDate == 0,\n            \"user already has stacking\"\n        );\n        \n        userStaking[msg.sender].stakedAmount = amount;\n        userStaking[msg.sender].withdrawDate = block.timestamp + period;\n        \n        bool success = stakingToken.transferFrom(msg.sender, address(this), amount);\n        require(success, \"Transfer failed\");\n\n        totalStaked += amount;\n        \n        emit Staked(msg.sender, amount);\n    }\n\n    function getStake() public view returns(Stake memory) {\n        return userStaking[msg.sender];\n    }\n\n    function getTotalStake() public view returns(uint256) {\n        return totalStaked;\n    }\n    \n    function withdraw() external nonReentrant {\n        Stake memory userStack = userStaking[msg.sender];\n        require(userStack.stakedAmount > 0, \"Cannot withdraw 0\");\n        require(userStack.withdrawDate <= block.timestamp, \"Too early withdraw!\");\n        \n        bool success = stakingToken.transfer(msg.sender, userStack.stakedAmount);\n        require(success, \"Transfer failed\");\n\n        totalStaked -= userStack.stakedAmount;\n\n        userStaking[msg.sender] = Stake(0, 0);\n        \n        emit Withdrawn(msg.sender, userStack.stakedAmount);\n    }\n\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"stack_contract.sol": {
				"StakingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_stakingToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stakedAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "withdrawDate",
											"type": "uint256"
										}
									],
									"internalType": "struct StakingContract.Stake",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "period",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userStaking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "withdrawDate",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"stack_contract.sol\":232:2119  contract StakingContract is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"stack_contract.sol\":636:735  constructor(IERC20 _stakingToken) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"stack_contract.sol\":678:688  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"stack_contract.sol\":715:728  _stakingToken */\n  dup1\n    /* \"stack_contract.sol\":700:712  stakingToken */\n  0x02\n  0x00\n    /* \"stack_contract.sol\":700:728  stakingToken = _stakingToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"stack_contract.sol\":636:735  constructor(IERC20 _stakingToken) Ownable(msg.sender) {... */\n  pop\n    /* \"stack_contract.sol\":232:2119  contract StakingContract is ReentrancyGuard, Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_22:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_34\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_21\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_23:\n    /* \"#utility.yul\":771:809   */\n  tag_36\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_22\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_37:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_24:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_39\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_23\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1396   */\ntag_3:\n    /* \"#utility.yul\":1101:1107   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  0x20\n    /* \"#utility.yul\":1138:1147   */\n  dup3\n    /* \"#utility.yul\":1129:1136   */\n  dup5\n    /* \"#utility.yul\":1125:1148   */\n  sub\n    /* \"#utility.yul\":1121:1153   */\n  slt\n    /* \"#utility.yul\":1118:1237   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1156:1235   */\n  tag_42\n  tag_18\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1118:1237   */\ntag_41:\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1301:1379   */\n  tag_43\n    /* \"#utility.yul\":1371:1378   */\n  dup5\n    /* \"#utility.yul\":1362:1368   */\n  dup3\n    /* \"#utility.yul\":1351:1360   */\n  dup6\n    /* \"#utility.yul\":1347:1369   */\n  add\n    /* \"#utility.yul\":1301:1379   */\n  tag_24\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1291:1379   */\n  swap2\n  pop\n    /* \"#utility.yul\":1247:1389   */\n  pop\n    /* \"#utility.yul\":1017:1396   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1402:1520   */\ntag_25:\n    /* \"#utility.yul\":1489:1513   */\n  tag_45\n    /* \"#utility.yul\":1507:1512   */\n  dup2\n    /* \"#utility.yul\":1489:1513   */\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1484:1487   */\n  dup3\n    /* \"#utility.yul\":1477:1514   */\n  mstore\n    /* \"#utility.yul\":1402:1520   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1526:1748   */\ntag_11:\n    /* \"#utility.yul\":1619:1623   */\n  0x00\n    /* \"#utility.yul\":1657:1659   */\n  0x20\n    /* \"#utility.yul\":1646:1655   */\n  dup3\n    /* \"#utility.yul\":1642:1660   */\n  add\n    /* \"#utility.yul\":1634:1660   */\n  swap1\n  pop\n    /* \"#utility.yul\":1670:1741   */\n  tag_47\n    /* \"#utility.yul\":1738:1739   */\n  0x00\n    /* \"#utility.yul\":1727:1736   */\n  dup4\n    /* \"#utility.yul\":1723:1740   */\n  add\n    /* \"#utility.yul\":1714:1720   */\n  dup5\n    /* \"#utility.yul\":1670:1741   */\n  tag_25\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1526:1748   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"stack_contract.sol\":232:2119  contract StakingContract is ReentrancyGuard, Ownable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"stack_contract.sol\":232:2119  contract StakingContract is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x821460f5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfc0e3d90\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7bc74225\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"stack_contract.sol\":1559:2116  function withdraw() external nonReentrant {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"stack_contract.sol\":292:318  IERC20 public stakingToken */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stack_contract.sol\":745:1347  function stake(uint256 amount, uint256 period) external nonReentrant {... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"stack_contract.sol\":1460:1549  function getTotalStake() public view returns(uint256) {... */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stack_contract.sol\":325:351  uint256 public totalStaked */\n    tag_8:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stack_contract.sol\":362:406  mapping(address => Stake) public userStaking */\n    tag_9:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap3\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"stack_contract.sol\":1353:1454  function getStake() public view returns(Stake memory) {... */\n    tag_12:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stack_contract.sol\":1559:2116  function withdraw() external nonReentrant {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_51\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_52\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_51:\n        /* \"stack_contract.sol\":1611:1633  Stake memory userStack */\n      0x00\n        /* \"stack_contract.sol\":1636:1647  userStaking */\n      0x04\n        /* \"stack_contract.sol\":1636:1659  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":1648:1658  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1636:1659  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":1611:1659  Stake memory userStack = userStaking[msg.sender] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"stack_contract.sol\":1702:1703  0 */\n      0x00\n        /* \"stack_contract.sol\":1677:1686  userStack */\n      dup2\n        /* \"stack_contract.sol\":1677:1699  userStack.stakedAmount */\n      0x00\n      add\n      mload\n        /* \"stack_contract.sol\":1677:1703  userStack.stakedAmount > 0 */\n      gt\n        /* \"stack_contract.sol\":1669:1725  require(userStack.stakedAmount > 0, \"Cannot withdraw 0\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"stack_contract.sol\":1769:1784  block.timestamp */\n      timestamp\n        /* \"stack_contract.sol\":1743:1752  userStack */\n      dup2\n        /* \"stack_contract.sol\":1743:1765  userStack.withdrawDate */\n      0x20\n      add\n      mload\n        /* \"stack_contract.sol\":1743:1784  userStack.withdrawDate <= block.timestamp */\n      gt\n      iszero\n        /* \"stack_contract.sol\":1735:1808  require(userStack.withdrawDate <= block.timestamp, \"Too early withdraw!\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"stack_contract.sol\":1827:1839  bool success */\n      0x00\n        /* \"stack_contract.sol\":1842:1854  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"stack_contract.sol\":1842:1863  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"stack_contract.sol\":1864:1874  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1876:1885  userStack */\n      dup5\n        /* \"stack_contract.sol\":1876:1898  userStack.stakedAmount */\n      0x00\n      add\n      mload\n        /* \"stack_contract.sol\":1842:1899  stakingToken.transfer(msg.sender, userStack.stakedAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"stack_contract.sol\":1827:1899  bool success = stakingToken.transfer(msg.sender, userStack.stakedAmount) */\n      swap1\n      pop\n        /* \"stack_contract.sol\":1917:1924  success */\n      dup1\n        /* \"stack_contract.sol\":1909:1944  require(success, \"Transfer failed\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"stack_contract.sol\":1970:1979  userStack */\n      dup2\n        /* \"stack_contract.sol\":1970:1992  userStack.stakedAmount */\n      0x00\n      add\n      mload\n        /* \"stack_contract.sol\":1955:1966  totalStaked */\n      0x03\n      0x00\n        /* \"stack_contract.sol\":1955:1992  totalStaked -= userStack.stakedAmount */\n      dup3\n      dup3\n      sload\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stack_contract.sol\":2029:2040  Stake(0, 0) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"stack_contract.sol\":2035:2036  0 */\n      0x00\n        /* \"stack_contract.sol\":2029:2040  Stake(0, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"stack_contract.sol\":2038:2039  0 */\n      0x00\n        /* \"stack_contract.sol\":2029:2040  Stake(0, 0) */\n      dup2\n      mstore\n      pop\n        /* \"stack_contract.sol\":2003:2014  userStaking */\n      0x04\n        /* \"stack_contract.sol\":2003:2026  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":2015:2025  msg.sender */\n      caller\n        /* \"stack_contract.sol\":2003:2026  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":2003:2040  userStaking[msg.sender] = Stake(0, 0) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"stack_contract.sol\":2074:2084  msg.sender */\n      caller\n        /* \"stack_contract.sol\":2064:2109  Withdrawn(msg.sender, userStack.stakedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"stack_contract.sol\":2086:2095  userStack */\n      dup4\n        /* \"stack_contract.sol\":2086:2108  userStack.stakedAmount */\n      0x00\n      add\n      mload\n        /* \"stack_contract.sol\":2064:2109  Withdrawn(msg.sender, userStack.stakedAmount) */\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"stack_contract.sol\":1601:2116  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_73\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_72:\n        /* \"stack_contract.sol\":1559:2116  function withdraw() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"stack_contract.sol\":292:318  IERC20 public stakingToken */\n    tag_19:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"stack_contract.sol\":745:1347  function stake(uint256 amount, uint256 period) external nonReentrant {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_81\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_52\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_81:\n        /* \"stack_contract.sol\":885:886  0 */\n      0x00\n        /* \"stack_contract.sol\":845:856  userStaking */\n      0x04\n        /* \"stack_contract.sol\":845:868  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":857:867  msg.sender */\n      caller\n        /* \"stack_contract.sol\":845:868  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":845:881  userStaking[msg.sender].stakedAmount */\n      0x00\n      add\n      sload\n        /* \"stack_contract.sol\":845:886  userStaking[msg.sender].stakedAmount == 0 */\n      eq\n        /* \"stack_contract.sol\":845:931  userStaking[msg.sender].stakedAmount == 0 && userStaking[msg.sender].withdrawDate == 0 */\n      dup1\n      iszero\n      tag_83\n      jumpi\n      pop\n        /* \"stack_contract.sol\":930:931  0 */\n      0x00\n        /* \"stack_contract.sol\":890:901  userStaking */\n      0x04\n        /* \"stack_contract.sol\":890:913  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":902:912  msg.sender */\n      caller\n        /* \"stack_contract.sol\":890:913  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":890:926  userStaking[msg.sender].withdrawDate */\n      0x01\n      add\n      sload\n        /* \"stack_contract.sol\":890:931  userStaking[msg.sender].withdrawDate == 0 */\n      eq\n        /* \"stack_contract.sol\":845:931  userStaking[msg.sender].stakedAmount == 0 && userStaking[msg.sender].withdrawDate == 0 */\n    tag_83:\n        /* \"stack_contract.sol\":824:982  require(... */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"stack_contract.sol\":1040:1046  amount */\n      dup2\n        /* \"stack_contract.sol\":1001:1012  userStaking */\n      0x04\n        /* \"stack_contract.sol\":1001:1024  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":1013:1023  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1001:1024  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":1001:1037  userStaking[msg.sender].stakedAmount */\n      0x00\n      add\n        /* \"stack_contract.sol\":1001:1046  userStaking[msg.sender].stakedAmount = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stack_contract.sol\":1113:1119  period */\n      dup1\n        /* \"stack_contract.sol\":1095:1110  block.timestamp */\n      timestamp\n        /* \"stack_contract.sol\":1095:1119  block.timestamp + period */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"stack_contract.sol\":1056:1067  userStaking */\n      0x04\n        /* \"stack_contract.sol\":1056:1079  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":1068:1078  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1056:1079  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":1056:1092  userStaking[msg.sender].withdrawDate */\n      0x01\n      add\n        /* \"stack_contract.sol\":1056:1119  userStaking[msg.sender].withdrawDate = block.timestamp + period */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stack_contract.sol\":1138:1150  bool success */\n      0x00\n        /* \"stack_contract.sol\":1153:1165  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"stack_contract.sol\":1153:1178  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"stack_contract.sol\":1179:1189  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1199:1203  this */\n      address\n        /* \"stack_contract.sol\":1206:1212  amount */\n      dup7\n        /* \"stack_contract.sol\":1153:1213  stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_93:\n        /* \"stack_contract.sol\":1138:1213  bool success = stakingToken.transferFrom(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"stack_contract.sol\":1231:1238  success */\n      dup1\n        /* \"stack_contract.sol\":1223:1258  require(success, \"Transfer failed\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap1\n      tag_68\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"stack_contract.sol\":1284:1290  amount */\n      dup3\n        /* \"stack_contract.sol\":1269:1280  totalStaked */\n      0x03\n      0x00\n        /* \"stack_contract.sol\":1269:1290  totalStaked += amount */\n      dup3\n      dup3\n      sload\n      tag_96\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_96:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stack_contract.sol\":1321:1331  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1314:1340  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"stack_contract.sol\":1333:1339  amount */\n      dup5\n        /* \"stack_contract.sol\":1314:1340  Staked(msg.sender, amount) */\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"stack_contract.sol\":814:1347  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_98\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_73\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_98:\n        /* \"stack_contract.sol\":745:1347  function stake(uint256 amount, uint256 period) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"stack_contract.sol\":1460:1549  function getTotalStake() public view returns(uint256) {... */\n    tag_27:\n        /* \"stack_contract.sol\":1505:1512  uint256 */\n      0x00\n        /* \"stack_contract.sol\":1531:1542  totalStaked */\n      sload(0x03)\n        /* \"stack_contract.sol\":1524:1542  return totalStaked */\n      swap1\n      pop\n        /* \"stack_contract.sol\":1460:1549  function getTotalStake() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"stack_contract.sol\":325:351  uint256 public totalStaked */\n    tag_31:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"stack_contract.sol\":362:406  mapping(address => Stake) public userStaking */\n    tag_36:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"stack_contract.sol\":1353:1454  function getStake() public view returns(Stake memory) {... */\n    tag_47:\n        /* \"stack_contract.sol\":1393:1405  Stake memory */\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"stack_contract.sol\":1424:1435  userStaking */\n      0x04\n        /* \"stack_contract.sol\":1424:1447  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":1436:1446  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1424:1447  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":1417:1447  return userStaking[msg.sender] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"stack_contract.sol\":1353:1454  function getStake() public view returns(Stake memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    tag_108:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_124:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_125:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_126:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_162\n        /* \"#utility.yul\":306:340   */\n      tag_163\n        /* \"#utility.yul\":315:339   */\n      tag_164\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_124\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":306:340   */\n      tag_125\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":288:341   */\n      tag_124\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_127:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_166\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_126\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:625   */\n    tag_128:\n        /* \"#utility.yul\":549:558   */\n      0x00\n        /* \"#utility.yul\":582:619   */\n      tag_168\n        /* \"#utility.yul\":613:618   */\n      dup3\n        /* \"#utility.yul\":582:619   */\n      tag_127\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":569:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:790   */\n    tag_129:\n        /* \"#utility.yul\":732:783   */\n      tag_170\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":732:783   */\n      tag_128\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":727:730   */\n      dup3\n        /* \"#utility.yul\":720:784   */\n      mstore\n        /* \"#utility.yul\":631:790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1046   */\n    tag_21:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":930:939   */\n      dup3\n        /* \"#utility.yul\":926:944   */\n      add\n        /* \"#utility.yul\":918:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1039   */\n      tag_172\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1025:1034   */\n      dup4\n        /* \"#utility.yul\":1021:1038   */\n      add\n        /* \"#utility.yul\":1012:1018   */\n      dup5\n        /* \"#utility.yul\":954:1039   */\n      tag_129\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":796:1046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1133:1250   */\n    tag_131:\n        /* \"#utility.yul\":1242:1243   */\n      0x00\n        /* \"#utility.yul\":1239:1240   */\n      dup1\n        /* \"#utility.yul\":1232:1244   */\n      revert\n        /* \"#utility.yul\":1379:1456   */\n    tag_133:\n        /* \"#utility.yul\":1416:1423   */\n      0x00\n        /* \"#utility.yul\":1445:1450   */\n      dup2\n        /* \"#utility.yul\":1434:1450   */\n      swap1\n      pop\n        /* \"#utility.yul\":1379:1456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1462:1584   */\n    tag_134:\n        /* \"#utility.yul\":1535:1559   */\n      tag_178\n        /* \"#utility.yul\":1553:1558   */\n      dup2\n        /* \"#utility.yul\":1535:1559   */\n      tag_133\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1528:1533   */\n      dup2\n        /* \"#utility.yul\":1525:1560   */\n      eq\n        /* \"#utility.yul\":1515:1578   */\n      tag_179\n      jumpi\n        /* \"#utility.yul\":1574:1575   */\n      0x00\n        /* \"#utility.yul\":1571:1572   */\n      dup1\n        /* \"#utility.yul\":1564:1576   */\n      revert\n        /* \"#utility.yul\":1515:1578   */\n    tag_179:\n        /* \"#utility.yul\":1462:1584   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1590:1729   */\n    tag_135:\n        /* \"#utility.yul\":1636:1641   */\n      0x00\n        /* \"#utility.yul\":1674:1680   */\n      dup2\n        /* \"#utility.yul\":1661:1681   */\n      calldataload\n        /* \"#utility.yul\":1652:1681   */\n      swap1\n      pop\n        /* \"#utility.yul\":1690:1723   */\n      tag_181\n        /* \"#utility.yul\":1717:1722   */\n      dup2\n        /* \"#utility.yul\":1690:1723   */\n      tag_134\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1590:1729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:2209   */\n    tag_24:\n        /* \"#utility.yul\":1803:1809   */\n      0x00\n        /* \"#utility.yul\":1811:1817   */\n      dup1\n        /* \"#utility.yul\":1860:1862   */\n      0x40\n        /* \"#utility.yul\":1848:1857   */\n      dup4\n        /* \"#utility.yul\":1839:1846   */\n      dup6\n        /* \"#utility.yul\":1835:1858   */\n      sub\n        /* \"#utility.yul\":1831:1863   */\n      slt\n        /* \"#utility.yul\":1828:1947   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":1866:1945   */\n      tag_184\n      tag_131\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1828:1947   */\n    tag_183:\n        /* \"#utility.yul\":1986:1987   */\n      0x00\n        /* \"#utility.yul\":2011:2064   */\n      tag_185\n        /* \"#utility.yul\":2056:2063   */\n      dup6\n        /* \"#utility.yul\":2047:2053   */\n      dup3\n        /* \"#utility.yul\":2036:2045   */\n      dup7\n        /* \"#utility.yul\":2032:2054   */\n      add\n        /* \"#utility.yul\":2011:2064   */\n      tag_135\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2001:2064   */\n      swap3\n      pop\n        /* \"#utility.yul\":1957:2074   */\n      pop\n        /* \"#utility.yul\":2113:2115   */\n      0x20\n        /* \"#utility.yul\":2139:2192   */\n      tag_186\n        /* \"#utility.yul\":2184:2191   */\n      dup6\n        /* \"#utility.yul\":2175:2181   */\n      dup3\n        /* \"#utility.yul\":2164:2173   */\n      dup7\n        /* \"#utility.yul\":2160:2182   */\n      add\n        /* \"#utility.yul\":2139:2192   */\n      tag_135\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2129:2192   */\n      swap2\n      pop\n        /* \"#utility.yul\":2084:2202   */\n      pop\n        /* \"#utility.yul\":1735:2209   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2215:2333   */\n    tag_136:\n        /* \"#utility.yul\":2302:2326   */\n      tag_188\n        /* \"#utility.yul\":2320:2325   */\n      dup2\n        /* \"#utility.yul\":2302:2326   */\n      tag_133\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2297:2300   */\n      dup3\n        /* \"#utility.yul\":2290:2327   */\n      mstore\n        /* \"#utility.yul\":2215:2333   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2339:2561   */\n    tag_29:\n        /* \"#utility.yul\":2432:2436   */\n      0x00\n        /* \"#utility.yul\":2470:2472   */\n      0x20\n        /* \"#utility.yul\":2459:2468   */\n      dup3\n        /* \"#utility.yul\":2455:2473   */\n      add\n        /* \"#utility.yul\":2447:2473   */\n      swap1\n      pop\n        /* \"#utility.yul\":2483:2554   */\n      tag_190\n        /* \"#utility.yul\":2551:2552   */\n      0x00\n        /* \"#utility.yul\":2540:2549   */\n      dup4\n        /* \"#utility.yul\":2536:2553   */\n      add\n        /* \"#utility.yul\":2527:2533   */\n      dup5\n        /* \"#utility.yul\":2483:2554   */\n      tag_136\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2339:2561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2663   */\n    tag_137:\n        /* \"#utility.yul\":2604:2611   */\n      0x00\n        /* \"#utility.yul\":2633:2657   */\n      tag_192\n        /* \"#utility.yul\":2651:2656   */\n      dup3\n        /* \"#utility.yul\":2633:2657   */\n      tag_124\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2622:2657   */\n      swap1\n      pop\n        /* \"#utility.yul\":2567:2663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2669:2791   */\n    tag_138:\n        /* \"#utility.yul\":2742:2766   */\n      tag_194\n        /* \"#utility.yul\":2760:2765   */\n      dup2\n        /* \"#utility.yul\":2742:2766   */\n      tag_137\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2735:2740   */\n      dup2\n        /* \"#utility.yul\":2732:2767   */\n      eq\n        /* \"#utility.yul\":2722:2785   */\n      tag_195\n      jumpi\n        /* \"#utility.yul\":2781:2782   */\n      0x00\n        /* \"#utility.yul\":2778:2779   */\n      dup1\n        /* \"#utility.yul\":2771:2783   */\n      revert\n        /* \"#utility.yul\":2722:2785   */\n    tag_195:\n        /* \"#utility.yul\":2669:2791   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2797:2936   */\n    tag_139:\n        /* \"#utility.yul\":2843:2848   */\n      0x00\n        /* \"#utility.yul\":2881:2887   */\n      dup2\n        /* \"#utility.yul\":2868:2888   */\n      calldataload\n        /* \"#utility.yul\":2859:2888   */\n      swap1\n      pop\n        /* \"#utility.yul\":2897:2930   */\n      tag_197\n        /* \"#utility.yul\":2924:2929   */\n      dup2\n        /* \"#utility.yul\":2897:2930   */\n      tag_138\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2797:2936   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2942:3271   */\n    tag_35:\n        /* \"#utility.yul\":3001:3007   */\n      0x00\n        /* \"#utility.yul\":3050:3052   */\n      0x20\n        /* \"#utility.yul\":3038:3047   */\n      dup3\n        /* \"#utility.yul\":3029:3036   */\n      dup5\n        /* \"#utility.yul\":3025:3048   */\n      sub\n        /* \"#utility.yul\":3021:3053   */\n      slt\n        /* \"#utility.yul\":3018:3137   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":3056:3135   */\n      tag_200\n      tag_131\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3018:3137   */\n    tag_199:\n        /* \"#utility.yul\":3176:3177   */\n      0x00\n        /* \"#utility.yul\":3201:3254   */\n      tag_201\n        /* \"#utility.yul\":3246:3253   */\n      dup5\n        /* \"#utility.yul\":3237:3243   */\n      dup3\n        /* \"#utility.yul\":3226:3235   */\n      dup6\n        /* \"#utility.yul\":3222:3244   */\n      add\n        /* \"#utility.yul\":3201:3254   */\n      tag_139\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3191:3254   */\n      swap2\n      pop\n        /* \"#utility.yul\":3147:3264   */\n      pop\n        /* \"#utility.yul\":2942:3271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3277:3609   */\n    tag_38:\n        /* \"#utility.yul\":3398:3402   */\n      0x00\n        /* \"#utility.yul\":3436:3438   */\n      0x40\n        /* \"#utility.yul\":3425:3434   */\n      dup3\n        /* \"#utility.yul\":3421:3439   */\n      add\n        /* \"#utility.yul\":3413:3439   */\n      swap1\n      pop\n        /* \"#utility.yul\":3449:3520   */\n      tag_203\n        /* \"#utility.yul\":3517:3518   */\n      0x00\n        /* \"#utility.yul\":3506:3515   */\n      dup4\n        /* \"#utility.yul\":3502:3519   */\n      add\n        /* \"#utility.yul\":3493:3499   */\n      dup6\n        /* \"#utility.yul\":3449:3520   */\n      tag_136\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3530:3602   */\n      tag_204\n        /* \"#utility.yul\":3598:3600   */\n      0x20\n        /* \"#utility.yul\":3587:3596   */\n      dup4\n        /* \"#utility.yul\":3583:3601   */\n      add\n        /* \"#utility.yul\":3574:3580   */\n      dup5\n        /* \"#utility.yul\":3530:3602   */\n      tag_136\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":3277:3609   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3615:3733   */\n    tag_140:\n        /* \"#utility.yul\":3702:3726   */\n      tag_206\n        /* \"#utility.yul\":3720:3725   */\n      dup2\n        /* \"#utility.yul\":3702:3726   */\n      tag_137\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":3697:3700   */\n      dup3\n        /* \"#utility.yul\":3690:3727   */\n      mstore\n        /* \"#utility.yul\":3615:3733   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3739:3961   */\n    tag_42:\n        /* \"#utility.yul\":3832:3836   */\n      0x00\n        /* \"#utility.yul\":3870:3872   */\n      0x20\n        /* \"#utility.yul\":3859:3868   */\n      dup3\n        /* \"#utility.yul\":3855:3873   */\n      add\n        /* \"#utility.yul\":3847:3873   */\n      swap1\n      pop\n        /* \"#utility.yul\":3883:3954   */\n      tag_208\n        /* \"#utility.yul\":3951:3952   */\n      0x00\n        /* \"#utility.yul\":3940:3949   */\n      dup4\n        /* \"#utility.yul\":3936:3953   */\n      add\n        /* \"#utility.yul\":3927:3933   */\n      dup5\n        /* \"#utility.yul\":3883:3954   */\n      tag_140\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3739:3961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3967:4075   */\n    tag_141:\n        /* \"#utility.yul\":4044:4068   */\n      tag_210\n        /* \"#utility.yul\":4062:4067   */\n      dup2\n        /* \"#utility.yul\":4044:4068   */\n      tag_133\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4039:4042   */\n      dup3\n        /* \"#utility.yul\":4032:4069   */\n      mstore\n        /* \"#utility.yul\":3967:4075   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4149:4666   */\n    tag_142:\n        /* \"#utility.yul\":4290:4294   */\n      0x40\n        /* \"#utility.yul\":4285:4288   */\n      dup3\n        /* \"#utility.yul\":4281:4295   */\n      add\n        /* \"#utility.yul\":4385:4389   */\n      0x00\n        /* \"#utility.yul\":4378:4383   */\n      dup3\n        /* \"#utility.yul\":4374:4390   */\n      add\n        /* \"#utility.yul\":4368:4391   */\n      mload\n        /* \"#utility.yul\":4404:4467   */\n      tag_212\n        /* \"#utility.yul\":4461:4465   */\n      0x00\n        /* \"#utility.yul\":4456:4459   */\n      dup6\n        /* \"#utility.yul\":4452:4466   */\n      add\n        /* \"#utility.yul\":4438:4450   */\n      dup3\n        /* \"#utility.yul\":4404:4467   */\n      tag_141\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4305:4477   */\n      pop\n        /* \"#utility.yul\":4567:4571   */\n      0x20\n        /* \"#utility.yul\":4560:4565   */\n      dup3\n        /* \"#utility.yul\":4556:4572   */\n      add\n        /* \"#utility.yul\":4550:4573   */\n      mload\n        /* \"#utility.yul\":4586:4649   */\n      tag_213\n        /* \"#utility.yul\":4643:4647   */\n      0x20\n        /* \"#utility.yul\":4638:4641   */\n      dup6\n        /* \"#utility.yul\":4634:4648   */\n      add\n        /* \"#utility.yul\":4620:4632   */\n      dup3\n        /* \"#utility.yul\":4586:4649   */\n      tag_141\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4487:4659   */\n      pop\n        /* \"#utility.yul\":4259:4666   */\n      pop\n        /* \"#utility.yul\":4149:4666   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4672:4982   */\n    tag_49:\n        /* \"#utility.yul\":4809:4813   */\n      0x00\n        /* \"#utility.yul\":4847:4849   */\n      0x40\n        /* \"#utility.yul\":4836:4845   */\n      dup3\n        /* \"#utility.yul\":4832:4850   */\n      add\n        /* \"#utility.yul\":4824:4850   */\n      swap1\n      pop\n        /* \"#utility.yul\":4860:4975   */\n      tag_215\n        /* \"#utility.yul\":4972:4973   */\n      0x00\n        /* \"#utility.yul\":4961:4970   */\n      dup4\n        /* \"#utility.yul\":4957:4974   */\n      add\n        /* \"#utility.yul\":4948:4954   */\n      dup5\n        /* \"#utility.yul\":4860:4975   */\n      tag_142\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4672:4982   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4988:5157   */\n    tag_143:\n        /* \"#utility.yul\":5072:5083   */\n      0x00\n        /* \"#utility.yul\":5106:5112   */\n      dup3\n        /* \"#utility.yul\":5101:5104   */\n      dup3\n        /* \"#utility.yul\":5094:5113   */\n      mstore\n        /* \"#utility.yul\":5146:5150   */\n      0x20\n        /* \"#utility.yul\":5141:5144   */\n      dup3\n        /* \"#utility.yul\":5137:5151   */\n      add\n        /* \"#utility.yul\":5122:5151   */\n      swap1\n      pop\n        /* \"#utility.yul\":4988:5157   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5163:5330   */\n    tag_144:\n        /* \"#utility.yul\":5303:5322   */\n      0x43616e6e6f742077697468647261772030000000000000000000000000000000\n        /* \"#utility.yul\":5299:5300   */\n      0x00\n        /* \"#utility.yul\":5291:5297   */\n      dup3\n        /* \"#utility.yul\":5287:5301   */\n      add\n        /* \"#utility.yul\":5280:5323   */\n      mstore\n        /* \"#utility.yul\":5163:5330   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5336:5702   */\n    tag_145:\n        /* \"#utility.yul\":5478:5481   */\n      0x00\n        /* \"#utility.yul\":5499:5566   */\n      tag_219\n        /* \"#utility.yul\":5563:5565   */\n      0x11\n        /* \"#utility.yul\":5558:5561   */\n      dup4\n        /* \"#utility.yul\":5499:5566   */\n      tag_143\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5492:5566   */\n      swap2\n      pop\n        /* \"#utility.yul\":5575:5668   */\n      tag_220\n        /* \"#utility.yul\":5664:5667   */\n      dup3\n        /* \"#utility.yul\":5575:5668   */\n      tag_144\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5693:5695   */\n      0x20\n        /* \"#utility.yul\":5688:5691   */\n      dup3\n        /* \"#utility.yul\":5684:5696   */\n      add\n        /* \"#utility.yul\":5677:5696   */\n      swap1\n      pop\n        /* \"#utility.yul\":5336:5702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5708:6127   */\n    tag_56:\n        /* \"#utility.yul\":5874:5878   */\n      0x00\n        /* \"#utility.yul\":5912:5914   */\n      0x20\n        /* \"#utility.yul\":5901:5910   */\n      dup3\n        /* \"#utility.yul\":5897:5915   */\n      add\n        /* \"#utility.yul\":5889:5915   */\n      swap1\n      pop\n        /* \"#utility.yul\":5961:5970   */\n      dup2\n        /* \"#utility.yul\":5955:5959   */\n      dup2\n        /* \"#utility.yul\":5951:5971   */\n      sub\n        /* \"#utility.yul\":5947:5948   */\n      0x00\n        /* \"#utility.yul\":5936:5945   */\n      dup4\n        /* \"#utility.yul\":5932:5949   */\n      add\n        /* \"#utility.yul\":5925:5972   */\n      mstore\n        /* \"#utility.yul\":5989:6120   */\n      tag_222\n        /* \"#utility.yul\":6115:6119   */\n      dup2\n        /* \"#utility.yul\":5989:6120   */\n      tag_145\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5981:6120   */\n      swap1\n      pop\n        /* \"#utility.yul\":5708:6127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6133:6302   */\n    tag_146:\n        /* \"#utility.yul\":6273:6294   */\n      0x546f6f206561726c792077697468647261772100000000000000000000000000\n        /* \"#utility.yul\":6269:6270   */\n      0x00\n        /* \"#utility.yul\":6261:6267   */\n      dup3\n        /* \"#utility.yul\":6257:6271   */\n      add\n        /* \"#utility.yul\":6250:6295   */\n      mstore\n        /* \"#utility.yul\":6133:6302   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6308:6674   */\n    tag_147:\n        /* \"#utility.yul\":6450:6453   */\n      0x00\n        /* \"#utility.yul\":6471:6538   */\n      tag_225\n        /* \"#utility.yul\":6535:6537   */\n      0x13\n        /* \"#utility.yul\":6530:6533   */\n      dup4\n        /* \"#utility.yul\":6471:6538   */\n      tag_143\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6464:6538   */\n      swap2\n      pop\n        /* \"#utility.yul\":6547:6640   */\n      tag_226\n        /* \"#utility.yul\":6636:6639   */\n      dup3\n        /* \"#utility.yul\":6547:6640   */\n      tag_146\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":6665:6667   */\n      0x20\n        /* \"#utility.yul\":6660:6663   */\n      dup3\n        /* \"#utility.yul\":6656:6668   */\n      add\n        /* \"#utility.yul\":6649:6668   */\n      swap1\n      pop\n        /* \"#utility.yul\":6308:6674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6680:7099   */\n    tag_59:\n        /* \"#utility.yul\":6846:6850   */\n      0x00\n        /* \"#utility.yul\":6884:6886   */\n      0x20\n        /* \"#utility.yul\":6873:6882   */\n      dup3\n        /* \"#utility.yul\":6869:6887   */\n      add\n        /* \"#utility.yul\":6861:6887   */\n      swap1\n      pop\n        /* \"#utility.yul\":6933:6942   */\n      dup2\n        /* \"#utility.yul\":6927:6931   */\n      dup2\n        /* \"#utility.yul\":6923:6943   */\n      sub\n        /* \"#utility.yul\":6919:6920   */\n      0x00\n        /* \"#utility.yul\":6908:6917   */\n      dup4\n        /* \"#utility.yul\":6904:6921   */\n      add\n        /* \"#utility.yul\":6897:6944   */\n      mstore\n        /* \"#utility.yul\":6961:7092   */\n      tag_228\n        /* \"#utility.yul\":7087:7091   */\n      dup2\n        /* \"#utility.yul\":6961:7092   */\n      tag_147\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6953:7092   */\n      swap1\n      pop\n        /* \"#utility.yul\":6680:7099   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7105:7437   */\n    tag_61:\n        /* \"#utility.yul\":7226:7230   */\n      0x00\n        /* \"#utility.yul\":7264:7266   */\n      0x40\n        /* \"#utility.yul\":7253:7262   */\n      dup3\n        /* \"#utility.yul\":7249:7267   */\n      add\n        /* \"#utility.yul\":7241:7267   */\n      swap1\n      pop\n        /* \"#utility.yul\":7277:7348   */\n      tag_230\n        /* \"#utility.yul\":7345:7346   */\n      0x00\n        /* \"#utility.yul\":7334:7343   */\n      dup4\n        /* \"#utility.yul\":7330:7347   */\n      add\n        /* \"#utility.yul\":7321:7327   */\n      dup6\n        /* \"#utility.yul\":7277:7348   */\n      tag_140\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":7358:7430   */\n      tag_231\n        /* \"#utility.yul\":7426:7428   */\n      0x20\n        /* \"#utility.yul\":7415:7424   */\n      dup4\n        /* \"#utility.yul\":7411:7429   */\n      add\n        /* \"#utility.yul\":7402:7408   */\n      dup5\n        /* \"#utility.yul\":7358:7430   */\n      tag_136\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7105:7437   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7443:7533   */\n    tag_148:\n        /* \"#utility.yul\":7477:7484   */\n      0x00\n        /* \"#utility.yul\":7520:7525   */\n      dup2\n        /* \"#utility.yul\":7513:7526   */\n      iszero\n        /* \"#utility.yul\":7506:7527   */\n      iszero\n        /* \"#utility.yul\":7495:7527   */\n      swap1\n      pop\n        /* \"#utility.yul\":7443:7533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7539:7655   */\n    tag_149:\n        /* \"#utility.yul\":7609:7630   */\n      tag_234\n        /* \"#utility.yul\":7624:7629   */\n      dup2\n        /* \"#utility.yul\":7609:7630   */\n      tag_148\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":7602:7607   */\n      dup2\n        /* \"#utility.yul\":7599:7631   */\n      eq\n        /* \"#utility.yul\":7589:7649   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":7645:7646   */\n      0x00\n        /* \"#utility.yul\":7642:7643   */\n      dup1\n        /* \"#utility.yul\":7635:7647   */\n      revert\n        /* \"#utility.yul\":7589:7649   */\n    tag_235:\n        /* \"#utility.yul\":7539:7655   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7661:7798   */\n    tag_150:\n        /* \"#utility.yul\":7715:7720   */\n      0x00\n        /* \"#utility.yul\":7746:7752   */\n      dup2\n        /* \"#utility.yul\":7740:7753   */\n      mload\n        /* \"#utility.yul\":7731:7753   */\n      swap1\n      pop\n        /* \"#utility.yul\":7762:7792   */\n      tag_237\n        /* \"#utility.yul\":7786:7791   */\n      dup2\n        /* \"#utility.yul\":7762:7792   */\n      tag_149\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7661:7798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7804:8149   */\n    tag_65:\n        /* \"#utility.yul\":7871:7877   */\n      0x00\n        /* \"#utility.yul\":7920:7922   */\n      0x20\n        /* \"#utility.yul\":7908:7917   */\n      dup3\n        /* \"#utility.yul\":7899:7906   */\n      dup5\n        /* \"#utility.yul\":7895:7918   */\n      sub\n        /* \"#utility.yul\":7891:7923   */\n      slt\n        /* \"#utility.yul\":7888:8007   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":7926:8005   */\n      tag_240\n      tag_131\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7888:8007   */\n    tag_239:\n        /* \"#utility.yul\":8046:8047   */\n      0x00\n        /* \"#utility.yul\":8071:8132   */\n      tag_241\n        /* \"#utility.yul\":8124:8131   */\n      dup5\n        /* \"#utility.yul\":8115:8121   */\n      dup3\n        /* \"#utility.yul\":8104:8113   */\n      dup6\n        /* \"#utility.yul\":8100:8122   */\n      add\n        /* \"#utility.yul\":8071:8132   */\n      tag_150\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":8061:8132   */\n      swap2\n      pop\n        /* \"#utility.yul\":8017:8142   */\n      pop\n        /* \"#utility.yul\":7804:8149   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8155:8320   */\n    tag_151:\n        /* \"#utility.yul\":8295:8312   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":8291:8292   */\n      0x00\n        /* \"#utility.yul\":8283:8289   */\n      dup3\n        /* \"#utility.yul\":8279:8293   */\n      add\n        /* \"#utility.yul\":8272:8313   */\n      mstore\n        /* \"#utility.yul\":8155:8320   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8326:8692   */\n    tag_152:\n        /* \"#utility.yul\":8468:8471   */\n      0x00\n        /* \"#utility.yul\":8489:8556   */\n      tag_244\n        /* \"#utility.yul\":8553:8555   */\n      0x0f\n        /* \"#utility.yul\":8548:8551   */\n      dup4\n        /* \"#utility.yul\":8489:8556   */\n      tag_143\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8482:8556   */\n      swap2\n      pop\n        /* \"#utility.yul\":8565:8658   */\n      tag_245\n        /* \"#utility.yul\":8654:8657   */\n      dup3\n        /* \"#utility.yul\":8565:8658   */\n      tag_151\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":8683:8685   */\n      0x20\n        /* \"#utility.yul\":8678:8681   */\n      dup3\n        /* \"#utility.yul\":8674:8686   */\n      add\n        /* \"#utility.yul\":8667:8686   */\n      swap1\n      pop\n        /* \"#utility.yul\":8326:8692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9117   */\n    tag_68:\n        /* \"#utility.yul\":8864:8868   */\n      0x00\n        /* \"#utility.yul\":8902:8904   */\n      0x20\n        /* \"#utility.yul\":8891:8900   */\n      dup3\n        /* \"#utility.yul\":8887:8905   */\n      add\n        /* \"#utility.yul\":8879:8905   */\n      swap1\n      pop\n        /* \"#utility.yul\":8951:8960   */\n      dup2\n        /* \"#utility.yul\":8945:8949   */\n      dup2\n        /* \"#utility.yul\":8941:8961   */\n      sub\n        /* \"#utility.yul\":8937:8938   */\n      0x00\n        /* \"#utility.yul\":8926:8935   */\n      dup4\n        /* \"#utility.yul\":8922:8939   */\n      add\n        /* \"#utility.yul\":8915:8962   */\n      mstore\n        /* \"#utility.yul\":8979:9110   */\n      tag_247\n        /* \"#utility.yul\":9105:9109   */\n      dup2\n        /* \"#utility.yul\":8979:9110   */\n      tag_152\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":8971:9110   */\n      swap1\n      pop\n        /* \"#utility.yul\":8698:9117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9123:9303   */\n    tag_153:\n        /* \"#utility.yul\":9171:9248   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9168:9169   */\n      0x00\n        /* \"#utility.yul\":9161:9249   */\n      mstore\n        /* \"#utility.yul\":9268:9272   */\n      0x11\n        /* \"#utility.yul\":9265:9266   */\n      0x04\n        /* \"#utility.yul\":9258:9273   */\n      mstore\n        /* \"#utility.yul\":9292:9296   */\n      0x24\n        /* \"#utility.yul\":9289:9290   */\n      0x00\n        /* \"#utility.yul\":9282:9297   */\n      revert\n        /* \"#utility.yul\":9309:9503   */\n    tag_70:\n        /* \"#utility.yul\":9349:9353   */\n      0x00\n        /* \"#utility.yul\":9369:9389   */\n      tag_250\n        /* \"#utility.yul\":9387:9388   */\n      dup3\n        /* \"#utility.yul\":9369:9389   */\n      tag_133\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":9364:9389   */\n      swap2\n      pop\n        /* \"#utility.yul\":9403:9423   */\n      tag_251\n        /* \"#utility.yul\":9421:9422   */\n      dup4\n        /* \"#utility.yul\":9403:9423   */\n      tag_133\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":9398:9423   */\n      swap3\n      pop\n        /* \"#utility.yul\":9447:9448   */\n      dup3\n        /* \"#utility.yul\":9444:9445   */\n      dup3\n        /* \"#utility.yul\":9440:9449   */\n      sub\n        /* \"#utility.yul\":9432:9449   */\n      swap1\n      pop\n        /* \"#utility.yul\":9471:9472   */\n      dup2\n        /* \"#utility.yul\":9465:9469   */\n      dup2\n        /* \"#utility.yul\":9462:9473   */\n      gt\n        /* \"#utility.yul\":9459:9496   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":9476:9494   */\n      tag_253\n      tag_153\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":9459:9496   */\n    tag_252:\n        /* \"#utility.yul\":9309:9503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9509:9684   */\n    tag_154:\n        /* \"#utility.yul\":9649:9676   */\n      0x7573657220616c72656164792068617320737461636b696e6700000000000000\n        /* \"#utility.yul\":9645:9646   */\n      0x00\n        /* \"#utility.yul\":9637:9643   */\n      dup3\n        /* \"#utility.yul\":9633:9647   */\n      add\n        /* \"#utility.yul\":9626:9677   */\n      mstore\n        /* \"#utility.yul\":9509:9684   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9690:10056   */\n    tag_155:\n        /* \"#utility.yul\":9832:9835   */\n      0x00\n        /* \"#utility.yul\":9853:9920   */\n      tag_256\n        /* \"#utility.yul\":9917:9919   */\n      0x19\n        /* \"#utility.yul\":9912:9915   */\n      dup4\n        /* \"#utility.yul\":9853:9920   */\n      tag_143\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":9846:9920   */\n      swap2\n      pop\n        /* \"#utility.yul\":9929:10022   */\n      tag_257\n        /* \"#utility.yul\":10018:10021   */\n      dup3\n        /* \"#utility.yul\":9929:10022   */\n      tag_154\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":10047:10049   */\n      0x20\n        /* \"#utility.yul\":10042:10045   */\n      dup3\n        /* \"#utility.yul\":10038:10050   */\n      add\n        /* \"#utility.yul\":10031:10050   */\n      swap1\n      pop\n        /* \"#utility.yul\":9690:10056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10062:10481   */\n    tag_86:\n        /* \"#utility.yul\":10228:10232   */\n      0x00\n        /* \"#utility.yul\":10266:10268   */\n      0x20\n        /* \"#utility.yul\":10255:10264   */\n      dup3\n        /* \"#utility.yul\":10251:10269   */\n      add\n        /* \"#utility.yul\":10243:10269   */\n      swap1\n      pop\n        /* \"#utility.yul\":10315:10324   */\n      dup2\n        /* \"#utility.yul\":10309:10313   */\n      dup2\n        /* \"#utility.yul\":10305:10325   */\n      sub\n        /* \"#utility.yul\":10301:10302   */\n      0x00\n        /* \"#utility.yul\":10290:10299   */\n      dup4\n        /* \"#utility.yul\":10286:10303   */\n      add\n        /* \"#utility.yul\":10279:10326   */\n      mstore\n        /* \"#utility.yul\":10343:10474   */\n      tag_259\n        /* \"#utility.yul\":10469:10473   */\n      dup2\n        /* \"#utility.yul\":10343:10474   */\n      tag_155\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":10335:10474   */\n      swap1\n      pop\n        /* \"#utility.yul\":10062:10481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10487:10678   */\n    tag_88:\n        /* \"#utility.yul\":10527:10530   */\n      0x00\n        /* \"#utility.yul\":10546:10566   */\n      tag_261\n        /* \"#utility.yul\":10564:10565   */\n      dup3\n        /* \"#utility.yul\":10546:10566   */\n      tag_133\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":10541:10566   */\n      swap2\n      pop\n        /* \"#utility.yul\":10580:10600   */\n      tag_262\n        /* \"#utility.yul\":10598:10599   */\n      dup4\n        /* \"#utility.yul\":10580:10600   */\n      tag_133\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":10575:10600   */\n      swap3\n      pop\n        /* \"#utility.yul\":10623:10624   */\n      dup3\n        /* \"#utility.yul\":10620:10621   */\n      dup3\n        /* \"#utility.yul\":10616:10625   */\n      add\n        /* \"#utility.yul\":10609:10625   */\n      swap1\n      pop\n        /* \"#utility.yul\":10644:10647   */\n      dup1\n        /* \"#utility.yul\":10641:10642   */\n      dup3\n        /* \"#utility.yul\":10638:10648   */\n      gt\n        /* \"#utility.yul\":10635:10671   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":10651:10669   */\n      tag_264\n      tag_153\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":10635:10671   */\n    tag_263:\n        /* \"#utility.yul\":10487:10678   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10684:11126   */\n    tag_90:\n        /* \"#utility.yul\":10833:10837   */\n      0x00\n        /* \"#utility.yul\":10871:10873   */\n      0x60\n        /* \"#utility.yul\":10860:10869   */\n      dup3\n        /* \"#utility.yul\":10856:10874   */\n      add\n        /* \"#utility.yul\":10848:10874   */\n      swap1\n      pop\n        /* \"#utility.yul\":10884:10955   */\n      tag_266\n        /* \"#utility.yul\":10952:10953   */\n      0x00\n        /* \"#utility.yul\":10941:10950   */\n      dup4\n        /* \"#utility.yul\":10937:10954   */\n      add\n        /* \"#utility.yul\":10928:10934   */\n      dup7\n        /* \"#utility.yul\":10884:10955   */\n      tag_140\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":10965:11037   */\n      tag_267\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11022:11031   */\n      dup4\n        /* \"#utility.yul\":11018:11036   */\n      add\n        /* \"#utility.yul\":11009:11015   */\n      dup6\n        /* \"#utility.yul\":10965:11037   */\n      tag_140\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":11047:11119   */\n      tag_268\n        /* \"#utility.yul\":11115:11117   */\n      0x40\n        /* \"#utility.yul\":11104:11113   */\n      dup4\n        /* \"#utility.yul\":11100:11118   */\n      add\n        /* \"#utility.yul\":11091:11097   */\n      dup5\n        /* \"#utility.yul\":11047:11119   */\n      tag_136\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":10684:11126   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11132:11313   */\n    tag_156:\n        /* \"#utility.yul\":11272:11305   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":11268:11269   */\n      0x00\n        /* \"#utility.yul\":11260:11266   */\n      dup3\n        /* \"#utility.yul\":11256:11270   */\n      add\n        /* \"#utility.yul\":11249:11306   */\n      mstore\n        /* \"#utility.yul\":11132:11313   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11319:11685   */\n    tag_157:\n        /* \"#utility.yul\":11461:11464   */\n      0x00\n        /* \"#utility.yul\":11482:11549   */\n      tag_271\n        /* \"#utility.yul\":11546:11548   */\n      0x1f\n        /* \"#utility.yul\":11541:11544   */\n      dup4\n        /* \"#utility.yul\":11482:11549   */\n      tag_143\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":11475:11549   */\n      swap2\n      pop\n        /* \"#utility.yul\":11558:11651   */\n      tag_272\n        /* \"#utility.yul\":11647:11650   */\n      dup3\n        /* \"#utility.yul\":11558:11651   */\n      tag_156\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":11676:11678   */\n      0x20\n        /* \"#utility.yul\":11671:11674   */\n      dup3\n        /* \"#utility.yul\":11667:11679   */\n      add\n        /* \"#utility.yul\":11660:11679   */\n      swap1\n      pop\n        /* \"#utility.yul\":11319:11685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11691:12110   */\n    tag_113:\n        /* \"#utility.yul\":11857:11861   */\n      0x00\n        /* \"#utility.yul\":11895:11897   */\n      0x20\n        /* \"#utility.yul\":11884:11893   */\n      dup3\n        /* \"#utility.yul\":11880:11898   */\n      add\n        /* \"#utility.yul\":11872:11898   */\n      swap1\n      pop\n        /* \"#utility.yul\":11944:11953   */\n      dup2\n        /* \"#utility.yul\":11938:11942   */\n      dup2\n        /* \"#utility.yul\":11934:11954   */\n      sub\n        /* \"#utility.yul\":11930:11931   */\n      0x00\n        /* \"#utility.yul\":11919:11928   */\n      dup4\n        /* \"#utility.yul\":11915:11932   */\n      add\n        /* \"#utility.yul\":11908:11955   */\n      mstore\n        /* \"#utility.yul\":11972:12103   */\n      tag_274\n        /* \"#utility.yul\":12098:12102   */\n      dup2\n        /* \"#utility.yul\":11972:12103   */\n      tag_157\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":11964:12103   */\n      swap1\n      pop\n        /* \"#utility.yul\":11691:12110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bf1621c1a6699b27dce037c8342706e53847802d073e24f81395c3f23e36871f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_371": {
									"entryPoint": null,
									"id": 371,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 255,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$290_fromMemory": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$290_fromMemory": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$290": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$290": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1751:5",
										"nodeType": "YulBlock",
										"src": "0:1751:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "627:51:5",
													"nodeType": "YulBlock",
													"src": "627:51:5",
													"statements": [
														{
															"nativeSrc": "637:35:5",
															"nodeType": "YulAssignment",
															"src": "637:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:5"
																},
																"nativeSrc": "648:24:5",
																"nodeType": "YulFunctionCall",
																"src": "648:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$290",
												"nativeSrc": "568:110:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:5",
														"nodeType": "YulTypedName",
														"src": "609:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:5",
														"nodeType": "YulTypedName",
														"src": "619:7:5",
														"type": ""
													}
												],
												"src": "568:110:5"
											},
											{
												"body": {
													"nativeSrc": "741:93:5",
													"nodeType": "YulBlock",
													"src": "741:93:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:5",
																"nodeType": "YulBlock",
																"src": "812:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:5",
																					"nodeType": "YulLiteral",
																					"src": "821:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:5",
																					"nodeType": "YulLiteral",
																					"src": "824:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:5"
																			},
																			"nativeSrc": "814:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:5"
																		},
																		"nativeSrc": "814:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$290",
																					"nativeSrc": "771:31:5",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:5"
																				},
																				"nativeSrc": "771:38:5",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:5"
																		},
																		"nativeSrc": "761:49:5",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:5"
																},
																"nativeSrc": "754:57:5",
																"nodeType": "YulFunctionCall",
																"src": "754:57:5"
															},
															"nativeSrc": "751:77:5",
															"nodeType": "YulIf",
															"src": "751:77:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$290",
												"nativeSrc": "684:150:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:5",
														"nodeType": "YulTypedName",
														"src": "734:5:5",
														"type": ""
													}
												],
												"src": "684:150:5"
											},
											{
												"body": {
													"nativeSrc": "917:94:5",
													"nodeType": "YulBlock",
													"src": "917:94:5",
													"statements": [
														{
															"nativeSrc": "927:22:5",
															"nodeType": "YulAssignment",
															"src": "927:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:5"
																},
																"nativeSrc": "936:13:5",
																"nodeType": "YulFunctionCall",
																"src": "936:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$290",
																	"nativeSrc": "958:40:5",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:5"
																},
																"nativeSrc": "958:47:5",
																"nodeType": "YulFunctionCall",
																"src": "958:47:5"
															},
															"nativeSrc": "958:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$290_fromMemory",
												"nativeSrc": "840:171:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:5",
														"nodeType": "YulTypedName",
														"src": "895:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:5",
														"nodeType": "YulTypedName",
														"src": "903:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:5",
														"nodeType": "YulTypedName",
														"src": "911:5:5",
														"type": ""
													}
												],
												"src": "840:171:5"
											},
											{
												"body": {
													"nativeSrc": "1108:288:5",
													"nodeType": "YulBlock",
													"src": "1108:288:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:5",
																"nodeType": "YulBlock",
																"src": "1154:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:5"
																			},
																			"nativeSrc": "1156:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:5"
																		},
																		"nativeSrc": "1156:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:5"
																		},
																		"nativeSrc": "1125:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:5"
																},
																"nativeSrc": "1121:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:5"
															},
															"nativeSrc": "1118:119:5",
															"nodeType": "YulIf",
															"src": "1118:119:5"
														},
														{
															"nativeSrc": "1247:142:5",
															"nodeType": "YulBlock",
															"src": "1247:142:5",
															"statements": [
																{
																	"nativeSrc": "1262:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:88:5",
																	"nodeType": "YulAssignment",
																	"src": "1291:88:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1351:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1351:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1362:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1362:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1347:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1347:3:5"
																				},
																				"nativeSrc": "1347:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1347:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$290_fromMemory",
																			"nativeSrc": "1301:45:5",
																			"nodeType": "YulIdentifier",
																			"src": "1301:45:5"
																		},
																		"nativeSrc": "1301:78:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:78:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$290_fromMemory",
												"nativeSrc": "1017:379:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:5",
														"nodeType": "YulTypedName",
														"src": "1078:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:5",
														"nodeType": "YulTypedName",
														"src": "1089:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:5",
														"nodeType": "YulTypedName",
														"src": "1101:6:5",
														"type": ""
													}
												],
												"src": "1017:379:5"
											},
											{
												"body": {
													"nativeSrc": "1467:53:5",
													"nodeType": "YulBlock",
													"src": "1467:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1484:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1484:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1507:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1507:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1489:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1489:17:5"
																		},
																		"nativeSrc": "1489:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1489:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1477:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:5"
																},
																"nativeSrc": "1477:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1477:37:5"
															},
															"nativeSrc": "1477:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1477:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1402:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1455:5:5",
														"nodeType": "YulTypedName",
														"src": "1455:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1462:3:5",
														"nodeType": "YulTypedName",
														"src": "1462:3:5",
														"type": ""
													}
												],
												"src": "1402:118:5"
											},
											{
												"body": {
													"nativeSrc": "1624:124:5",
													"nodeType": "YulBlock",
													"src": "1624:124:5",
													"statements": [
														{
															"nativeSrc": "1634:26:5",
															"nodeType": "YulAssignment",
															"src": "1634:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1646:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1646:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1657:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1642:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1642:3:5"
																},
																"nativeSrc": "1642:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1642:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1634:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1634:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1714:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1714:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1727:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1727:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1738:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1738:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1723:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1723:3:5"
																		},
																		"nativeSrc": "1723:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1723:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1670:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1670:43:5"
																},
																"nativeSrc": "1670:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1670:71:5"
															},
															"nativeSrc": "1670:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1670:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1526:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1596:9:5",
														"nodeType": "YulTypedName",
														"src": "1596:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1608:6:5",
														"nodeType": "YulTypedName",
														"src": "1608:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1619:4:5",
														"nodeType": "YulTypedName",
														"src": "1619:4:5",
														"type": ""
													}
												],
												"src": "1526:222:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$290(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$290(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$290(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$290_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$290(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$290_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$290_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516112c43803806112c483398181016040528101906100319190610231565b3360015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a9575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a0919061026b565b60405180910390fd5b6100b8816100ff60201b60201c565b508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610284565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101ef826101c6565b9050919050565b5f610200826101e5565b9050919050565b610210816101f6565b811461021a575f80fd5b50565b5f8151905061022b81610207565b92915050565b5f60208284031215610246576102456101c2565b5b5f6102538482850161021d565b91505092915050565b610265816101e5565b82525050565b5f60208201905061027e5f83018461025c565b92915050565b611033806102915f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c8063817b1cd211610064578063817b1cd21461010c578063821460f51461012a5780638da5cb5b1461015b578063f2fde38b14610179578063fc0e3d90146101955761009c565b80633ccfd60b146100a0578063715018a6146100aa57806372f702f3146100b45780637b0472f0146100d25780637bc74225146100ee575b5f80fd5b6100a86101b3565b005b6100b2610466565b005b6100bc610479565b6040516100c99190610ad6565b60405180910390f35b6100ec60048036038101906100e79190610b26565b61049e565b005b6100f661075a565b6040516101039190610b73565b60405180910390f35b610114610763565b6040516101219190610b73565b60405180910390f35b610144600480360381019061013f9190610bc7565b610769565b604051610152929190610bf2565b60405180910390f35b610163610789565b6040516101709190610c28565b60405180910390f35b610193600480360381019061018e9190610bc7565b6107b1565b005b61019d610835565b6040516101aa9190610c7d565b60405180910390f35b6101bb61089d565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f820154815260200160018201548152505090505f815f01511161025e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025590610cf0565b60405180910390fd5b42816020015111156102a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029c90610d58565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33845f01516040518363ffffffff1660e01b8152600401610305929190610d76565b6020604051808303815f875af1158015610321573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103459190610dd2565b905080610387576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037e90610e47565b60405180910390fd5b815f015160035f82825461039b9190610e92565b9250508190555060405180604001604052805f81526020015f81525060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0155602082015181600101559050503373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5835f01516040516104529190610b73565b60405180910390a250506104646108ea565b565b61046e6108f3565b6104775f61097a565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104a661089d565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015414801561053357505f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010154145b610572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056990610f0f565b60405180910390fd5b8160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f018190555080426105c29190610f2d565b60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161066593929190610f60565b6020604051808303815f875af1158015610681573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106a59190610dd2565b9050806106e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106de90610e47565b60405180910390fd5b8260035f8282546106f89190610f2d565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d846040516107459190610b73565b60405180910390a2506107566108ea565b5050565b5f600354905090565b60035481565b6004602052805f5260405f205f91509050805f0154908060010154905082565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107b96108f3565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610829575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108209190610c28565b60405180910390fd5b6108328161097a565b50565b61083d610a44565b60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f8201548152602001600182015481525050905090565b60025f54036108e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d890610fdf565b60405180910390fd5b60025f81905550565b60015f81905550565b6108fb610a3d565b73ffffffffffffffffffffffffffffffffffffffff16610919610789565b73ffffffffffffffffffffffffffffffffffffffff16146109785761093c610a3d565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161096f9190610c28565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b60405180604001604052805f81526020015f81525090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610a9e610a99610a9484610a5c565b610a7b565b610a5c565b9050919050565b5f610aaf82610a84565b9050919050565b5f610ac082610aa5565b9050919050565b610ad081610ab6565b82525050565b5f602082019050610ae95f830184610ac7565b92915050565b5f80fd5b5f819050919050565b610b0581610af3565b8114610b0f575f80fd5b50565b5f81359050610b2081610afc565b92915050565b5f8060408385031215610b3c57610b3b610aef565b5b5f610b4985828601610b12565b9250506020610b5a85828601610b12565b9150509250929050565b610b6d81610af3565b82525050565b5f602082019050610b865f830184610b64565b92915050565b5f610b9682610a5c565b9050919050565b610ba681610b8c565b8114610bb0575f80fd5b50565b5f81359050610bc181610b9d565b92915050565b5f60208284031215610bdc57610bdb610aef565b5b5f610be984828501610bb3565b91505092915050565b5f604082019050610c055f830185610b64565b610c126020830184610b64565b9392505050565b610c2281610b8c565b82525050565b5f602082019050610c3b5f830184610c19565b92915050565b610c4a81610af3565b82525050565b604082015f820151610c645f850182610c41565b506020820151610c776020850182610c41565b50505050565b5f604082019050610c905f830184610c50565b92915050565b5f82825260208201905092915050565b7f43616e6e6f7420776974686472617720300000000000000000000000000000005f82015250565b5f610cda601183610c96565b9150610ce582610ca6565b602082019050919050565b5f6020820190508181035f830152610d0781610cce565b9050919050565b7f546f6f206561726c7920776974686472617721000000000000000000000000005f82015250565b5f610d42601383610c96565b9150610d4d82610d0e565b602082019050919050565b5f6020820190508181035f830152610d6f81610d36565b9050919050565b5f604082019050610d895f830185610c19565b610d966020830184610b64565b9392505050565b5f8115159050919050565b610db181610d9d565b8114610dbb575f80fd5b50565b5f81519050610dcc81610da8565b92915050565b5f60208284031215610de757610de6610aef565b5b5f610df484828501610dbe565b91505092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f610e31600f83610c96565b9150610e3c82610dfd565b602082019050919050565b5f6020820190508181035f830152610e5e81610e25565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e9c82610af3565b9150610ea783610af3565b9250828203905081811115610ebf57610ebe610e65565b5b92915050565b7f7573657220616c72656164792068617320737461636b696e67000000000000005f82015250565b5f610ef9601983610c96565b9150610f0482610ec5565b602082019050919050565b5f6020820190508181035f830152610f2681610eed565b9050919050565b5f610f3782610af3565b9150610f4283610af3565b9250828201905080821115610f5a57610f59610e65565b5b92915050565b5f606082019050610f735f830186610c19565b610f806020830185610c19565b610f8d6040830184610b64565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610fc9601f83610c96565b9150610fd482610f95565b602082019050919050565b5f6020820190508181035f830152610ff681610fbd565b905091905056fea2646970667358221220bf1621c1a6699b27dce037c8342706e53847802d073e24f81395c3f23e36871f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x12C4 CODESIZE SUB DUP1 PUSH2 0x12C4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x231 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x26B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0xFF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x284 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF DUP3 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x200 DUP3 PUSH2 0x1E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x210 DUP2 PUSH2 0x1F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x22B DUP2 PUSH2 0x207 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x246 JUMPI PUSH2 0x245 PUSH2 0x1C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x253 DUP5 DUP3 DUP6 ADD PUSH2 0x21D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x265 DUP2 PUSH2 0x1E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27E PUSH0 DUP4 ADD DUP5 PUSH2 0x25C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1033 DUP1 PUSH2 0x291 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x821460F5 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xFC0E3D90 EQ PUSH2 0x195 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x7BC74225 EQ PUSH2 0xEE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x1B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2 PUSH2 0x466 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBC PUSH2 0x479 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF6 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x769 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP3 SWAP2 SWAP1 PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x7B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19D PUSH2 0x835 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH2 0x89D JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD GT PUSH2 0x25E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x255 SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C SWAP1 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH0 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x305 SWAP3 SWAP2 SWAP1 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x321 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0xE47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 ADD MLOAD PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x464 PUSH2 0x8EA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x46E PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x477 PUSH0 PUSH2 0x97A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4A6 PUSH2 0x89D JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x533 JUMPI POP PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST PUSH2 0x572 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x569 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP1 TIMESTAMP PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x665 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x681 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x6E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DE SWAP1 PUSH2 0xE47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD PUSH2 0x745 SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x756 PUSH2 0x8EA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7B9 PUSH2 0x8F3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x829 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x832 DUP2 PUSH2 0x97A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x83D PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x8E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D8 SWAP1 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x8FB PUSH2 0xA3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x919 PUSH2 0x789 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x978 JUMPI PUSH2 0x93C PUSH2 0xA3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96F SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA9E PUSH2 0xA99 PUSH2 0xA94 DUP5 PUSH2 0xA5C JUMP JUMPDEST PUSH2 0xA7B JUMP JUMPDEST PUSH2 0xA5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAAF DUP3 PUSH2 0xA84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAC0 DUP3 PUSH2 0xAA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD0 DUP2 PUSH2 0xAB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAE9 PUSH0 DUP4 ADD DUP5 PUSH2 0xAC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP2 EQ PUSH2 0xB0F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB20 DUP2 PUSH2 0xAFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB3C JUMPI PUSH2 0xB3B PUSH2 0xAEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB49 DUP6 DUP3 DUP7 ADD PUSH2 0xB12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB5A DUP6 DUP3 DUP7 ADD PUSH2 0xB12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6D DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB86 PUSH0 DUP4 ADD DUP5 PUSH2 0xB64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB96 DUP3 PUSH2 0xA5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA6 DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP2 EQ PUSH2 0xBB0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDC JUMPI PUSH2 0xBDB PUSH2 0xAEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBE9 DUP5 DUP3 DUP6 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC05 PUSH0 DUP4 ADD DUP6 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0xC12 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB64 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC22 DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC3B PUSH0 DUP4 ADD DUP5 PUSH2 0xC19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4A DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xC64 PUSH0 DUP6 ADD DUP3 PUSH2 0xC41 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xC77 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xC41 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC90 PUSH0 DUP4 ADD DUP5 PUSH2 0xC50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCDA PUSH1 0x11 DUP4 PUSH2 0xC96 JUMP JUMPDEST SWAP2 POP PUSH2 0xCE5 DUP3 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD07 DUP2 PUSH2 0xCCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6F206561726C792077697468647261772100000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD42 PUSH1 0x13 DUP4 PUSH2 0xC96 JUMP JUMPDEST SWAP2 POP PUSH2 0xD4D DUP3 PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD6F DUP2 PUSH2 0xD36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD89 PUSH0 DUP4 ADD DUP6 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0xD96 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB64 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB1 DUP2 PUSH2 0xD9D JUMP JUMPDEST DUP2 EQ PUSH2 0xDBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDCC DUP2 PUSH2 0xDA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE7 JUMPI PUSH2 0xDE6 PUSH2 0xAEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDF4 DUP5 DUP3 DUP6 ADD PUSH2 0xDBE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE31 PUSH1 0xF DUP4 PUSH2 0xC96 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3C DUP3 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE5E DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE9C DUP3 PUSH2 0xAF3 JUMP JUMPDEST SWAP2 POP PUSH2 0xEA7 DUP4 PUSH2 0xAF3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xE65 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7573657220616C72656164792068617320737461636B696E6700000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEF9 PUSH1 0x19 DUP4 PUSH2 0xC96 JUMP JUMPDEST SWAP2 POP PUSH2 0xF04 DUP3 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF26 DUP2 PUSH2 0xEED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF37 DUP3 PUSH2 0xAF3 JUMP JUMPDEST SWAP2 POP PUSH2 0xF42 DUP4 PUSH2 0xAF3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF5A JUMPI PUSH2 0xF59 PUSH2 0xE65 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF73 PUSH0 DUP4 ADD DUP7 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0xF80 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0xF8D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB64 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFC9 PUSH1 0x1F DUP4 PUSH2 0xC96 JUMP JUMPDEST SWAP2 POP PUSH2 0xFD4 DUP3 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFF6 DUP2 PUSH2 0xFBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF AND 0x21 0xC1 0xA6 PUSH10 0x9B27DCE037C8342706E5 CODESIZE SELFBALANCE DUP1 0x2D SMOD RETURNDATACOPY 0x24 0xF8 SGT SWAP6 0xC3 CALLCODE RETURNDATACOPY CALLDATASIZE DUP8 0x1F PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "232:1887:4:-:0;;;636:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;678:10;1716:1:1;1821:7;:22;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;715:13:4::1;700:12;;:28;;;;;;;;;;;;;;;;;;636:99:::0;232:1887;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:379::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:78;1371:7;1362:6;1351:9;1347:22;1301:78;:::i;:::-;1291:88;;1247:142;1017:379;;;;:::o;1402:118::-;1489:24;1507:5;1489:24;:::i;:::-;1484:3;1477:37;1402:118;;:::o;1526:222::-;1619:4;1657:2;1646:9;1642:18;1634:26;;1670:71;1738:1;1727:9;1723:17;1714:6;1670:71;:::i;:::-;1526:222;;;;:::o;232:1887:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2291,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_302": {
									"entryPoint": 2621,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 2282,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 2205,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2426,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getStake_459": {
									"entryPoint": 2101,
									"id": 459,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalStake_467": {
									"entryPoint": 1882,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1929,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1126,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_447": {
									"entryPoint": 1182,
									"id": 447,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakingToken_332": {
									"entryPoint": 1145,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_334": {
									"entryPoint": 1891,
									"id": 334,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1969,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userStaking_339": {
									"entryPoint": 1897,
									"id": 339,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_535": {
									"entryPoint": 435,
									"id": 535,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack": {
									"entryPoint": 2759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$344_memory_ptr_to_t_struct$_Stake_$344_memory_ptr_fromStack": {
									"entryPoint": 3152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3936,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3446,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed": {
									"entryPoint": 2774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Stake_$344_memory_ptr__to_t_struct$_Stake_$344_memory_ptr__fromStack_reversed": {
									"entryPoint": 3197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3058,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$290_to_t_address": {
									"entryPoint": 2742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3685,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2799,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 3581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0": {
									"entryPoint": 3238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0": {
									"entryPoint": 3781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 3989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5": {
									"entryPoint": 3342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12113:5",
										"nodeType": "YulBlock",
										"src": "0:12113:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:5",
													"nodeType": "YulBlock",
													"src": "52:81:5",
													"statements": [
														{
															"nativeSrc": "62:65:5",
															"nodeType": "YulAssignment",
															"src": "62:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:5",
																		"nodeType": "YulLiteral",
																		"src": "84:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:5"
																},
																"nativeSrc": "73:54:5",
																"nodeType": "YulFunctionCall",
																"src": "73:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:5",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:5",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:126:5"
											},
											{
												"body": {
													"nativeSrc": "171:28:5",
													"nodeType": "YulBlock",
													"src": "171:28:5",
													"statements": [
														{
															"nativeSrc": "181:12:5",
															"nodeType": "YulAssignment",
															"src": "181:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:5",
																"nodeType": "YulIdentifier",
																"src": "188:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:5",
														"nodeType": "YulTypedName",
														"src": "157:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:5",
														"nodeType": "YulTypedName",
														"src": "167:3:5",
														"type": ""
													}
												],
												"src": "139:60:5"
											},
											{
												"body": {
													"nativeSrc": "265:82:5",
													"nodeType": "YulBlock",
													"src": "265:82:5",
													"statements": [
														{
															"nativeSrc": "275:66:5",
															"nodeType": "YulAssignment",
															"src": "275:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:5"
																				},
																				"nativeSrc": "315:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:5"
																		},
																		"nativeSrc": "306:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:5"
																},
																"nativeSrc": "288:53:5",
																"nodeType": "YulFunctionCall",
																"src": "288:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:5",
														"nodeType": "YulTypedName",
														"src": "245:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:5",
														"nodeType": "YulTypedName",
														"src": "255:9:5",
														"type": ""
													}
												],
												"src": "205:142:5"
											},
											{
												"body": {
													"nativeSrc": "413:66:5",
													"nodeType": "YulBlock",
													"src": "413:66:5",
													"statements": [
														{
															"nativeSrc": "423:50:5",
															"nodeType": "YulAssignment",
															"src": "423:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:5"
																},
																"nativeSrc": "436:37:5",
																"nodeType": "YulFunctionCall",
																"src": "436:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:5",
														"nodeType": "YulTypedName",
														"src": "393:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:5",
														"nodeType": "YulTypedName",
														"src": "403:9:5",
														"type": ""
													}
												],
												"src": "353:126:5"
											},
											{
												"body": {
													"nativeSrc": "559:66:5",
													"nodeType": "YulBlock",
													"src": "559:66:5",
													"statements": [
														{
															"nativeSrc": "569:50:5",
															"nodeType": "YulAssignment",
															"src": "569:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "613:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "582:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "582:30:5"
																},
																"nativeSrc": "582:37:5",
																"nodeType": "YulFunctionCall",
																"src": "582:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "569:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "569:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$290_to_t_address",
												"nativeSrc": "485:140:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "539:5:5",
														"nodeType": "YulTypedName",
														"src": "539:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "549:9:5",
														"nodeType": "YulTypedName",
														"src": "549:9:5",
														"type": ""
													}
												],
												"src": "485:140:5"
											},
											{
												"body": {
													"nativeSrc": "710:80:5",
													"nodeType": "YulBlock",
													"src": "710:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "727:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$290_to_t_address",
																			"nativeSrc": "732:44:5",
																			"nodeType": "YulIdentifier",
																			"src": "732:44:5"
																		},
																		"nativeSrc": "732:51:5",
																		"nodeType": "YulFunctionCall",
																		"src": "732:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "720:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:5"
																},
																"nativeSrc": "720:64:5",
																"nodeType": "YulFunctionCall",
																"src": "720:64:5"
															},
															"nativeSrc": "720:64:5",
															"nodeType": "YulExpressionStatement",
															"src": "720:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
												"nativeSrc": "631:159:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "698:5:5",
														"nodeType": "YulTypedName",
														"src": "698:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "705:3:5",
														"nodeType": "YulTypedName",
														"src": "705:3:5",
														"type": ""
													}
												],
												"src": "631:159:5"
											},
											{
												"body": {
													"nativeSrc": "908:138:5",
													"nodeType": "YulBlock",
													"src": "908:138:5",
													"statements": [
														{
															"nativeSrc": "918:26:5",
															"nodeType": "YulAssignment",
															"src": "918:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "930:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:5",
																		"nodeType": "YulLiteral",
																		"src": "941:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "926:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:5"
																},
																"nativeSrc": "926:18:5",
																"nodeType": "YulFunctionCall",
																"src": "926:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "918:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1012:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1025:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1036:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1021:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:5"
																		},
																		"nativeSrc": "1021:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1021:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
																	"nativeSrc": "954:57:5",
																	"nodeType": "YulIdentifier",
																	"src": "954:57:5"
																},
																"nativeSrc": "954:85:5",
																"nodeType": "YulFunctionCall",
																"src": "954:85:5"
															},
															"nativeSrc": "954:85:5",
															"nodeType": "YulExpressionStatement",
															"src": "954:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed",
												"nativeSrc": "796:250:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "880:9:5",
														"nodeType": "YulTypedName",
														"src": "880:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "892:6:5",
														"nodeType": "YulTypedName",
														"src": "892:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "903:4:5",
														"nodeType": "YulTypedName",
														"src": "903:4:5",
														"type": ""
													}
												],
												"src": "796:250:5"
											},
											{
												"body": {
													"nativeSrc": "1092:35:5",
													"nodeType": "YulBlock",
													"src": "1092:35:5",
													"statements": [
														{
															"nativeSrc": "1102:19:5",
															"nodeType": "YulAssignment",
															"src": "1102:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1118:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1118:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1112:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1112:5:5"
																},
																"nativeSrc": "1112:9:5",
																"nodeType": "YulFunctionCall",
																"src": "1112:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1102:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1052:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1085:6:5",
														"nodeType": "YulTypedName",
														"src": "1085:6:5",
														"type": ""
													}
												],
												"src": "1052:75:5"
											},
											{
												"body": {
													"nativeSrc": "1222:28:5",
													"nodeType": "YulBlock",
													"src": "1222:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1239:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1239:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1242:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1242:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1232:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1232:6:5"
																},
																"nativeSrc": "1232:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1232:12:5"
															},
															"nativeSrc": "1232:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1232:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1133:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1133:117:5"
											},
											{
												"body": {
													"nativeSrc": "1345:28:5",
													"nodeType": "YulBlock",
													"src": "1345:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1362:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1362:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1355:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1355:6:5"
																},
																"nativeSrc": "1355:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1355:12:5"
															},
															"nativeSrc": "1355:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1355:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1256:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1256:117:5"
											},
											{
												"body": {
													"nativeSrc": "1424:32:5",
													"nodeType": "YulBlock",
													"src": "1424:32:5",
													"statements": [
														{
															"nativeSrc": "1434:16:5",
															"nodeType": "YulAssignment",
															"src": "1434:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1445:5:5",
																"nodeType": "YulIdentifier",
																"src": "1445:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1434:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1434:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1379:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1406:5:5",
														"nodeType": "YulTypedName",
														"src": "1406:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1416:7:5",
														"nodeType": "YulTypedName",
														"src": "1416:7:5",
														"type": ""
													}
												],
												"src": "1379:77:5"
											},
											{
												"body": {
													"nativeSrc": "1505:79:5",
													"nodeType": "YulBlock",
													"src": "1505:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1562:16:5",
																"nodeType": "YulBlock",
																"src": "1562:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1571:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1571:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1574:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1574:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1564:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1564:6:5"
																			},
																			"nativeSrc": "1564:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1564:12:5"
																		},
																		"nativeSrc": "1564:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1564:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1528:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1528:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1553:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1553:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1535:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1535:17:5"
																				},
																				"nativeSrc": "1535:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1535:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1525:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1525:2:5"
																		},
																		"nativeSrc": "1525:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1525:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1518:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:5"
																},
																"nativeSrc": "1518:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1518:43:5"
															},
															"nativeSrc": "1515:63:5",
															"nodeType": "YulIf",
															"src": "1515:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1462:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1498:5:5",
														"nodeType": "YulTypedName",
														"src": "1498:5:5",
														"type": ""
													}
												],
												"src": "1462:122:5"
											},
											{
												"body": {
													"nativeSrc": "1642:87:5",
													"nodeType": "YulBlock",
													"src": "1642:87:5",
													"statements": [
														{
															"nativeSrc": "1652:29:5",
															"nodeType": "YulAssignment",
															"src": "1652:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1674:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1674:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1661:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1661:12:5"
																},
																"nativeSrc": "1661:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1661:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1652:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1652:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1717:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1717:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1690:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1690:26:5"
																},
																"nativeSrc": "1690:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1690:33:5"
															},
															"nativeSrc": "1690:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1690:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1590:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1620:6:5",
														"nodeType": "YulTypedName",
														"src": "1620:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1628:3:5",
														"nodeType": "YulTypedName",
														"src": "1628:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1636:5:5",
														"nodeType": "YulTypedName",
														"src": "1636:5:5",
														"type": ""
													}
												],
												"src": "1590:139:5"
											},
											{
												"body": {
													"nativeSrc": "1818:391:5",
													"nodeType": "YulBlock",
													"src": "1818:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1864:83:5",
																"nodeType": "YulBlock",
																"src": "1864:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1866:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1866:77:5"
																			},
																			"nativeSrc": "1866:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1866:79:5"
																		},
																		"nativeSrc": "1866:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1866:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1839:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1839:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1848:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1848:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1835:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:5"
																		},
																		"nativeSrc": "1835:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1835:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1860:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1860:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1831:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1831:3:5"
																},
																"nativeSrc": "1831:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1831:32:5"
															},
															"nativeSrc": "1828:119:5",
															"nodeType": "YulIf",
															"src": "1828:119:5"
														},
														{
															"nativeSrc": "1957:117:5",
															"nodeType": "YulBlock",
															"src": "1957:117:5",
															"statements": [
																{
																	"nativeSrc": "1972:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1972:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1986:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1986:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1976:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1976:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2001:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2001:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2036:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2036:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2047:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2047:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2032:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2032:3:5"
																				},
																				"nativeSrc": "2032:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2032:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2056:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2056:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2011:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2011:20:5"
																		},
																		"nativeSrc": "2011:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2011:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2001:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2001:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2084:118:5",
															"nodeType": "YulBlock",
															"src": "2084:118:5",
															"statements": [
																{
																	"nativeSrc": "2099:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2099:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2113:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2113:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2103:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2103:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2129:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2129:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2164:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2164:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2175:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2175:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2160:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2160:3:5"
																				},
																				"nativeSrc": "2160:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2160:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2184:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2184:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2139:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2139:20:5"
																		},
																		"nativeSrc": "2139:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2139:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2129:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2129:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1735:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1780:9:5",
														"nodeType": "YulTypedName",
														"src": "1780:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1791:7:5",
														"nodeType": "YulTypedName",
														"src": "1791:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1803:6:5",
														"nodeType": "YulTypedName",
														"src": "1803:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1811:6:5",
														"nodeType": "YulTypedName",
														"src": "1811:6:5",
														"type": ""
													}
												],
												"src": "1735:474:5"
											},
											{
												"body": {
													"nativeSrc": "2280:53:5",
													"nodeType": "YulBlock",
													"src": "2280:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2297:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2297:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2320:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2320:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2302:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2302:17:5"
																		},
																		"nativeSrc": "2302:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2290:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2290:6:5"
																},
																"nativeSrc": "2290:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2290:37:5"
															},
															"nativeSrc": "2290:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2290:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2215:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2268:5:5",
														"nodeType": "YulTypedName",
														"src": "2268:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2275:3:5",
														"nodeType": "YulTypedName",
														"src": "2275:3:5",
														"type": ""
													}
												],
												"src": "2215:118:5"
											},
											{
												"body": {
													"nativeSrc": "2437:124:5",
													"nodeType": "YulBlock",
													"src": "2437:124:5",
													"statements": [
														{
															"nativeSrc": "2447:26:5",
															"nodeType": "YulAssignment",
															"src": "2447:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2459:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2459:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2470:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2470:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2455:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2455:3:5"
																},
																"nativeSrc": "2455:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2455:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2447:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2447:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2527:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2527:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2540:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2540:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2551:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2551:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2536:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2536:3:5"
																		},
																		"nativeSrc": "2536:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2536:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2483:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2483:43:5"
																},
																"nativeSrc": "2483:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2483:71:5"
															},
															"nativeSrc": "2483:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2483:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2339:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2409:9:5",
														"nodeType": "YulTypedName",
														"src": "2409:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2421:6:5",
														"nodeType": "YulTypedName",
														"src": "2421:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2432:4:5",
														"nodeType": "YulTypedName",
														"src": "2432:4:5",
														"type": ""
													}
												],
												"src": "2339:222:5"
											},
											{
												"body": {
													"nativeSrc": "2612:51:5",
													"nodeType": "YulBlock",
													"src": "2612:51:5",
													"statements": [
														{
															"nativeSrc": "2622:35:5",
															"nodeType": "YulAssignment",
															"src": "2622:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2651:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2651:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2633:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2633:17:5"
																},
																"nativeSrc": "2633:24:5",
																"nodeType": "YulFunctionCall",
																"src": "2633:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2622:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2622:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2567:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2594:5:5",
														"nodeType": "YulTypedName",
														"src": "2594:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2604:7:5",
														"nodeType": "YulTypedName",
														"src": "2604:7:5",
														"type": ""
													}
												],
												"src": "2567:96:5"
											},
											{
												"body": {
													"nativeSrc": "2712:79:5",
													"nodeType": "YulBlock",
													"src": "2712:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2769:16:5",
																"nodeType": "YulBlock",
																"src": "2769:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2778:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2778:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2781:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2781:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2771:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2771:6:5"
																			},
																			"nativeSrc": "2771:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2771:12:5"
																		},
																		"nativeSrc": "2771:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2771:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2735:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2735:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2760:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2760:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2742:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2742:17:5"
																				},
																				"nativeSrc": "2742:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2742:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2732:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2732:2:5"
																		},
																		"nativeSrc": "2732:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2732:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2725:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2725:6:5"
																},
																"nativeSrc": "2725:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2725:43:5"
															},
															"nativeSrc": "2722:63:5",
															"nodeType": "YulIf",
															"src": "2722:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2669:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2705:5:5",
														"nodeType": "YulTypedName",
														"src": "2705:5:5",
														"type": ""
													}
												],
												"src": "2669:122:5"
											},
											{
												"body": {
													"nativeSrc": "2849:87:5",
													"nodeType": "YulBlock",
													"src": "2849:87:5",
													"statements": [
														{
															"nativeSrc": "2859:29:5",
															"nodeType": "YulAssignment",
															"src": "2859:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2881:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2881:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2868:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2868:12:5"
																},
																"nativeSrc": "2868:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2868:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2859:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2859:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2924:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2924:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2897:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2897:26:5"
																},
																"nativeSrc": "2897:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2897:33:5"
															},
															"nativeSrc": "2897:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2897:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2797:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2827:6:5",
														"nodeType": "YulTypedName",
														"src": "2827:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2835:3:5",
														"nodeType": "YulTypedName",
														"src": "2835:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2843:5:5",
														"nodeType": "YulTypedName",
														"src": "2843:5:5",
														"type": ""
													}
												],
												"src": "2797:139:5"
											},
											{
												"body": {
													"nativeSrc": "3008:263:5",
													"nodeType": "YulBlock",
													"src": "3008:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3054:83:5",
																"nodeType": "YulBlock",
																"src": "3054:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3056:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3056:77:5"
																			},
																			"nativeSrc": "3056:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3056:79:5"
																		},
																		"nativeSrc": "3056:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3056:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3029:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3029:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3038:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3038:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3025:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3025:3:5"
																		},
																		"nativeSrc": "3025:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3025:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3050:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3050:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3021:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3021:3:5"
																},
																"nativeSrc": "3021:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3021:32:5"
															},
															"nativeSrc": "3018:119:5",
															"nodeType": "YulIf",
															"src": "3018:119:5"
														},
														{
															"nativeSrc": "3147:117:5",
															"nodeType": "YulBlock",
															"src": "3147:117:5",
															"statements": [
																{
																	"nativeSrc": "3162:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3162:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3176:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3176:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3166:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3166:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3191:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3191:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3226:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3226:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3237:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3237:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3222:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3222:3:5"
																				},
																				"nativeSrc": "3222:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3222:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3246:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3246:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3201:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3201:20:5"
																		},
																		"nativeSrc": "3201:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3201:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3191:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3191:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2942:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2978:9:5",
														"nodeType": "YulTypedName",
														"src": "2978:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2989:7:5",
														"nodeType": "YulTypedName",
														"src": "2989:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3001:6:5",
														"nodeType": "YulTypedName",
														"src": "3001:6:5",
														"type": ""
													}
												],
												"src": "2942:329:5"
											},
											{
												"body": {
													"nativeSrc": "3403:206:5",
													"nodeType": "YulBlock",
													"src": "3403:206:5",
													"statements": [
														{
															"nativeSrc": "3413:26:5",
															"nodeType": "YulAssignment",
															"src": "3413:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3425:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3425:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3436:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3436:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3421:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3421:3:5"
																},
																"nativeSrc": "3421:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3421:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3413:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3413:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3493:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3493:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3506:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3506:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3517:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3517:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3502:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3502:3:5"
																		},
																		"nativeSrc": "3502:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3502:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3449:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3449:43:5"
																},
																"nativeSrc": "3449:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3449:71:5"
															},
															"nativeSrc": "3449:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3449:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3574:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3574:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3587:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3587:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3598:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3598:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3583:3:5"
																		},
																		"nativeSrc": "3583:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3583:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3530:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3530:43:5"
																},
																"nativeSrc": "3530:72:5",
																"nodeType": "YulFunctionCall",
																"src": "3530:72:5"
															},
															"nativeSrc": "3530:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "3530:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3277:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3367:9:5",
														"nodeType": "YulTypedName",
														"src": "3367:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3379:6:5",
														"nodeType": "YulTypedName",
														"src": "3379:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3387:6:5",
														"nodeType": "YulTypedName",
														"src": "3387:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3398:4:5",
														"nodeType": "YulTypedName",
														"src": "3398:4:5",
														"type": ""
													}
												],
												"src": "3277:332:5"
											},
											{
												"body": {
													"nativeSrc": "3680:53:5",
													"nodeType": "YulBlock",
													"src": "3680:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3697:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3697:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3720:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3720:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3702:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3702:17:5"
																		},
																		"nativeSrc": "3702:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3702:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3690:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3690:6:5"
																},
																"nativeSrc": "3690:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3690:37:5"
															},
															"nativeSrc": "3690:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3690:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3615:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3668:5:5",
														"nodeType": "YulTypedName",
														"src": "3668:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3675:3:5",
														"nodeType": "YulTypedName",
														"src": "3675:3:5",
														"type": ""
													}
												],
												"src": "3615:118:5"
											},
											{
												"body": {
													"nativeSrc": "3837:124:5",
													"nodeType": "YulBlock",
													"src": "3837:124:5",
													"statements": [
														{
															"nativeSrc": "3847:26:5",
															"nodeType": "YulAssignment",
															"src": "3847:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3859:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3859:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3870:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3870:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3855:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3855:3:5"
																},
																"nativeSrc": "3855:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3855:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3847:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3847:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3927:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3927:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3940:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3940:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3951:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3951:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3936:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3936:3:5"
																		},
																		"nativeSrc": "3936:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3936:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3883:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3883:43:5"
																},
																"nativeSrc": "3883:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3883:71:5"
															},
															"nativeSrc": "3883:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3883:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3739:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3809:9:5",
														"nodeType": "YulTypedName",
														"src": "3809:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3821:6:5",
														"nodeType": "YulTypedName",
														"src": "3821:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3832:4:5",
														"nodeType": "YulTypedName",
														"src": "3832:4:5",
														"type": ""
													}
												],
												"src": "3739:222:5"
											},
											{
												"body": {
													"nativeSrc": "4022:53:5",
													"nodeType": "YulBlock",
													"src": "4022:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4039:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4039:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4062:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4062:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4044:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "4044:17:5"
																		},
																		"nativeSrc": "4044:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4044:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4032:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:5"
																},
																"nativeSrc": "4032:37:5",
																"nodeType": "YulFunctionCall",
																"src": "4032:37:5"
															},
															"nativeSrc": "4032:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "4032:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "3967:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4010:5:5",
														"nodeType": "YulTypedName",
														"src": "4010:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4017:3:5",
														"nodeType": "YulTypedName",
														"src": "4017:3:5",
														"type": ""
													}
												],
												"src": "3967:108:5"
											},
											{
												"body": {
													"nativeSrc": "4259:407:5",
													"nodeType": "YulBlock",
													"src": "4259:407:5",
													"statements": [
														{
															"nativeSrc": "4269:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4269:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4285:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4285:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4290:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4290:4:5",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4281:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4281:3:5"
																},
																"nativeSrc": "4281:14:5",
																"nodeType": "YulFunctionCall",
																"src": "4281:14:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "4273:4:5",
																	"nodeType": "YulTypedName",
																	"src": "4273:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4305:172:5",
															"nodeType": "YulBlock",
															"src": "4305:172:5",
															"statements": [
																{
																	"nativeSrc": "4348:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4348:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4378:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4378:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4385:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4385:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4374:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4374:3:5"
																				},
																				"nativeSrc": "4374:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4374:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4368:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4368:5:5"
																		},
																		"nativeSrc": "4368:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4368:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4352:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4352:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4438:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4438:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4456:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4456:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4461:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4461:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4452:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4452:3:5"
																				},
																				"nativeSrc": "4452:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4452:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4404:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4404:33:5"
																		},
																		"nativeSrc": "4404:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4404:63:5"
																	},
																	"nativeSrc": "4404:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4404:63:5"
																}
															]
														},
														{
															"nativeSrc": "4487:172:5",
															"nodeType": "YulBlock",
															"src": "4487:172:5",
															"statements": [
																{
																	"nativeSrc": "4530:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4530:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4560:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4560:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4567:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4567:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4556:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4556:3:5"
																				},
																				"nativeSrc": "4556:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4556:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4550:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4550:5:5"
																		},
																		"nativeSrc": "4550:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4550:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4534:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4534:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4620:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4620:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4638:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4638:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4643:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4643:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4634:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4634:3:5"
																				},
																				"nativeSrc": "4634:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4634:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4586:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4586:33:5"
																		},
																		"nativeSrc": "4586:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4586:63:5"
																	},
																	"nativeSrc": "4586:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4586:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$344_memory_ptr_to_t_struct$_Stake_$344_memory_ptr_fromStack",
												"nativeSrc": "4149:517:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4246:5:5",
														"nodeType": "YulTypedName",
														"src": "4246:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4253:3:5",
														"nodeType": "YulTypedName",
														"src": "4253:3:5",
														"type": ""
													}
												],
												"src": "4149:517:5"
											},
											{
												"body": {
													"nativeSrc": "4814:168:5",
													"nodeType": "YulBlock",
													"src": "4814:168:5",
													"statements": [
														{
															"nativeSrc": "4824:26:5",
															"nodeType": "YulAssignment",
															"src": "4824:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4836:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4836:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4847:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4847:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4832:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4832:3:5"
																},
																"nativeSrc": "4832:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4832:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4824:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4824:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4948:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4948:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4961:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4961:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4972:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4972:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4957:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4957:3:5"
																		},
																		"nativeSrc": "4957:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4957:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$344_memory_ptr_to_t_struct$_Stake_$344_memory_ptr_fromStack",
																	"nativeSrc": "4860:87:5",
																	"nodeType": "YulIdentifier",
																	"src": "4860:87:5"
																},
																"nativeSrc": "4860:115:5",
																"nodeType": "YulFunctionCall",
																"src": "4860:115:5"
															},
															"nativeSrc": "4860:115:5",
															"nodeType": "YulExpressionStatement",
															"src": "4860:115:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Stake_$344_memory_ptr__to_t_struct$_Stake_$344_memory_ptr__fromStack_reversed",
												"nativeSrc": "4672:310:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4786:9:5",
														"nodeType": "YulTypedName",
														"src": "4786:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4798:6:5",
														"nodeType": "YulTypedName",
														"src": "4798:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4809:4:5",
														"nodeType": "YulTypedName",
														"src": "4809:4:5",
														"type": ""
													}
												],
												"src": "4672:310:5"
											},
											{
												"body": {
													"nativeSrc": "5084:73:5",
													"nodeType": "YulBlock",
													"src": "5084:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5101:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5101:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5106:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5106:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5094:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5094:6:5"
																},
																"nativeSrc": "5094:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5094:19:5"
															},
															"nativeSrc": "5094:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "5094:19:5"
														},
														{
															"nativeSrc": "5122:29:5",
															"nodeType": "YulAssignment",
															"src": "5122:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5141:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5141:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5146:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5146:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5137:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5137:3:5"
																},
																"nativeSrc": "5137:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5137:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5122:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "5122:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4988:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5056:3:5",
														"nodeType": "YulTypedName",
														"src": "5056:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5061:6:5",
														"nodeType": "YulTypedName",
														"src": "5061:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5072:11:5",
														"nodeType": "YulTypedName",
														"src": "5072:11:5",
														"type": ""
													}
												],
												"src": "4988:169:5"
											},
											{
												"body": {
													"nativeSrc": "5269:61:5",
													"nodeType": "YulBlock",
													"src": "5269:61:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5291:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5291:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5299:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5299:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5287:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5287:3:5"
																		},
																		"nativeSrc": "5287:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5287:14:5"
																	},
																	{
																		"hexValue": "43616e6e6f742077697468647261772030",
																		"kind": "string",
																		"nativeSrc": "5303:19:5",
																		"nodeType": "YulLiteral",
																		"src": "5303:19:5",
																		"type": "",
																		"value": "Cannot withdraw 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5280:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5280:6:5"
																},
																"nativeSrc": "5280:43:5",
																"nodeType": "YulFunctionCall",
																"src": "5280:43:5"
															},
															"nativeSrc": "5280:43:5",
															"nodeType": "YulExpressionStatement",
															"src": "5280:43:5"
														}
													]
												},
												"name": "store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
												"nativeSrc": "5163:167:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5261:6:5",
														"nodeType": "YulTypedName",
														"src": "5261:6:5",
														"type": ""
													}
												],
												"src": "5163:167:5"
											},
											{
												"body": {
													"nativeSrc": "5482:220:5",
													"nodeType": "YulBlock",
													"src": "5482:220:5",
													"statements": [
														{
															"nativeSrc": "5492:74:5",
															"nodeType": "YulAssignment",
															"src": "5492:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5558:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5558:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5563:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5563:2:5",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5499:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "5499:58:5"
																},
																"nativeSrc": "5499:67:5",
																"nodeType": "YulFunctionCall",
																"src": "5499:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5492:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5492:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5664:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5664:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																	"nativeSrc": "5575:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "5575:88:5"
																},
																"nativeSrc": "5575:93:5",
																"nodeType": "YulFunctionCall",
																"src": "5575:93:5"
															},
															"nativeSrc": "5575:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "5575:93:5"
														},
														{
															"nativeSrc": "5677:19:5",
															"nodeType": "YulAssignment",
															"src": "5677:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5688:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5688:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5693:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5693:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5684:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5684:3:5"
																},
																"nativeSrc": "5684:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5684:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5677:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5677:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5336:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5470:3:5",
														"nodeType": "YulTypedName",
														"src": "5470:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5478:3:5",
														"nodeType": "YulTypedName",
														"src": "5478:3:5",
														"type": ""
													}
												],
												"src": "5336:366:5"
											},
											{
												"body": {
													"nativeSrc": "5879:248:5",
													"nodeType": "YulBlock",
													"src": "5879:248:5",
													"statements": [
														{
															"nativeSrc": "5889:26:5",
															"nodeType": "YulAssignment",
															"src": "5889:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5901:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5901:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5912:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5912:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5897:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5897:3:5"
																},
																"nativeSrc": "5897:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5897:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5889:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5889:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5936:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5936:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5947:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5947:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5932:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5932:3:5"
																		},
																		"nativeSrc": "5932:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5932:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5955:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "5955:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5961:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5961:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5951:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5951:3:5"
																		},
																		"nativeSrc": "5951:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5951:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5925:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:5"
																},
																"nativeSrc": "5925:47:5",
																"nodeType": "YulFunctionCall",
																"src": "5925:47:5"
															},
															"nativeSrc": "5925:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "5925:47:5"
														},
														{
															"nativeSrc": "5981:139:5",
															"nodeType": "YulAssignment",
															"src": "5981:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6115:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6115:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5989:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "5989:124:5"
																},
																"nativeSrc": "5989:131:5",
																"nodeType": "YulFunctionCall",
																"src": "5989:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5981:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5981:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5708:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5859:9:5",
														"nodeType": "YulTypedName",
														"src": "5859:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5874:4:5",
														"nodeType": "YulTypedName",
														"src": "5874:4:5",
														"type": ""
													}
												],
												"src": "5708:419:5"
											},
											{
												"body": {
													"nativeSrc": "6239:63:5",
													"nodeType": "YulBlock",
													"src": "6239:63:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6261:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6261:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6269:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6269:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6257:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6257:3:5"
																		},
																		"nativeSrc": "6257:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6257:14:5"
																	},
																	{
																		"hexValue": "546f6f206561726c7920776974686472617721",
																		"kind": "string",
																		"nativeSrc": "6273:21:5",
																		"nodeType": "YulLiteral",
																		"src": "6273:21:5",
																		"type": "",
																		"value": "Too early withdraw!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6250:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6250:6:5"
																},
																"nativeSrc": "6250:45:5",
																"nodeType": "YulFunctionCall",
																"src": "6250:45:5"
															},
															"nativeSrc": "6250:45:5",
															"nodeType": "YulExpressionStatement",
															"src": "6250:45:5"
														}
													]
												},
												"name": "store_literal_in_memory_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5",
												"nativeSrc": "6133:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6231:6:5",
														"nodeType": "YulTypedName",
														"src": "6231:6:5",
														"type": ""
													}
												],
												"src": "6133:169:5"
											},
											{
												"body": {
													"nativeSrc": "6454:220:5",
													"nodeType": "YulBlock",
													"src": "6454:220:5",
													"statements": [
														{
															"nativeSrc": "6464:74:5",
															"nodeType": "YulAssignment",
															"src": "6464:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6530:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6530:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6535:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6535:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6471:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "6471:58:5"
																},
																"nativeSrc": "6471:67:5",
																"nodeType": "YulFunctionCall",
																"src": "6471:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6464:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6464:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6636:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6636:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5",
																	"nativeSrc": "6547:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "6547:88:5"
																},
																"nativeSrc": "6547:93:5",
																"nodeType": "YulFunctionCall",
																"src": "6547:93:5"
															},
															"nativeSrc": "6547:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "6547:93:5"
														},
														{
															"nativeSrc": "6649:19:5",
															"nodeType": "YulAssignment",
															"src": "6649:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6660:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6660:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6665:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6665:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6656:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6656:3:5"
																},
																"nativeSrc": "6656:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6656:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6649:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6649:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6308:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6442:3:5",
														"nodeType": "YulTypedName",
														"src": "6442:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6450:3:5",
														"nodeType": "YulTypedName",
														"src": "6450:3:5",
														"type": ""
													}
												],
												"src": "6308:366:5"
											},
											{
												"body": {
													"nativeSrc": "6851:248:5",
													"nodeType": "YulBlock",
													"src": "6851:248:5",
													"statements": [
														{
															"nativeSrc": "6861:26:5",
															"nodeType": "YulAssignment",
															"src": "6861:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6873:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6873:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6884:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6884:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6869:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6869:3:5"
																},
																"nativeSrc": "6869:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6869:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6861:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6861:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6908:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6908:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6919:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6919:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6904:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6904:3:5"
																		},
																		"nativeSrc": "6904:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6904:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6927:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6927:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6933:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6933:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6923:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6923:3:5"
																		},
																		"nativeSrc": "6923:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6923:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6897:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6897:6:5"
																},
																"nativeSrc": "6897:47:5",
																"nodeType": "YulFunctionCall",
																"src": "6897:47:5"
															},
															"nativeSrc": "6897:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "6897:47:5"
														},
														{
															"nativeSrc": "6953:139:5",
															"nodeType": "YulAssignment",
															"src": "6953:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7087:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7087:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6961:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "6961:124:5"
																},
																"nativeSrc": "6961:131:5",
																"nodeType": "YulFunctionCall",
																"src": "6961:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6953:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6953:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6680:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6831:9:5",
														"nodeType": "YulTypedName",
														"src": "6831:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6846:4:5",
														"nodeType": "YulTypedName",
														"src": "6846:4:5",
														"type": ""
													}
												],
												"src": "6680:419:5"
											},
											{
												"body": {
													"nativeSrc": "7231:206:5",
													"nodeType": "YulBlock",
													"src": "7231:206:5",
													"statements": [
														{
															"nativeSrc": "7241:26:5",
															"nodeType": "YulAssignment",
															"src": "7241:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7253:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7253:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7264:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7264:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7249:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7249:3:5"
																},
																"nativeSrc": "7249:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7249:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7241:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7241:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7321:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7321:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7334:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7334:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7345:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7345:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7330:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7330:3:5"
																		},
																		"nativeSrc": "7330:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7330:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7277:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7277:43:5"
																},
																"nativeSrc": "7277:71:5",
																"nodeType": "YulFunctionCall",
																"src": "7277:71:5"
															},
															"nativeSrc": "7277:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "7277:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7402:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7402:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7415:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7415:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7426:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7426:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7411:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7411:3:5"
																		},
																		"nativeSrc": "7411:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7411:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7358:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7358:43:5"
																},
																"nativeSrc": "7358:72:5",
																"nodeType": "YulFunctionCall",
																"src": "7358:72:5"
															},
															"nativeSrc": "7358:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "7358:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7105:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7195:9:5",
														"nodeType": "YulTypedName",
														"src": "7195:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7207:6:5",
														"nodeType": "YulTypedName",
														"src": "7207:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7215:6:5",
														"nodeType": "YulTypedName",
														"src": "7215:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7226:4:5",
														"nodeType": "YulTypedName",
														"src": "7226:4:5",
														"type": ""
													}
												],
												"src": "7105:332:5"
											},
											{
												"body": {
													"nativeSrc": "7485:48:5",
													"nodeType": "YulBlock",
													"src": "7485:48:5",
													"statements": [
														{
															"nativeSrc": "7495:32:5",
															"nodeType": "YulAssignment",
															"src": "7495:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7520:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7520:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7513:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "7513:6:5"
																		},
																		"nativeSrc": "7513:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7513:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7506:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7506:6:5"
																},
																"nativeSrc": "7506:21:5",
																"nodeType": "YulFunctionCall",
																"src": "7506:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7495:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "7495:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7443:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7467:5:5",
														"nodeType": "YulTypedName",
														"src": "7467:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7477:7:5",
														"nodeType": "YulTypedName",
														"src": "7477:7:5",
														"type": ""
													}
												],
												"src": "7443:90:5"
											},
											{
												"body": {
													"nativeSrc": "7579:76:5",
													"nodeType": "YulBlock",
													"src": "7579:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7633:16:5",
																"nodeType": "YulBlock",
																"src": "7633:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7642:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7642:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7645:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7645:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7635:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7635:6:5"
																			},
																			"nativeSrc": "7635:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7635:12:5"
																		},
																		"nativeSrc": "7635:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7635:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7602:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7602:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7624:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7624:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7609:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "7609:14:5"
																				},
																				"nativeSrc": "7609:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7609:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7599:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "7599:2:5"
																		},
																		"nativeSrc": "7599:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7599:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7592:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7592:6:5"
																},
																"nativeSrc": "7592:40:5",
																"nodeType": "YulFunctionCall",
																"src": "7592:40:5"
															},
															"nativeSrc": "7589:60:5",
															"nodeType": "YulIf",
															"src": "7589:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7539:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7572:5:5",
														"nodeType": "YulTypedName",
														"src": "7572:5:5",
														"type": ""
													}
												],
												"src": "7539:116:5"
											},
											{
												"body": {
													"nativeSrc": "7721:77:5",
													"nodeType": "YulBlock",
													"src": "7721:77:5",
													"statements": [
														{
															"nativeSrc": "7731:22:5",
															"nodeType": "YulAssignment",
															"src": "7731:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7746:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7746:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7740:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7740:5:5"
																},
																"nativeSrc": "7740:13:5",
																"nodeType": "YulFunctionCall",
																"src": "7740:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7731:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7731:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7786:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7786:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7762:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "7762:23:5"
																},
																"nativeSrc": "7762:30:5",
																"nodeType": "YulFunctionCall",
																"src": "7762:30:5"
															},
															"nativeSrc": "7762:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "7762:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7661:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7699:6:5",
														"nodeType": "YulTypedName",
														"src": "7699:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7707:3:5",
														"nodeType": "YulTypedName",
														"src": "7707:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7715:5:5",
														"nodeType": "YulTypedName",
														"src": "7715:5:5",
														"type": ""
													}
												],
												"src": "7661:137:5"
											},
											{
												"body": {
													"nativeSrc": "7878:271:5",
													"nodeType": "YulBlock",
													"src": "7878:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7924:83:5",
																"nodeType": "YulBlock",
																"src": "7924:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7926:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "7926:77:5"
																			},
																			"nativeSrc": "7926:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7926:79:5"
																		},
																		"nativeSrc": "7926:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7926:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7899:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7899:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7908:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7908:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7895:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7895:3:5"
																		},
																		"nativeSrc": "7895:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7895:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7920:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7920:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7891:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7891:3:5"
																},
																"nativeSrc": "7891:32:5",
																"nodeType": "YulFunctionCall",
																"src": "7891:32:5"
															},
															"nativeSrc": "7888:119:5",
															"nodeType": "YulIf",
															"src": "7888:119:5"
														},
														{
															"nativeSrc": "8017:125:5",
															"nodeType": "YulBlock",
															"src": "8017:125:5",
															"statements": [
																{
																	"nativeSrc": "8032:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8032:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8046:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8046:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8036:6:5",
																			"nodeType": "YulTypedName",
																			"src": "8036:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8061:71:5",
																	"nodeType": "YulAssignment",
																	"src": "8061:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8104:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "8104:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8115:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8115:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8100:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8100:3:5"
																				},
																				"nativeSrc": "8100:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8100:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8124:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8124:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "8071:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "8071:28:5"
																		},
																		"nativeSrc": "8071:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8071:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8061:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8061:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7804:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7848:9:5",
														"nodeType": "YulTypedName",
														"src": "7848:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7859:7:5",
														"nodeType": "YulTypedName",
														"src": "7859:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7871:6:5",
														"nodeType": "YulTypedName",
														"src": "7871:6:5",
														"type": ""
													}
												],
												"src": "7804:345:5"
											},
											{
												"body": {
													"nativeSrc": "8261:59:5",
													"nodeType": "YulBlock",
													"src": "8261:59:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8283:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8283:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8291:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8291:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8279:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8279:3:5"
																		},
																		"nativeSrc": "8279:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8279:14:5"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "8295:17:5",
																		"nodeType": "YulLiteral",
																		"src": "8295:17:5",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8272:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8272:6:5"
																},
																"nativeSrc": "8272:41:5",
																"nodeType": "YulFunctionCall",
																"src": "8272:41:5"
															},
															"nativeSrc": "8272:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "8272:41:5"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "8155:165:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8253:6:5",
														"nodeType": "YulTypedName",
														"src": "8253:6:5",
														"type": ""
													}
												],
												"src": "8155:165:5"
											},
											{
												"body": {
													"nativeSrc": "8472:220:5",
													"nodeType": "YulBlock",
													"src": "8472:220:5",
													"statements": [
														{
															"nativeSrc": "8482:74:5",
															"nodeType": "YulAssignment",
															"src": "8482:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8548:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8548:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8553:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8553:2:5",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8489:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "8489:58:5"
																},
																"nativeSrc": "8489:67:5",
																"nodeType": "YulFunctionCall",
																"src": "8489:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8482:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8482:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8654:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8654:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "8565:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "8565:88:5"
																},
																"nativeSrc": "8565:93:5",
																"nodeType": "YulFunctionCall",
																"src": "8565:93:5"
															},
															"nativeSrc": "8565:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "8565:93:5"
														},
														{
															"nativeSrc": "8667:19:5",
															"nodeType": "YulAssignment",
															"src": "8667:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8678:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8678:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8683:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8683:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8674:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8674:3:5"
																},
																"nativeSrc": "8674:12:5",
																"nodeType": "YulFunctionCall",
																"src": "8674:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8667:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8667:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8326:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8460:3:5",
														"nodeType": "YulTypedName",
														"src": "8460:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8468:3:5",
														"nodeType": "YulTypedName",
														"src": "8468:3:5",
														"type": ""
													}
												],
												"src": "8326:366:5"
											},
											{
												"body": {
													"nativeSrc": "8869:248:5",
													"nodeType": "YulBlock",
													"src": "8869:248:5",
													"statements": [
														{
															"nativeSrc": "8879:26:5",
															"nodeType": "YulAssignment",
															"src": "8879:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8891:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8891:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8902:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8902:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8887:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8887:3:5"
																},
																"nativeSrc": "8887:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8887:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8879:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8879:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8926:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8926:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8937:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8937:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8922:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8922:3:5"
																		},
																		"nativeSrc": "8922:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8922:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8945:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8945:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8951:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8951:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8941:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8941:3:5"
																		},
																		"nativeSrc": "8941:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8941:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8915:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8915:6:5"
																},
																"nativeSrc": "8915:47:5",
																"nodeType": "YulFunctionCall",
																"src": "8915:47:5"
															},
															"nativeSrc": "8915:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "8915:47:5"
														},
														{
															"nativeSrc": "8971:139:5",
															"nodeType": "YulAssignment",
															"src": "8971:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9105:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9105:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8979:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "8979:124:5"
																},
																"nativeSrc": "8979:131:5",
																"nodeType": "YulFunctionCall",
																"src": "8979:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8971:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8971:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8698:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8849:9:5",
														"nodeType": "YulTypedName",
														"src": "8849:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8864:4:5",
														"nodeType": "YulTypedName",
														"src": "8864:4:5",
														"type": ""
													}
												],
												"src": "8698:419:5"
											},
											{
												"body": {
													"nativeSrc": "9151:152:5",
													"nodeType": "YulBlock",
													"src": "9151:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9168:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9168:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9171:77:5",
																		"nodeType": "YulLiteral",
																		"src": "9171:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9161:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9161:6:5"
																},
																"nativeSrc": "9161:88:5",
																"nodeType": "YulFunctionCall",
																"src": "9161:88:5"
															},
															"nativeSrc": "9161:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "9161:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9265:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9265:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9268:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9268:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9258:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9258:6:5"
																},
																"nativeSrc": "9258:15:5",
																"nodeType": "YulFunctionCall",
																"src": "9258:15:5"
															},
															"nativeSrc": "9258:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "9258:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9289:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9289:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9292:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9292:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9282:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9282:6:5"
																},
																"nativeSrc": "9282:15:5",
																"nodeType": "YulFunctionCall",
																"src": "9282:15:5"
															},
															"nativeSrc": "9282:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "9282:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9123:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "9123:180:5"
											},
											{
												"body": {
													"nativeSrc": "9354:149:5",
													"nodeType": "YulBlock",
													"src": "9354:149:5",
													"statements": [
														{
															"nativeSrc": "9364:25:5",
															"nodeType": "YulAssignment",
															"src": "9364:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9387:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9387:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9369:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9369:17:5"
																},
																"nativeSrc": "9369:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9369:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9364:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "9364:1:5"
																}
															]
														},
														{
															"nativeSrc": "9398:25:5",
															"nodeType": "YulAssignment",
															"src": "9398:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9421:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9421:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9403:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9403:17:5"
																},
																"nativeSrc": "9403:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9403:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9398:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "9398:1:5"
																}
															]
														},
														{
															"nativeSrc": "9432:17:5",
															"nodeType": "YulAssignment",
															"src": "9432:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9444:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9444:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9447:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9447:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9440:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9440:3:5"
																},
																"nativeSrc": "9440:9:5",
																"nodeType": "YulFunctionCall",
																"src": "9440:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9432:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9432:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9474:22:5",
																"nodeType": "YulBlock",
																"src": "9474:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9476:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "9476:16:5"
																			},
																			"nativeSrc": "9476:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9476:18:5"
																		},
																		"nativeSrc": "9476:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9476:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9465:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9465:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9471:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9471:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9462:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "9462:2:5"
																},
																"nativeSrc": "9462:11:5",
																"nodeType": "YulFunctionCall",
																"src": "9462:11:5"
															},
															"nativeSrc": "9459:37:5",
															"nodeType": "YulIf",
															"src": "9459:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9309:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9340:1:5",
														"nodeType": "YulTypedName",
														"src": "9340:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9343:1:5",
														"nodeType": "YulTypedName",
														"src": "9343:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9349:4:5",
														"nodeType": "YulTypedName",
														"src": "9349:4:5",
														"type": ""
													}
												],
												"src": "9309:194:5"
											},
											{
												"body": {
													"nativeSrc": "9615:69:5",
													"nodeType": "YulBlock",
													"src": "9615:69:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9637:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9637:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9645:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9645:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9633:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9633:3:5"
																		},
																		"nativeSrc": "9633:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9633:14:5"
																	},
																	{
																		"hexValue": "7573657220616c72656164792068617320737461636b696e67",
																		"kind": "string",
																		"nativeSrc": "9649:27:5",
																		"nodeType": "YulLiteral",
																		"src": "9649:27:5",
																		"type": "",
																		"value": "user already has stacking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9626:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9626:6:5"
																},
																"nativeSrc": "9626:51:5",
																"nodeType": "YulFunctionCall",
																"src": "9626:51:5"
															},
															"nativeSrc": "9626:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "9626:51:5"
														}
													]
												},
												"name": "store_literal_in_memory_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0",
												"nativeSrc": "9509:175:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9607:6:5",
														"nodeType": "YulTypedName",
														"src": "9607:6:5",
														"type": ""
													}
												],
												"src": "9509:175:5"
											},
											{
												"body": {
													"nativeSrc": "9836:220:5",
													"nodeType": "YulBlock",
													"src": "9836:220:5",
													"statements": [
														{
															"nativeSrc": "9846:74:5",
															"nodeType": "YulAssignment",
															"src": "9846:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9912:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9912:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9917:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9917:2:5",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9853:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "9853:58:5"
																},
																"nativeSrc": "9853:67:5",
																"nodeType": "YulFunctionCall",
																"src": "9853:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9846:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9846:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10018:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10018:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0",
																	"nativeSrc": "9929:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "9929:88:5"
																},
																"nativeSrc": "9929:93:5",
																"nodeType": "YulFunctionCall",
																"src": "9929:93:5"
															},
															"nativeSrc": "9929:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "9929:93:5"
														},
														{
															"nativeSrc": "10031:19:5",
															"nodeType": "YulAssignment",
															"src": "10031:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10042:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10042:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10047:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10047:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10038:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10038:3:5"
																},
																"nativeSrc": "10038:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10038:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10031:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10031:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9690:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9824:3:5",
														"nodeType": "YulTypedName",
														"src": "9824:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9832:3:5",
														"nodeType": "YulTypedName",
														"src": "9832:3:5",
														"type": ""
													}
												],
												"src": "9690:366:5"
											},
											{
												"body": {
													"nativeSrc": "10233:248:5",
													"nodeType": "YulBlock",
													"src": "10233:248:5",
													"statements": [
														{
															"nativeSrc": "10243:26:5",
															"nodeType": "YulAssignment",
															"src": "10243:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10255:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10255:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10266:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10266:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10251:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10251:3:5"
																},
																"nativeSrc": "10251:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10251:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10243:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10243:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10290:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10290:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10301:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10301:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10286:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10286:3:5"
																		},
																		"nativeSrc": "10286:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10286:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10309:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10309:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10315:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10315:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10305:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10305:3:5"
																		},
																		"nativeSrc": "10305:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10305:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10279:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10279:6:5"
																},
																"nativeSrc": "10279:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10279:47:5"
															},
															"nativeSrc": "10279:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10279:47:5"
														},
														{
															"nativeSrc": "10335:139:5",
															"nodeType": "YulAssignment",
															"src": "10335:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10469:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10469:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10343:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10343:124:5"
																},
																"nativeSrc": "10343:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10343:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10335:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10335:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10062:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10213:9:5",
														"nodeType": "YulTypedName",
														"src": "10213:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10228:4:5",
														"nodeType": "YulTypedName",
														"src": "10228:4:5",
														"type": ""
													}
												],
												"src": "10062:419:5"
											},
											{
												"body": {
													"nativeSrc": "10531:147:5",
													"nodeType": "YulBlock",
													"src": "10531:147:5",
													"statements": [
														{
															"nativeSrc": "10541:25:5",
															"nodeType": "YulAssignment",
															"src": "10541:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10564:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10564:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10546:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "10546:17:5"
																},
																"nativeSrc": "10546:20:5",
																"nodeType": "YulFunctionCall",
																"src": "10546:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10541:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "10541:1:5"
																}
															]
														},
														{
															"nativeSrc": "10575:25:5",
															"nodeType": "YulAssignment",
															"src": "10575:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10598:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10598:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10580:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "10580:17:5"
																},
																"nativeSrc": "10580:20:5",
																"nodeType": "YulFunctionCall",
																"src": "10580:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10575:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "10575:1:5"
																}
															]
														},
														{
															"nativeSrc": "10609:16:5",
															"nodeType": "YulAssignment",
															"src": "10609:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10620:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10620:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10623:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10623:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10616:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10616:3:5"
																},
																"nativeSrc": "10616:9:5",
																"nodeType": "YulFunctionCall",
																"src": "10616:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10609:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10609:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10649:22:5",
																"nodeType": "YulBlock",
																"src": "10649:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10651:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "10651:16:5"
																			},
																			"nativeSrc": "10651:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "10651:18:5"
																		},
																		"nativeSrc": "10651:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "10651:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10641:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10641:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10644:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10644:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10638:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "10638:2:5"
																},
																"nativeSrc": "10638:10:5",
																"nodeType": "YulFunctionCall",
																"src": "10638:10:5"
															},
															"nativeSrc": "10635:36:5",
															"nodeType": "YulIf",
															"src": "10635:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10487:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10518:1:5",
														"nodeType": "YulTypedName",
														"src": "10518:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10521:1:5",
														"nodeType": "YulTypedName",
														"src": "10521:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10527:3:5",
														"nodeType": "YulTypedName",
														"src": "10527:3:5",
														"type": ""
													}
												],
												"src": "10487:191:5"
											},
											{
												"body": {
													"nativeSrc": "10838:288:5",
													"nodeType": "YulBlock",
													"src": "10838:288:5",
													"statements": [
														{
															"nativeSrc": "10848:26:5",
															"nodeType": "YulAssignment",
															"src": "10848:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10860:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10860:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10871:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10871:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10856:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10856:3:5"
																},
																"nativeSrc": "10856:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10856:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10848:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10848:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10928:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10928:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10941:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10941:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10952:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10952:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10937:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10937:3:5"
																		},
																		"nativeSrc": "10937:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10937:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10884:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10884:43:5"
																},
																"nativeSrc": "10884:71:5",
																"nodeType": "YulFunctionCall",
																"src": "10884:71:5"
															},
															"nativeSrc": "10884:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "10884:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11009:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11009:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11022:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11022:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11033:2:5",
																				"nodeType": "YulLiteral",
																				"src": "11033:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11018:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11018:3:5"
																		},
																		"nativeSrc": "11018:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11018:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10965:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10965:43:5"
																},
																"nativeSrc": "10965:72:5",
																"nodeType": "YulFunctionCall",
																"src": "10965:72:5"
															},
															"nativeSrc": "10965:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "10965:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11091:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11091:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11104:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11104:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11115:2:5",
																				"nodeType": "YulLiteral",
																				"src": "11115:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11100:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11100:3:5"
																		},
																		"nativeSrc": "11100:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11100:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11047:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "11047:43:5"
																},
																"nativeSrc": "11047:72:5",
																"nodeType": "YulFunctionCall",
																"src": "11047:72:5"
															},
															"nativeSrc": "11047:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "11047:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10684:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10794:9:5",
														"nodeType": "YulTypedName",
														"src": "10794:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10806:6:5",
														"nodeType": "YulTypedName",
														"src": "10806:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10814:6:5",
														"nodeType": "YulTypedName",
														"src": "10814:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10822:6:5",
														"nodeType": "YulTypedName",
														"src": "10822:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10833:4:5",
														"nodeType": "YulTypedName",
														"src": "10833:4:5",
														"type": ""
													}
												],
												"src": "10684:442:5"
											},
											{
												"body": {
													"nativeSrc": "11238:75:5",
													"nodeType": "YulBlock",
													"src": "11238:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11260:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11260:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11268:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11268:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11256:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11256:3:5"
																		},
																		"nativeSrc": "11256:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11256:14:5"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "11272:33:5",
																		"nodeType": "YulLiteral",
																		"src": "11272:33:5",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11249:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11249:6:5"
																},
																"nativeSrc": "11249:57:5",
																"nodeType": "YulFunctionCall",
																"src": "11249:57:5"
															},
															"nativeSrc": "11249:57:5",
															"nodeType": "YulExpressionStatement",
															"src": "11249:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "11132:181:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11230:6:5",
														"nodeType": "YulTypedName",
														"src": "11230:6:5",
														"type": ""
													}
												],
												"src": "11132:181:5"
											},
											{
												"body": {
													"nativeSrc": "11465:220:5",
													"nodeType": "YulBlock",
													"src": "11465:220:5",
													"statements": [
														{
															"nativeSrc": "11475:74:5",
															"nodeType": "YulAssignment",
															"src": "11475:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11541:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11541:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11546:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11546:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11482:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "11482:58:5"
																},
																"nativeSrc": "11482:67:5",
																"nodeType": "YulFunctionCall",
																"src": "11482:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11475:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11475:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11647:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11647:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "11558:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "11558:88:5"
																},
																"nativeSrc": "11558:93:5",
																"nodeType": "YulFunctionCall",
																"src": "11558:93:5"
															},
															"nativeSrc": "11558:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "11558:93:5"
														},
														{
															"nativeSrc": "11660:19:5",
															"nodeType": "YulAssignment",
															"src": "11660:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11671:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11671:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11676:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11676:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11667:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11667:3:5"
																},
																"nativeSrc": "11667:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11667:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11660:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11660:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11319:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11453:3:5",
														"nodeType": "YulTypedName",
														"src": "11453:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11461:3:5",
														"nodeType": "YulTypedName",
														"src": "11461:3:5",
														"type": ""
													}
												],
												"src": "11319:366:5"
											},
											{
												"body": {
													"nativeSrc": "11862:248:5",
													"nodeType": "YulBlock",
													"src": "11862:248:5",
													"statements": [
														{
															"nativeSrc": "11872:26:5",
															"nodeType": "YulAssignment",
															"src": "11872:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11884:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11884:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11895:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11895:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11880:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11880:3:5"
																},
																"nativeSrc": "11880:18:5",
																"nodeType": "YulFunctionCall",
																"src": "11880:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11872:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11872:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11919:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11919:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11930:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11930:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11915:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11915:3:5"
																		},
																		"nativeSrc": "11915:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11915:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11938:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "11938:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11944:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11944:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11934:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11934:3:5"
																		},
																		"nativeSrc": "11934:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11934:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11908:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11908:6:5"
																},
																"nativeSrc": "11908:47:5",
																"nodeType": "YulFunctionCall",
																"src": "11908:47:5"
															},
															"nativeSrc": "11908:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "11908:47:5"
														},
														{
															"nativeSrc": "11964:139:5",
															"nodeType": "YulAssignment",
															"src": "11964:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12098:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "12098:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11972:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "11972:124:5"
																},
																"nativeSrc": "11972:131:5",
																"nodeType": "YulFunctionCall",
																"src": "11972:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11964:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11964:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11691:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11842:9:5",
														"nodeType": "YulTypedName",
														"src": "11842:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11857:4:5",
														"nodeType": "YulTypedName",
														"src": "11857:4:5",
														"type": ""
													}
												],
												"src": "11691:419:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$290_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$290_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct StakingContract.Stake -> struct StakingContract.Stake\n    function abi_encode_t_struct$_Stake_$344_memory_ptr_to_t_struct$_Stake_$344_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // stakedAmount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // withdrawDate\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Stake_$344_memory_ptr__to_t_struct$_Stake_$344_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Stake_$344_memory_ptr_to_t_struct$_Stake_$344_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot withdraw 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Too early withdraw!\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0(memPtr) {\n\n        mstore(add(memPtr, 0), \"user already has stacking\")\n\n    }\n\n    function abi_encode_t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009c575f3560e01c8063817b1cd211610064578063817b1cd21461010c578063821460f51461012a5780638da5cb5b1461015b578063f2fde38b14610179578063fc0e3d90146101955761009c565b80633ccfd60b146100a0578063715018a6146100aa57806372f702f3146100b45780637b0472f0146100d25780637bc74225146100ee575b5f80fd5b6100a86101b3565b005b6100b2610466565b005b6100bc610479565b6040516100c99190610ad6565b60405180910390f35b6100ec60048036038101906100e79190610b26565b61049e565b005b6100f661075a565b6040516101039190610b73565b60405180910390f35b610114610763565b6040516101219190610b73565b60405180910390f35b610144600480360381019061013f9190610bc7565b610769565b604051610152929190610bf2565b60405180910390f35b610163610789565b6040516101709190610c28565b60405180910390f35b610193600480360381019061018e9190610bc7565b6107b1565b005b61019d610835565b6040516101aa9190610c7d565b60405180910390f35b6101bb61089d565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f820154815260200160018201548152505090505f815f01511161025e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025590610cf0565b60405180910390fd5b42816020015111156102a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029c90610d58565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33845f01516040518363ffffffff1660e01b8152600401610305929190610d76565b6020604051808303815f875af1158015610321573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103459190610dd2565b905080610387576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037e90610e47565b60405180910390fd5b815f015160035f82825461039b9190610e92565b9250508190555060405180604001604052805f81526020015f81525060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0155602082015181600101559050503373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5835f01516040516104529190610b73565b60405180910390a250506104646108ea565b565b61046e6108f3565b6104775f61097a565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104a661089d565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015414801561053357505f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010154145b610572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056990610f0f565b60405180910390fd5b8160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f018190555080426105c29190610f2d565b60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161066593929190610f60565b6020604051808303815f875af1158015610681573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106a59190610dd2565b9050806106e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106de90610e47565b60405180910390fd5b8260035f8282546106f89190610f2d565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d846040516107459190610b73565b60405180910390a2506107566108ea565b5050565b5f600354905090565b60035481565b6004602052805f5260405f205f91509050805f0154908060010154905082565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107b96108f3565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610829575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108209190610c28565b60405180910390fd5b6108328161097a565b50565b61083d610a44565b60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f8201548152602001600182015481525050905090565b60025f54036108e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d890610fdf565b60405180910390fd5b60025f81905550565b60015f81905550565b6108fb610a3d565b73ffffffffffffffffffffffffffffffffffffffff16610919610789565b73ffffffffffffffffffffffffffffffffffffffff16146109785761093c610a3d565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161096f9190610c28565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b60405180604001604052805f81526020015f81525090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610a9e610a99610a9484610a5c565b610a7b565b610a5c565b9050919050565b5f610aaf82610a84565b9050919050565b5f610ac082610aa5565b9050919050565b610ad081610ab6565b82525050565b5f602082019050610ae95f830184610ac7565b92915050565b5f80fd5b5f819050919050565b610b0581610af3565b8114610b0f575f80fd5b50565b5f81359050610b2081610afc565b92915050565b5f8060408385031215610b3c57610b3b610aef565b5b5f610b4985828601610b12565b9250506020610b5a85828601610b12565b9150509250929050565b610b6d81610af3565b82525050565b5f602082019050610b865f830184610b64565b92915050565b5f610b9682610a5c565b9050919050565b610ba681610b8c565b8114610bb0575f80fd5b50565b5f81359050610bc181610b9d565b92915050565b5f60208284031215610bdc57610bdb610aef565b5b5f610be984828501610bb3565b91505092915050565b5f604082019050610c055f830185610b64565b610c126020830184610b64565b9392505050565b610c2281610b8c565b82525050565b5f602082019050610c3b5f830184610c19565b92915050565b610c4a81610af3565b82525050565b604082015f820151610c645f850182610c41565b506020820151610c776020850182610c41565b50505050565b5f604082019050610c905f830184610c50565b92915050565b5f82825260208201905092915050565b7f43616e6e6f7420776974686472617720300000000000000000000000000000005f82015250565b5f610cda601183610c96565b9150610ce582610ca6565b602082019050919050565b5f6020820190508181035f830152610d0781610cce565b9050919050565b7f546f6f206561726c7920776974686472617721000000000000000000000000005f82015250565b5f610d42601383610c96565b9150610d4d82610d0e565b602082019050919050565b5f6020820190508181035f830152610d6f81610d36565b9050919050565b5f604082019050610d895f830185610c19565b610d966020830184610b64565b9392505050565b5f8115159050919050565b610db181610d9d565b8114610dbb575f80fd5b50565b5f81519050610dcc81610da8565b92915050565b5f60208284031215610de757610de6610aef565b5b5f610df484828501610dbe565b91505092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f610e31600f83610c96565b9150610e3c82610dfd565b602082019050919050565b5f6020820190508181035f830152610e5e81610e25565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e9c82610af3565b9150610ea783610af3565b9250828203905081811115610ebf57610ebe610e65565b5b92915050565b7f7573657220616c72656164792068617320737461636b696e67000000000000005f82015250565b5f610ef9601983610c96565b9150610f0482610ec5565b602082019050919050565b5f6020820190508181035f830152610f2681610eed565b9050919050565b5f610f3782610af3565b9150610f4283610af3565b9250828201905080821115610f5a57610f59610e65565b5b92915050565b5f606082019050610f735f830186610c19565b610f806020830185610c19565b610f8d6040830184610b64565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610fc9601f83610c96565b9150610fd482610f95565b602082019050919050565b5f6020820190508181035f830152610ff681610fbd565b905091905056fea2646970667358221220bf1621c1a6699b27dce037c8342706e53847802d073e24f81395c3f23e36871f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x821460F5 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xFC0E3D90 EQ PUSH2 0x195 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x7BC74225 EQ PUSH2 0xEE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x1B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2 PUSH2 0x466 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBC PUSH2 0x479 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF6 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x769 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP3 SWAP2 SWAP1 PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x7B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19D PUSH2 0x835 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH2 0x89D JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD GT PUSH2 0x25E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x255 SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C SWAP1 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH0 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x305 SWAP3 SWAP2 SWAP1 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x321 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0xE47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 ADD MLOAD PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x464 PUSH2 0x8EA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x46E PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x477 PUSH0 PUSH2 0x97A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4A6 PUSH2 0x89D JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x533 JUMPI POP PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST PUSH2 0x572 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x569 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP1 TIMESTAMP PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x665 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x681 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x6E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DE SWAP1 PUSH2 0xE47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD PUSH2 0x745 SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x756 PUSH2 0x8EA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7B9 PUSH2 0x8F3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x829 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x820 SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x832 DUP2 PUSH2 0x97A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x83D PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x8E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D8 SWAP1 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x8FB PUSH2 0xA3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x919 PUSH2 0x789 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x978 JUMPI PUSH2 0x93C PUSH2 0xA3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96F SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA9E PUSH2 0xA99 PUSH2 0xA94 DUP5 PUSH2 0xA5C JUMP JUMPDEST PUSH2 0xA7B JUMP JUMPDEST PUSH2 0xA5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAAF DUP3 PUSH2 0xA84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAC0 DUP3 PUSH2 0xAA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD0 DUP2 PUSH2 0xAB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAE9 PUSH0 DUP4 ADD DUP5 PUSH2 0xAC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP2 EQ PUSH2 0xB0F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB20 DUP2 PUSH2 0xAFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB3C JUMPI PUSH2 0xB3B PUSH2 0xAEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB49 DUP6 DUP3 DUP7 ADD PUSH2 0xB12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB5A DUP6 DUP3 DUP7 ADD PUSH2 0xB12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6D DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB86 PUSH0 DUP4 ADD DUP5 PUSH2 0xB64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB96 DUP3 PUSH2 0xA5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA6 DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP2 EQ PUSH2 0xBB0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDC JUMPI PUSH2 0xBDB PUSH2 0xAEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBE9 DUP5 DUP3 DUP6 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC05 PUSH0 DUP4 ADD DUP6 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0xC12 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB64 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC22 DUP2 PUSH2 0xB8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC3B PUSH0 DUP4 ADD DUP5 PUSH2 0xC19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4A DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xC64 PUSH0 DUP6 ADD DUP3 PUSH2 0xC41 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xC77 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xC41 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC90 PUSH0 DUP4 ADD DUP5 PUSH2 0xC50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCDA PUSH1 0x11 DUP4 PUSH2 0xC96 JUMP JUMPDEST SWAP2 POP PUSH2 0xCE5 DUP3 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD07 DUP2 PUSH2 0xCCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6F206561726C792077697468647261772100000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD42 PUSH1 0x13 DUP4 PUSH2 0xC96 JUMP JUMPDEST SWAP2 POP PUSH2 0xD4D DUP3 PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD6F DUP2 PUSH2 0xD36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD89 PUSH0 DUP4 ADD DUP6 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0xD96 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB64 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB1 DUP2 PUSH2 0xD9D JUMP JUMPDEST DUP2 EQ PUSH2 0xDBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDCC DUP2 PUSH2 0xDA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE7 JUMPI PUSH2 0xDE6 PUSH2 0xAEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDF4 DUP5 DUP3 DUP6 ADD PUSH2 0xDBE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE31 PUSH1 0xF DUP4 PUSH2 0xC96 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3C DUP3 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE5E DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE9C DUP3 PUSH2 0xAF3 JUMP JUMPDEST SWAP2 POP PUSH2 0xEA7 DUP4 PUSH2 0xAF3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xE65 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7573657220616C72656164792068617320737461636B696E6700000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEF9 PUSH1 0x19 DUP4 PUSH2 0xC96 JUMP JUMPDEST SWAP2 POP PUSH2 0xF04 DUP3 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF26 DUP2 PUSH2 0xEED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF37 DUP3 PUSH2 0xAF3 JUMP JUMPDEST SWAP2 POP PUSH2 0xF42 DUP4 PUSH2 0xAF3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF5A JUMPI PUSH2 0xF59 PUSH2 0xE65 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF73 PUSH0 DUP4 ADD DUP7 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0xF80 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0xF8D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB64 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFC9 PUSH1 0x1F DUP4 PUSH2 0xC96 JUMP JUMPDEST SWAP2 POP PUSH2 0xFD4 DUP3 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFF6 DUP2 PUSH2 0xFBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF AND 0x21 0xC1 0xA6 PUSH10 0x9B27DCE037C8342706E5 CODESIZE SELFBALANCE DUP1 0x2D SMOD RETURNDATACOPY 0x24 0xF8 SGT SWAP6 0xC3 CALLCODE RETURNDATACOPY CALLDATASIZE DUP8 0x1F PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "232:1887:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:557;;;:::i;:::-;;2293:101:0;;;:::i;:::-;;292:26:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;745:602;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1460:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;325:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;362:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1353:101:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1559:557;2261:21:1;:19;:21::i;:::-;1611:22:4::1;1636:11;:23;1648:10;1636:23;;;;;;;;;;;;;;;1611:48;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1702:1;1677:9;:22;;;:26;1669:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1769:15;1743:9;:22;;;:41;;1735:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1827:12;1842;;;;;;;;;;;:21;;;1864:10;1876:9;:22;;;1842:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1827:72;;1917:7;1909:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;1970:9;:22;;;1955:11;;:37;;;;;;;:::i;:::-;;;;;;;;2029:11;;;;;;;;2035:1;2029:11;;;;2038:1;2029:11;;::::0;2003::::1;:23;2015:10;2003:23;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;2074:10;2064:45;;;2086:9;:22;;;2064:45;;;;;;:::i;:::-;;;;;;;;1601:515;;2303:20:1::0;:18;:20::i;:::-;1559:557:4:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;292:26:4:-;;;;;;;;;;;;;:::o;745:602::-;2261:21:1;:19;:21::i;:::-;885:1:4::1;845:11;:23;857:10;845:23;;;;;;;;;;;;;;;:36;;;:41;:86;;;;;930:1;890:11;:23;902:10;890:23;;;;;;;;;;;;;;;:36;;;:41;845:86;824:158;;;;;;;;;;;;:::i;:::-;;;;;;;;;1040:6;1001:11;:23;1013:10;1001:23;;;;;;;;;;;;;;;:36;;:45;;;;1113:6;1095:15;:24;;;;:::i;:::-;1056:11;:23;1068:10;1056:23;;;;;;;;;;;;;;;:36;;:63;;;;1138:12;1153;;;;;;;;;;;:25;;;1179:10;1199:4;1206:6;1153:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1138:75;;1231:7;1223:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;1284:6;1269:11;;:21;;;;;;;:::i;:::-;;;;;;;;1321:10;1314:26;;;1333:6;1314:26;;;;;;:::i;:::-;;;;;;;;814:533;2303:20:1::0;:18;:20::i;:::-;745:602:4;;:::o;1460:89::-;1505:7;1531:11;;1524:18;;1460:89;:::o;325:26::-;;;;:::o;362:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2543:215::-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1353:101:4:-;1393:12;;:::i;:::-;1424:11;:23;1436:10;1424:23;;;;;;;;;;;;;;;1417:30;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:101;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;7:126:5:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1133:117::-;1242:1;1239;1232:12;1379:77;1416:7;1445:5;1434:16;;1379:77;;;:::o;1462:122::-;1535:24;1553:5;1535:24;:::i;:::-;1528:5;1525:35;1515:63;;1574:1;1571;1564:12;1515:63;1462:122;:::o;1590:139::-;1636:5;1674:6;1661:20;1652:29;;1690:33;1717:5;1690:33;:::i;:::-;1590:139;;;;:::o;1735:474::-;1803:6;1811;1860:2;1848:9;1839:7;1835:23;1831:32;1828:119;;;1866:79;;:::i;:::-;1828:119;1986:1;2011:53;2056:7;2047:6;2036:9;2032:22;2011:53;:::i;:::-;2001:63;;1957:117;2113:2;2139:53;2184:7;2175:6;2164:9;2160:22;2139:53;:::i;:::-;2129:63;;2084:118;1735:474;;;;;:::o;2215:118::-;2302:24;2320:5;2302:24;:::i;:::-;2297:3;2290:37;2215:118;;:::o;2339:222::-;2432:4;2470:2;2459:9;2455:18;2447:26;;2483:71;2551:1;2540:9;2536:17;2527:6;2483:71;:::i;:::-;2339:222;;;;:::o;2567:96::-;2604:7;2633:24;2651:5;2633:24;:::i;:::-;2622:35;;2567:96;;;:::o;2669:122::-;2742:24;2760:5;2742:24;:::i;:::-;2735:5;2732:35;2722:63;;2781:1;2778;2771:12;2722:63;2669:122;:::o;2797:139::-;2843:5;2881:6;2868:20;2859:29;;2897:33;2924:5;2897:33;:::i;:::-;2797:139;;;;:::o;2942:329::-;3001:6;3050:2;3038:9;3029:7;3025:23;3021:32;3018:119;;;3056:79;;:::i;:::-;3018:119;3176:1;3201:53;3246:7;3237:6;3226:9;3222:22;3201:53;:::i;:::-;3191:63;;3147:117;2942:329;;;;:::o;3277:332::-;3398:4;3436:2;3425:9;3421:18;3413:26;;3449:71;3517:1;3506:9;3502:17;3493:6;3449:71;:::i;:::-;3530:72;3598:2;3587:9;3583:18;3574:6;3530:72;:::i;:::-;3277:332;;;;;:::o;3615:118::-;3702:24;3720:5;3702:24;:::i;:::-;3697:3;3690:37;3615:118;;:::o;3739:222::-;3832:4;3870:2;3859:9;3855:18;3847:26;;3883:71;3951:1;3940:9;3936:17;3927:6;3883:71;:::i;:::-;3739:222;;;;:::o;3967:108::-;4044:24;4062:5;4044:24;:::i;:::-;4039:3;4032:37;3967:108;;:::o;4149:517::-;4290:4;4285:3;4281:14;4385:4;4378:5;4374:16;4368:23;4404:63;4461:4;4456:3;4452:14;4438:12;4404:63;:::i;:::-;4305:172;4567:4;4560:5;4556:16;4550:23;4586:63;4643:4;4638:3;4634:14;4620:12;4586:63;:::i;:::-;4487:172;4259:407;4149:517;;:::o;4672:310::-;4809:4;4847:2;4836:9;4832:18;4824:26;;4860:115;4972:1;4961:9;4957:17;4948:6;4860:115;:::i;:::-;4672:310;;;;:::o;4988:169::-;5072:11;5106:6;5101:3;5094:19;5146:4;5141:3;5137:14;5122:29;;4988:169;;;;:::o;5163:167::-;5303:19;5299:1;5291:6;5287:14;5280:43;5163:167;:::o;5336:366::-;5478:3;5499:67;5563:2;5558:3;5499:67;:::i;:::-;5492:74;;5575:93;5664:3;5575:93;:::i;:::-;5693:2;5688:3;5684:12;5677:19;;5336:366;;;:::o;5708:419::-;5874:4;5912:2;5901:9;5897:18;5889:26;;5961:9;5955:4;5951:20;5947:1;5936:9;5932:17;5925:47;5989:131;6115:4;5989:131;:::i;:::-;5981:139;;5708:419;;;:::o;6133:169::-;6273:21;6269:1;6261:6;6257:14;6250:45;6133:169;:::o;6308:366::-;6450:3;6471:67;6535:2;6530:3;6471:67;:::i;:::-;6464:74;;6547:93;6636:3;6547:93;:::i;:::-;6665:2;6660:3;6656:12;6649:19;;6308:366;;;:::o;6680:419::-;6846:4;6884:2;6873:9;6869:18;6861:26;;6933:9;6927:4;6923:20;6919:1;6908:9;6904:17;6897:47;6961:131;7087:4;6961:131;:::i;:::-;6953:139;;6680:419;;;:::o;7105:332::-;7226:4;7264:2;7253:9;7249:18;7241:26;;7277:71;7345:1;7334:9;7330:17;7321:6;7277:71;:::i;:::-;7358:72;7426:2;7415:9;7411:18;7402:6;7358:72;:::i;:::-;7105:332;;;;;:::o;7443:90::-;7477:7;7520:5;7513:13;7506:21;7495:32;;7443:90;;;:::o;7539:116::-;7609:21;7624:5;7609:21;:::i;:::-;7602:5;7599:32;7589:60;;7645:1;7642;7635:12;7589:60;7539:116;:::o;7661:137::-;7715:5;7746:6;7740:13;7731:22;;7762:30;7786:5;7762:30;:::i;:::-;7661:137;;;;:::o;7804:345::-;7871:6;7920:2;7908:9;7899:7;7895:23;7891:32;7888:119;;;7926:79;;:::i;:::-;7888:119;8046:1;8071:61;8124:7;8115:6;8104:9;8100:22;8071:61;:::i;:::-;8061:71;;8017:125;7804:345;;;;:::o;8155:165::-;8295:17;8291:1;8283:6;8279:14;8272:41;8155:165;:::o;8326:366::-;8468:3;8489:67;8553:2;8548:3;8489:67;:::i;:::-;8482:74;;8565:93;8654:3;8565:93;:::i;:::-;8683:2;8678:3;8674:12;8667:19;;8326:366;;;:::o;8698:419::-;8864:4;8902:2;8891:9;8887:18;8879:26;;8951:9;8945:4;8941:20;8937:1;8926:9;8922:17;8915:47;8979:131;9105:4;8979:131;:::i;:::-;8971:139;;8698:419;;;:::o;9123:180::-;9171:77;9168:1;9161:88;9268:4;9265:1;9258:15;9292:4;9289:1;9282:15;9309:194;9349:4;9369:20;9387:1;9369:20;:::i;:::-;9364:25;;9403:20;9421:1;9403:20;:::i;:::-;9398:25;;9447:1;9444;9440:9;9432:17;;9471:1;9465:4;9462:11;9459:37;;;9476:18;;:::i;:::-;9459:37;9309:194;;;;:::o;9509:175::-;9649:27;9645:1;9637:6;9633:14;9626:51;9509:175;:::o;9690:366::-;9832:3;9853:67;9917:2;9912:3;9853:67;:::i;:::-;9846:74;;9929:93;10018:3;9929:93;:::i;:::-;10047:2;10042:3;10038:12;10031:19;;9690:366;;;:::o;10062:419::-;10228:4;10266:2;10255:9;10251:18;10243:26;;10315:9;10309:4;10305:20;10301:1;10290:9;10286:17;10279:47;10343:131;10469:4;10343:131;:::i;:::-;10335:139;;10062:419;;;:::o;10487:191::-;10527:3;10546:20;10564:1;10546:20;:::i;:::-;10541:25;;10580:20;10598:1;10580:20;:::i;:::-;10575:25;;10623:1;10620;10616:9;10609:16;;10644:3;10641:1;10638:10;10635:36;;;10651:18;;:::i;:::-;10635:36;10487:191;;;;:::o;10684:442::-;10833:4;10871:2;10860:9;10856:18;10848:26;;10884:71;10952:1;10941:9;10937:17;10928:6;10884:71;:::i;:::-;10965:72;11033:2;11022:9;11018:18;11009:6;10965:72;:::i;:::-;11047;11115:2;11104:9;11100:18;11091:6;11047:72;:::i;:::-;10684:442;;;;;;:::o;11132:181::-;11272:33;11268:1;11260:6;11256:14;11249:57;11132:181;:::o;11319:366::-;11461:3;11482:67;11546:2;11541:3;11482:67;:::i;:::-;11475:74;;11558:93;11647:3;11558:93;:::i;:::-;11676:2;11671:3;11667:12;11660:19;;11319:366;;;:::o;11691:419::-;11857:4;11895:2;11884:9;11880:18;11872:26;;11944:9;11938:4;11934:20;11930:1;11919:9;11915:17;11908:47;11972:131;12098:4;11972:131;:::i;:::-;11964:139;;11691:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "829400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getStake()": "infinite",
								"getTotalStake()": "2521",
								"owner()": "2559",
								"renounceOwnership()": "infinite",
								"stake(uint256,uint256)": "infinite",
								"stakingToken()": "infinite",
								"totalStaked()": "2425",
								"transferOwnership(address)": "infinite",
								"userStaking(address)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 232,
									"end": 2119,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 232,
									"end": 2119,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 232,
									"end": 2119,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 636,
									"end": 735,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 636,
									"end": 735,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 636,
									"end": 735,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 636,
									"end": 735,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 636,
									"end": 735,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 636,
									"end": 735,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 636,
									"end": 735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 636,
									"end": 735,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 678,
									"end": 688,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 715,
									"end": 728,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 700,
									"end": 712,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 700,
									"end": 712,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 232,
									"end": 2119,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 232,
									"end": 2119,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1138,
									"end": 1147,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1129,
									"end": 1136,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1121,
									"end": 1153,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1156,
									"end": 1235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1362,
									"end": 1368,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1360,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1347,
									"end": 1369,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1301,
									"end": 1379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1247,
									"end": 1389,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1507,
									"end": 1512,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1489,
									"end": 1513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1487,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1477,
									"end": 1514,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1520,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1619,
									"end": 1623,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1657,
									"end": 1659,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1646,
									"end": 1655,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1660,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1660,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1738,
									"end": 1739,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1727,
									"end": 1736,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1723,
									"end": 1740,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1714,
									"end": 1720,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1670,
									"end": 1741,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 232,
									"end": 2119,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 232,
									"end": 2119,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 232,
									"end": 2119,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 2119,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 232,
									"end": 2119,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 2119,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 2119,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 232,
									"end": 2119,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 2119,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bf1621c1a6699b27dce037c8342706e53847802d073e24f81395c3f23e36871f64736f6c634300081a0033",
									".code": [
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "817B1CD2"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "817B1CD2"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "821460F5"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "FC0E3D90"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "3CCFD60B"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "72F702F3"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "7B0472F0"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "7BC74225"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2119,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 2116,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1559,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1559,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1559,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 2116,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1559,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 2116,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 292,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 745,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 745,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1460,
											"end": 1549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1460,
											"end": 1549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 325,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 325,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 362,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 362,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 362,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1353,
											"end": 1454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1353,
											"end": 1454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 2116,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1559,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1636,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1658,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1636,
											"end": 1659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1636,
											"end": 1659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1659,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1636,
											"end": 1659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1659,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1636,
											"end": 1659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1659,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1686,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1699,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1699,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1703,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1669,
											"end": 1725,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1669,
											"end": 1725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 1784,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1752,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1743,
											"end": 1765,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1765,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1784,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1784,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1735,
											"end": 1808,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1735,
											"end": 1808,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1842,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1854,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1842,
											"end": 1854,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1854,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1864,
											"end": 1874,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 1885,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1898,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 1898,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1842,
											"end": 1899,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1842,
											"end": 1899,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1842,
											"end": 1899,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 1899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 1899,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1924,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1909,
											"end": 1944,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1909,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1970,
											"end": 1979,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1970,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1992,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1970,
											"end": 1992,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1955,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1992,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 1992,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 1992,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1955,
											"end": 1992,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 1992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1955,
											"end": 1992,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 1992,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1955,
											"end": 1992,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 1992,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 1992,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 1992,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 1992,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 1992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 1992,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 1992,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2029,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2029,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2029,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2035,
											"end": 2036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2025,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2003,
											"end": 2026,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2003,
											"end": 2026,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2026,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2026,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2026,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2026,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2026,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2026,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2026,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2026,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2084,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 2086,
											"end": 2095,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2064,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2109,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 2116,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 2116,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 292,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 867,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 845,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 881,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 881,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 845,
											"end": 931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 931,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 845,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 845,
											"end": 931,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 845,
											"end": 931,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 930,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 912,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 890,
											"end": 926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 890,
											"end": 926,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 890,
											"end": 926,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 890,
											"end": 931,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 845,
											"end": 931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 845,
											"end": 931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 824,
											"end": 982,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1046,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1013,
											"end": 1023,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1046,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1046,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1046,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1046,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1119,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1095,
											"end": 1110,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1095,
											"end": 1119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1095,
											"end": 1119,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1095,
											"end": 1119,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1095,
											"end": 1119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1095,
											"end": 1119,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1095,
											"end": 1119,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1095,
											"end": 1119,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1078,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1056,
											"end": 1092,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1119,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1119,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1119,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1119,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1153,
											"end": 1178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1179,
											"end": 1189,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1199,
											"end": 1203,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1206,
											"end": 1212,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1153,
											"end": 1213,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1153,
											"end": 1213,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1223,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1290,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1269,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1269,
											"end": 1290,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 1331,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 1333,
											"end": 1339,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1314,
											"end": 1340,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 814,
											"end": 1347,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1524,
											"end": 1542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1524,
											"end": 1542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1393,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1393,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1393,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1393,
											"end": 1405,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1393,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1435,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1446,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "108"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 485,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 582,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 582,
											"end": 619,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 569,
											"end": 619,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 569,
											"end": 619,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 631,
											"end": 790,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 631,
											"end": 790,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 732,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 732,
											"end": 783,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 732,
											"end": 783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 720,
											"end": 784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 631,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 918,
											"end": 944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 918,
											"end": 944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 954,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1240,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1434,
											"end": 1450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1434,
											"end": 1450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1553,
											"end": 1558,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1535,
											"end": 1559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1533,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1560,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1576,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1681,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1690,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1809,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1817,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1860,
											"end": 1862,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 1857,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1858,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1863,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1866,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1866,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1945,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1866,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 1987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2056,
											"end": 2063,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2053,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2054,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2011,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 2074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2113,
											"end": 2115,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2184,
											"end": 2191,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2164,
											"end": 2173,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2182,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2139,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2192,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2139,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2192,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2202,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2320,
											"end": 2325,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2302,
											"end": 2326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2300,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2290,
											"end": 2327,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2472,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2468,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2549,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2536,
											"end": 2553,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2533,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2483,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2633,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2657,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2791,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2669,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2760,
											"end": 2765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2742,
											"end": 2766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2735,
											"end": 2740,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2732,
											"end": 2767,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2722,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2722,
											"end": 2785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2783,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2722,
											"end": 2785,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2722,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2936,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2797,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 2888,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 2888,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2924,
											"end": 2929,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2897,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 2930,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2897,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2936,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2936,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 3271,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2942,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3007,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3052,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3038,
											"end": 3047,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3029,
											"end": 3036,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3048,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3053,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3137,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3018,
											"end": 3137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3056,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3056,
											"end": 3135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3135,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3056,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3137,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3018,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3176,
											"end": 3177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3246,
											"end": 3253,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3226,
											"end": 3235,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3201,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3201,
											"end": 3254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3201,
											"end": 3254,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3201,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3191,
											"end": 3254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3191,
											"end": 3254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 3271,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 3271,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 3271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 3271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 3271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3609,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3277,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3398,
											"end": 3402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3421,
											"end": 3439,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3517,
											"end": 3518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3515,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3502,
											"end": 3519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3449,
											"end": 3520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3520,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3449,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 3598,
											"end": 3600,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3587,
											"end": 3596,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3580,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3530,
											"end": 3602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3602,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 3530,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3609,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3609,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3733,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3615,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3720,
											"end": 3725,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3702,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3726,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3702,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3697,
											"end": 3700,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3690,
											"end": 3727,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3961,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3739,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3832,
											"end": 3836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3872,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3859,
											"end": 3868,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 3873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 3873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3883,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3951,
											"end": 3952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3949,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3933,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3883,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3883,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3883,
											"end": 3954,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3883,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3961,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3961,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 4075,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3967,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4062,
											"end": 4067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4044,
											"end": 4068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4068,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4044,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4042,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4069,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 4075,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 4075,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 4075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4149,
											"end": 4666,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 4149,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4290,
											"end": 4294,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4285,
											"end": 4288,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4281,
											"end": 4295,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4385,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4383,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4391,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4461,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4459,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4466,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4438,
											"end": 4450,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4404,
											"end": 4467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4305,
											"end": 4477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4567,
											"end": 4571,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4560,
											"end": 4565,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4556,
											"end": 4572,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4573,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 4643,
											"end": 4647,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4638,
											"end": 4641,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4634,
											"end": 4648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4586,
											"end": 4649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4649,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 4586,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4487,
											"end": 4659,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4259,
											"end": 4666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4149,
											"end": 4666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4149,
											"end": 4666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4149,
											"end": 4666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4672,
											"end": 4982,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4672,
											"end": 4982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4809,
											"end": 4813,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4847,
											"end": 4849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4836,
											"end": 4845,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 4972,
											"end": 4973,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4970,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4957,
											"end": 4974,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 4954,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 4860,
											"end": 4975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 4975,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 4860,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4672,
											"end": 4982,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4672,
											"end": 4982,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4672,
											"end": 4982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4672,
											"end": 4982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4672,
											"end": 4982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4988,
											"end": 5157,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4988,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5072,
											"end": 5083,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5104,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5141,
											"end": 5144,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4988,
											"end": 5157,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4988,
											"end": 5157,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4988,
											"end": 5157,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4988,
											"end": 5157,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4988,
											"end": 5157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5330,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5163,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5322,
											"name": "PUSH",
											"source": 5,
											"value": "43616E6E6F742077697468647261772030000000000000000000000000000000"
										},
										{
											"begin": 5299,
											"end": 5300,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5291,
											"end": 5297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5287,
											"end": 5301,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5280,
											"end": 5323,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5336,
											"end": 5702,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5336,
											"end": 5702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5478,
											"end": 5481,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 5563,
											"end": 5565,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5558,
											"end": 5561,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5499,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5566,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 5499,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5566,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5664,
											"end": 5667,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5575,
											"end": 5668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5668,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5575,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5693,
											"end": 5695,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5688,
											"end": 5691,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5684,
											"end": 5696,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5677,
											"end": 5696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5677,
											"end": 5696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5336,
											"end": 5702,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5336,
											"end": 5702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5336,
											"end": 5702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5336,
											"end": 5702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5708,
											"end": 6127,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 5708,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5912,
											"end": 5914,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5901,
											"end": 5910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5915,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5961,
											"end": 5970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 5959,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5951,
											"end": 5971,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5948,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 5945,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5932,
											"end": 5949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5925,
											"end": 5972,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 6115,
											"end": 6119,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5989,
											"end": 6120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 6120,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 5989,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5708,
											"end": 6127,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5708,
											"end": 6127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5708,
											"end": 6127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5708,
											"end": 6127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6133,
											"end": 6302,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6133,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6273,
											"end": 6294,
											"name": "PUSH",
											"source": 5,
											"value": "546F6F206561726C792077697468647261772100000000000000000000000000"
										},
										{
											"begin": 6269,
											"end": 6270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6261,
											"end": 6267,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6257,
											"end": 6271,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6250,
											"end": 6295,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6133,
											"end": 6302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6133,
											"end": 6302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6308,
											"end": 6674,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6308,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6450,
											"end": 6453,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6471,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 6535,
											"end": 6537,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 6530,
											"end": 6533,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 6471,
											"end": 6538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6538,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 6471,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6464,
											"end": 6538,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6464,
											"end": 6538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 6636,
											"end": 6639,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6547,
											"end": 6640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6640,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 6547,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6665,
											"end": 6667,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6660,
											"end": 6663,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6656,
											"end": 6668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6649,
											"end": 6668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6649,
											"end": 6668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6308,
											"end": 6674,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6308,
											"end": 6674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6308,
											"end": 6674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6308,
											"end": 6674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 7099,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 6680,
											"end": 7099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6846,
											"end": 6850,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6884,
											"end": 6886,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6873,
											"end": 6882,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6869,
											"end": 6887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6861,
											"end": 6887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6861,
											"end": 6887,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6933,
											"end": 6942,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6927,
											"end": 6931,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6923,
											"end": 6943,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6919,
											"end": 6920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6917,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6904,
											"end": 6921,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6897,
											"end": 6944,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 7087,
											"end": 7091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6961,
											"end": 7092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7092,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 6961,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 7092,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 7092,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 7099,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 7099,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 7099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 7099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7437,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 7105,
											"end": 7437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7264,
											"end": 7266,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7253,
											"end": 7262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7249,
											"end": 7267,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7241,
											"end": 7267,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7241,
											"end": 7267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 7345,
											"end": 7346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7343,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7347,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 7277,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7348,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 7277,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7358,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 7426,
											"end": 7428,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7415,
											"end": 7424,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7411,
											"end": 7429,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7358,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 7358,
											"end": 7430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7358,
											"end": 7430,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 7358,
											"end": 7430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7437,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7437,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7443,
											"end": 7533,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 7443,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7477,
											"end": 7484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7520,
											"end": 7525,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7513,
											"end": 7526,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7506,
											"end": 7527,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7495,
											"end": 7527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7495,
											"end": 7527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7443,
											"end": 7533,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7443,
											"end": 7533,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7443,
											"end": 7533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7443,
											"end": 7533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7539,
											"end": 7655,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 7539,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7609,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 7624,
											"end": 7629,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7609,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 7609,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7609,
											"end": 7630,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 7609,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7599,
											"end": 7631,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 7589,
											"end": 7649,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7645,
											"end": 7646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7642,
											"end": 7643,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7635,
											"end": 7647,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7649,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 7589,
											"end": 7649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7539,
											"end": 7655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7539,
											"end": 7655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7661,
											"end": 7798,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 7661,
											"end": 7798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7746,
											"end": 7752,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7740,
											"end": 7753,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 7753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 7753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7762,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 7786,
											"end": 7791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7762,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 7762,
											"end": 7792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7762,
											"end": 7792,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 7762,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7661,
											"end": 7798,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7661,
											"end": 7798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7661,
											"end": 7798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7661,
											"end": 7798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7661,
											"end": 7798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 8149,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 7804,
											"end": 8149,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7871,
											"end": 7877,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7920,
											"end": 7922,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7908,
											"end": 7917,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7899,
											"end": 7906,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7895,
											"end": 7918,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7891,
											"end": 7923,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7888,
											"end": 8007,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7888,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 7888,
											"end": 8007,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7926,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 7926,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 7926,
											"end": 8005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7926,
											"end": 8005,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 7926,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7888,
											"end": 8007,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 7888,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8046,
											"end": 8047,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8071,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 8124,
											"end": 8131,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8115,
											"end": 8121,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8104,
											"end": 8113,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8100,
											"end": 8122,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8071,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 8071,
											"end": 8132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8071,
											"end": 8132,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 8071,
											"end": 8132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8061,
											"end": 8132,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8061,
											"end": 8132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 8149,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 8149,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 8149,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 8149,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 8149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8320,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 8155,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8295,
											"end": 8312,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 8291,
											"end": 8292,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8283,
											"end": 8289,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8279,
											"end": 8293,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8272,
											"end": 8313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8320,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8326,
											"end": 8692,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 8326,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8468,
											"end": 8471,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8489,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 8553,
											"end": 8555,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 8548,
											"end": 8551,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8489,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 8489,
											"end": 8556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8489,
											"end": 8556,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 8489,
											"end": 8556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8482,
											"end": 8556,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8482,
											"end": 8556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8565,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 8654,
											"end": 8657,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8565,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 8565,
											"end": 8658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8565,
											"end": 8658,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 8565,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8683,
											"end": 8685,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8678,
											"end": 8681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8674,
											"end": 8686,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8667,
											"end": 8686,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8667,
											"end": 8686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8326,
											"end": 8692,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8326,
											"end": 8692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8326,
											"end": 8692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8326,
											"end": 8692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8698,
											"end": 9117,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 8698,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8864,
											"end": 8868,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8902,
											"end": 8904,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8891,
											"end": 8900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8879,
											"end": 8905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8879,
											"end": 8905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8945,
											"end": 8949,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8941,
											"end": 8961,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8937,
											"end": 8938,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8926,
											"end": 8935,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8922,
											"end": 8939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8915,
											"end": 8962,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8979,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8979,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 8979,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8979,
											"end": 9110,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 8979,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8971,
											"end": 9110,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8971,
											"end": 9110,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8698,
											"end": 9117,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8698,
											"end": 9117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8698,
											"end": 9117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8698,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9123,
											"end": 9303,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 9123,
											"end": 9303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9171,
											"end": 9248,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9168,
											"end": 9169,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9268,
											"end": 9272,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 9265,
											"end": 9266,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9258,
											"end": 9273,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9292,
											"end": 9296,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9289,
											"end": 9290,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9282,
											"end": 9297,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9309,
											"end": 9503,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 9309,
											"end": 9503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9349,
											"end": 9353,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9369,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9369,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 9369,
											"end": 9389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9369,
											"end": 9389,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 9369,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9364,
											"end": 9389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9364,
											"end": 9389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9403,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 9421,
											"end": 9422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9403,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 9403,
											"end": 9423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9403,
											"end": 9423,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 9403,
											"end": 9423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9398,
											"end": 9423,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9398,
											"end": 9423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9447,
											"end": 9448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9444,
											"end": 9445,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9440,
											"end": 9449,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9432,
											"end": 9449,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9432,
											"end": 9449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9471,
											"end": 9472,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9465,
											"end": 9469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9462,
											"end": 9473,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9459,
											"end": 9496,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9459,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 9459,
											"end": 9496,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9476,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 9476,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 9476,
											"end": 9494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9476,
											"end": 9494,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 9476,
											"end": 9494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9459,
											"end": 9496,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 9459,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9309,
											"end": 9503,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9309,
											"end": 9503,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9309,
											"end": 9503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9309,
											"end": 9503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9309,
											"end": 9503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9509,
											"end": 9684,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 9509,
											"end": 9684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9649,
											"end": 9676,
											"name": "PUSH",
											"source": 5,
											"value": "7573657220616C72656164792068617320737461636B696E6700000000000000"
										},
										{
											"begin": 9645,
											"end": 9646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9633,
											"end": 9647,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9626,
											"end": 9677,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9509,
											"end": 9684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9509,
											"end": 9684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9690,
											"end": 10056,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 9690,
											"end": 10056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9832,
											"end": 9835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9853,
											"end": 9920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 9917,
											"end": 9919,
											"name": "PUSH",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 9912,
											"end": 9915,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9853,
											"end": 9920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 9853,
											"end": 9920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9853,
											"end": 9920,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 9853,
											"end": 9920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9846,
											"end": 9920,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9846,
											"end": 9920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 10018,
											"end": 10021,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 9929,
											"end": 10022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 10022,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 9929,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10047,
											"end": 10049,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10042,
											"end": 10045,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10038,
											"end": 10050,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10031,
											"end": 10050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10031,
											"end": 10050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9690,
											"end": 10056,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9690,
											"end": 10056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9690,
											"end": 10056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9690,
											"end": 10056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10062,
											"end": 10481,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 10062,
											"end": 10481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10228,
											"end": 10232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10268,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10255,
											"end": 10264,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10243,
											"end": 10269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10243,
											"end": 10269,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10309,
											"end": 10313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10305,
											"end": 10325,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10301,
											"end": 10302,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10290,
											"end": 10299,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10286,
											"end": 10303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10279,
											"end": 10326,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10343,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 10469,
											"end": 10473,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10343,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 10343,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10343,
											"end": 10474,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 10343,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10335,
											"end": 10474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10335,
											"end": 10474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10062,
											"end": 10481,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10062,
											"end": 10481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10062,
											"end": 10481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10062,
											"end": 10481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10487,
											"end": 10678,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 10487,
											"end": 10678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10527,
											"end": 10530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10546,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 10564,
											"end": 10565,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10546,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 10546,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10546,
											"end": 10566,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 10546,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10580,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 10598,
											"end": 10599,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10580,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 10580,
											"end": 10600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10580,
											"end": 10600,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 10580,
											"end": 10600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10575,
											"end": 10600,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10575,
											"end": 10600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10623,
											"end": 10624,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10620,
											"end": 10621,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10616,
											"end": 10625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10609,
											"end": 10625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10609,
											"end": 10625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10644,
											"end": 10647,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10641,
											"end": 10642,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10638,
											"end": 10648,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10671,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 10635,
											"end": 10671,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10651,
											"end": 10669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 10651,
											"end": 10669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 10651,
											"end": 10669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10651,
											"end": 10669,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 10651,
											"end": 10669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10671,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 10635,
											"end": 10671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10487,
											"end": 10678,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10487,
											"end": 10678,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10487,
											"end": 10678,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10487,
											"end": 10678,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10487,
											"end": 10678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10684,
											"end": 11126,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 10684,
											"end": 11126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10833,
											"end": 10837,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10871,
											"end": 10873,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10860,
											"end": 10869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10856,
											"end": 10874,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10848,
											"end": 10874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10848,
											"end": 10874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10884,
											"end": 10955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 10952,
											"end": 10953,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10941,
											"end": 10950,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10937,
											"end": 10954,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10928,
											"end": 10934,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10884,
											"end": 10955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 10884,
											"end": 10955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10884,
											"end": 10955,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 10884,
											"end": 10955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10965,
											"end": 11037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11022,
											"end": 11031,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11009,
											"end": 11015,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10965,
											"end": 11037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 10965,
											"end": 11037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10965,
											"end": 11037,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 10965,
											"end": 11037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11047,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 11115,
											"end": 11117,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11104,
											"end": 11113,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11100,
											"end": 11118,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11091,
											"end": 11097,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11047,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 11047,
											"end": 11119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11047,
											"end": 11119,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 11047,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10684,
											"end": 11126,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10684,
											"end": 11126,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10684,
											"end": 11126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10684,
											"end": 11126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10684,
											"end": 11126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10684,
											"end": 11126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10684,
											"end": 11126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11313,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 11132,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11272,
											"end": 11305,
											"name": "PUSH",
											"source": 5,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 11268,
											"end": 11269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11260,
											"end": 11266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11256,
											"end": 11270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11249,
											"end": 11306,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11319,
											"end": 11685,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 11319,
											"end": 11685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11461,
											"end": 11464,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11482,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 11546,
											"end": 11548,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 11541,
											"end": 11544,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11482,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 11482,
											"end": 11549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11482,
											"end": 11549,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 11482,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11475,
											"end": 11549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11475,
											"end": 11549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 11647,
											"end": 11650,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 11558,
											"end": 11651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11651,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 11558,
											"end": 11651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11676,
											"end": 11678,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11671,
											"end": 11674,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11667,
											"end": 11679,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11660,
											"end": 11679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11660,
											"end": 11679,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11319,
											"end": 11685,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11319,
											"end": 11685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11319,
											"end": 11685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11319,
											"end": 11685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11691,
											"end": 12110,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 11691,
											"end": 12110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11857,
											"end": 11861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11895,
											"end": 11897,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11884,
											"end": 11893,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11880,
											"end": 11898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11872,
											"end": 11898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11872,
											"end": 11898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11944,
											"end": 11953,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11938,
											"end": 11942,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11934,
											"end": 11954,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11930,
											"end": 11931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11919,
											"end": 11928,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11915,
											"end": 11932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11908,
											"end": 11955,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11972,
											"end": 12103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 12098,
											"end": 12102,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11972,
											"end": 12103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 11972,
											"end": 12103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11972,
											"end": 12103,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 11972,
											"end": 12103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11964,
											"end": 12103,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11964,
											"end": 12103,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11691,
											"end": 12110,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11691,
											"end": 12110,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11691,
											"end": 12110,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11691,
											"end": 12110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"stack_contract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getStake()": "fc0e3d90",
							"getTotalStake()": "7bc74225",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stake(uint256,uint256)": "7b0472f0",
							"stakingToken()": "72f702f3",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"userStaking(address)": "821460f5",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawDate\",\"type\":\"uint256\"}],\"internalType\":\"struct StakingContract.Stake\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawDate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"stack_contract.sol\":\"StakingContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"stack_contract.sol\":{\"keccak256\":\"0x88fefd0ecc6ebb669c59d7fc09c68748e4e4974f001297bc009786b94aae0ed9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a86964455d3a63756b18cea9fb5a2fa83d2bd601b45fc6d7538d57df1ab3c358\",\"dweb:/ipfs/QmUEUi7EHmn8Tc6F518zp65PB7vNWBiUHfj9PnMf2HhGgA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "stack_contract.sol:StakingContract",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "stack_contract.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 332,
								"contract": "stack_contract.sol:StakingContract",
								"label": "stakingToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)290"
							},
							{
								"astId": 334,
								"contract": "stack_contract.sol:StakingContract",
								"label": "totalStaked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 339,
								"contract": "stack_contract.sol:StakingContract",
								"label": "userStaking",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(Stake)344_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)290": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stake)344_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingContract.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)344_storage"
							},
							"t_struct(Stake)344_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.Stake",
								"members": [
									{
										"astId": 341,
										"contract": "stack_contract.sol:StakingContract",
										"label": "stakedAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 343,
										"contract": "stack_contract.sol:StakingContract",
										"label": "withdrawDate",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 321,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 320,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								320
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 224,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 233,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 290,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 290,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 290,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 290,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 290,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 290,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 291,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								224,
								233
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 297,
												"id": 300,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 320,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 307,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 306,
												"id": 309,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 320,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 320,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"stack_contract.sol": {
				"ast": {
					"absolutePath": "stack_contract.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"IERC20": [
							290
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						],
						"StakingContract": [
							536
						]
					},
					"id": 537,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 537,
							"sourceUnit": 291,
							"src": "57:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 537,
							"sourceUnit": 213,
							"src": "114:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 537,
							"sourceUnit": 148,
							"src": "177:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 326,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"260:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "260:15:4"
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "260:15:4"
								},
								{
									"baseName": {
										"id": 328,
										"name": "Ownable",
										"nameLocations": [
											"277:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "277:7:4"
									},
									"id": 329,
									"nodeType": "InheritanceSpecifier",
									"src": "277:7:4"
								}
							],
							"canonicalName": "StakingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 536,
							"linearizedBaseContracts": [
								536,
								147,
								320,
								212
							],
							"name": "StakingContract",
							"nameLocation": "241:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 332,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "306:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 536,
									"src": "292:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$290",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 331,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 330,
											"name": "IERC20",
											"nameLocations": [
												"292:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 290,
											"src": "292:6:4"
										},
										"referencedDeclaration": 290,
										"src": "292:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$290",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 334,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "340:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 536,
									"src": "325:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 333,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "325:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "821460f5",
									"id": 339,
									"mutability": "mutable",
									"name": "userStaking",
									"nameLocation": "395:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 536,
									"src": "362:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
										"typeString": "mapping(address => struct StakingContract.Stake)"
									},
									"typeName": {
										"id": 338,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 335,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "370:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "362:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
											"typeString": "mapping(address => struct StakingContract.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 337,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 336,
												"name": "Stake",
												"nameLocations": [
													"381:5:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 344,
												"src": "381:5:4"
											},
											"referencedDeclaration": 344,
											"src": "381:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$344_storage_ptr",
												"typeString": "struct StakingContract.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.Stake",
									"id": 344,
									"members": [
										{
											"constant": false,
											"id": 341,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "448:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 344,
											"src": "440:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 340,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "440:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 343,
											"mutability": "mutable",
											"name": "withdrawDate",
											"nameLocation": "482:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 344,
											"src": "474:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 342,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "474:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "424:5:4",
									"nodeType": "StructDefinition",
									"scope": 536,
									"src": "417:89:4",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 350,
									"name": "Staked",
									"nameLocation": "522:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "545:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "529:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "559:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "551:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:38:4"
									},
									"src": "516:51:4"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 356,
									"name": "Withdrawn",
									"nameLocation": "578:9:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "604:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "588:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "618:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "610:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "610:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:38:4"
									},
									"src": "572:54:4"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "690:45:4",
										"statements": [
											{
												"expression": {
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 366,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "700:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 367,
														"name": "_stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "715:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"src": "700:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "700:28:4"
											}
										]
									},
									"id": 371,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 362,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "678:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "682:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "678:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 364,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 361,
												"name": "Ownable",
												"nameLocations": [
													"670:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "670:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "670:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "655:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "648:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$290",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "IERC20",
														"nameLocations": [
															"648:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 290,
														"src": "648:6:4"
													},
													"referencedDeclaration": 290,
													"src": "648:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:22:4"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:4"
									},
									"scope": 536,
									"src": "636:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "814:533:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 381,
																			"name": "userStaking",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 339,
																			"src": "845:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
																				"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
																			}
																		},
																		"id": 384,
																		"indexExpression": {
																			"expression": {
																				"id": 382,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "857:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "861:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "857:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "845:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$344_storage",
																			"typeString": "struct StakingContract.Stake storage ref"
																		}
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "869:12:4",
																	"memberName": "stakedAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 341,
																	"src": "845:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "885:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "845:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 388,
																			"name": "userStaking",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 339,
																			"src": "890:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
																				"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
																			}
																		},
																		"id": 391,
																		"indexExpression": {
																			"expression": {
																				"id": 389,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "902:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "906:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "902:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "890:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$344_storage",
																			"typeString": "struct StakingContract.Stake storage ref"
																		}
																	},
																	"id": 392,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "914:12:4",
																	"memberName": "withdrawDate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 343,
																	"src": "890:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "930:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "890:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "845:86:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7573657220616c72656164792068617320737461636b696e67",
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "945:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0",
																"typeString": "literal_string \"user already has stacking\""
															},
															"value": "user already has stacking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0",
																"typeString": "literal_string \"user already has stacking\""
															}
														],
														"id": 380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "824:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "824:158:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "824:158:4"
											},
											{
												"expression": {
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 399,
																"name": "userStaking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "1001:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
																	"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
																}
															},
															"id": 402,
															"indexExpression": {
																"expression": {
																	"id": 400,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1013:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1017:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1013:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1001:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$344_storage",
																"typeString": "struct StakingContract.Stake storage ref"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1025:12:4",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 341,
														"src": "1001:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 404,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "1040:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1001:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "1001:45:4"
											},
											{
												"expression": {
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 407,
																"name": "userStaking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "1056:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
																	"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
																}
															},
															"id": 410,
															"indexExpression": {
																"expression": {
																	"id": 408,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1068:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1072:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1068:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1056:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$344_storage",
																"typeString": "struct StakingContract.Stake storage ref"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1080:12:4",
														"memberName": "withdrawDate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 343,
														"src": "1056:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 412,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1095:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1101:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1095:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 414,
															"name": "period",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "1113:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1095:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1056:63:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "1056:63:4"
											},
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1143:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 446,
														"src": "1138:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 418,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1138:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 430,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 422,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1179:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1183:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1179:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 426,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1199:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$536",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$536",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1191:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 424,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1191:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1191:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "1206:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 420,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1153:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1166:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 289,
														"src": "1153:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1153:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1138:75:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 432,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "1231:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1240:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1223:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1223:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "1223:35:4"
											},
											{
												"expression": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 436,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "1269:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 437,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "1284:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1269:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "1269:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 441,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1321:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1325:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1321:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "1333:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 440,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "1314:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1314:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "EmitStatement",
												"src": "1309:31:4"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 378,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 377,
												"name": "nonReentrant",
												"nameLocations": [
													"801:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "801:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "801:12:4"
										}
									],
									"name": "stake",
									"nameLocation": "754:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "768:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "760:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "period",
												"nameLocation": "784:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "776:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:32:4"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "814:0:4"
									},
									"scope": 536,
									"src": "745:602:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "1407:47:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 453,
														"name": "userStaking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "1424:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
															"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
														}
													},
													"id": 456,
													"indexExpression": {
														"expression": {
															"id": 454,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1436:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1440:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1436:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1424:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$344_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"functionReturnParameters": 452,
												"id": 457,
												"nodeType": "Return",
												"src": "1417:30:4"
											}
										]
									},
									"functionSelector": "fc0e3d90",
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStake",
									"nameLocation": "1362:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1370:2:4"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1393:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$344_memory_ptr",
													"typeString": "struct StakingContract.Stake"
												},
												"typeName": {
													"id": 450,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 449,
														"name": "Stake",
														"nameLocations": [
															"1393:5:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 344,
														"src": "1393:5:4"
													},
													"referencedDeclaration": 344,
													"src": "1393:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$344_storage_ptr",
														"typeString": "struct StakingContract.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:14:4"
									},
									"scope": 536,
									"src": "1353:101:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "1514:35:4",
										"statements": [
											{
												"expression": {
													"id": 464,
													"name": "totalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "1531:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 463,
												"id": 465,
												"nodeType": "Return",
												"src": "1524:18:4"
											}
										]
									},
									"functionSelector": "7bc74225",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalStake",
									"nameLocation": "1469:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1482:2:4"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "1505:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1504:9:4"
									},
									"scope": 536,
									"src": "1460:89:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "1601:515:4",
										"statements": [
											{
												"assignments": [
													474
												],
												"declarations": [
													{
														"constant": false,
														"id": 474,
														"mutability": "mutable",
														"name": "userStack",
														"nameLocation": "1624:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 534,
														"src": "1611:22:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$344_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 473,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 472,
																"name": "Stake",
																"nameLocations": [
																	"1611:5:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 344,
																"src": "1611:5:4"
															},
															"referencedDeclaration": 344,
															"src": "1611:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$344_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 479,
												"initialValue": {
													"baseExpression": {
														"id": 475,
														"name": "userStaking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "1636:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
															"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
														}
													},
													"id": 478,
													"indexExpression": {
														"expression": {
															"id": 476,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1648:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1652:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1648:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1636:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$344_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1611:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 481,
																	"name": "userStack",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 474,
																	"src": "1677:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$344_memory_ptr",
																		"typeString": "struct StakingContract.Stake memory"
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1687:12:4",
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 341,
																"src": "1677:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1702:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1677:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742077697468647261772030",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1705:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															},
															"value": "Cannot withdraw 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															}
														],
														"id": 480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1669:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "1669:56:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 489,
																	"name": "userStack",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 474,
																	"src": "1743:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$344_memory_ptr",
																		"typeString": "struct StakingContract.Stake memory"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1753:12:4",
																"memberName": "withdrawDate",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 343,
																"src": "1743:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 491,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1769:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1775:9:4",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1769:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1743:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6f206561726c7920776974686472617721",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1786:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5",
																"typeString": "literal_string \"Too early withdraw!\""
															},
															"value": "Too early withdraw!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5",
																"typeString": "literal_string \"Too early withdraw!\""
															}
														],
														"id": 488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1735:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1735:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "1735:73:4"
											},
											{
												"assignments": [
													498
												],
												"declarations": [
													{
														"constant": false,
														"id": 498,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1832:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 534,
														"src": "1827:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 497,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1827:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 506,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 501,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1864:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1868:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1864:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 503,
																"name": "userStack",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "1876:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$344_memory_ptr",
																	"typeString": "struct StakingContract.Stake memory"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1886:12:4",
															"memberName": "stakedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 341,
															"src": "1876:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 499,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1842:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1855:8:4",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "1842:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1842:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1827:72:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 508,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "1917:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1926:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 507,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1909:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1909:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "1909:35:4"
											},
											{
												"expression": {
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 512,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "1955:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 513,
															"name": "userStack",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "1970:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$344_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														},
														"id": 514,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1980:12:4",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 341,
														"src": "1970:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1955:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "1955:37:4"
											},
											{
												"expression": {
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 517,
															"name": "userStaking",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "2003:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
																"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 520,
														"indexExpression": {
															"expression": {
																"id": 518,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2015:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2019:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2015:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2003:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$344_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2035:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2038:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 521,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2029:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$344_storage_ptr_$",
																"typeString": "type(struct StakingContract.Stake storage pointer)"
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2029:11:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$344_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"src": "2003:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$344_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "2003:37:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 528,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2074:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2078:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2074:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 530,
																"name": "userStack",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "2086:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$344_memory_ptr",
																	"typeString": "struct StakingContract.Stake memory"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2096:12:4",
															"memberName": "stakedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 341,
															"src": "2086:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 527,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "2064:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2064:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "EmitStatement",
												"src": "2059:50:4"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 470,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 469,
												"name": "nonReentrant",
												"nameLocations": [
													"1588:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1588:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1588:12:4"
										}
									],
									"name": "withdraw",
									"nameLocation": "1568:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1576:2:4"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1601:0:4"
									},
									"scope": 536,
									"src": "1559:557:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 537,
							"src": "232:1887:4",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								350,
								356
							]
						}
					],
					"src": "32:2087:4"
				},
				"id": 4
			}
		}
	}
}