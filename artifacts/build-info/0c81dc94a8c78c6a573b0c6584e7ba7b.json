{
	"id": "0c81dc94a8c78c6a573b0c6584e7ba7b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"stack_contract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ncontract StakingContract is ReentrancyGuard, Ownable {\n\n    IERC20 public stakingToken;\n\n    uint256 public totalStaked;\n    \n    mapping(address => Stake[]) public userStaking;\n    \n    struct Stake {\n        uint256 stakedAmount;    \n        uint256 withdrawDate;     \n    }\n    \n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    \n    constructor(IERC20 _stakingToken) Ownable(msg.sender) {\n        stakingToken = _stakingToken;\n    }\n    \n    function stake(uint256 amount, uint256 period) external nonReentrant {\n        // require(\n        //     userStaking[msg.sender].stakedAmount == 0 && userStaking[msg.sender].withdrawDate == 0,\n        //     \"user already has stacking\"\n        // );\n\n        Stake memory newStack = Stake(amount, block.timestamp + period);\n        \n        // userStaking[msg.sender].stakedAmount = amount;\n        // userStaking[msg.sender].withdrawDate = block.timestamp + period;\n\n        userStaking[msg.sender].push(newStack);\n        \n        bool success = stakingToken.transferFrom(msg.sender, address(this), amount);\n        require(success, \"Transfer failed\");\n\n        totalStaked += amount;\n        \n        emit Staked(msg.sender, amount);\n    }\n\n    function getStake() public view returns(Stake[] memory) {\n        return userStaking[msg.sender];\n    }\n\n    function getTotalStake() public view returns(uint256) {\n        return totalStaked;\n    }\n    \n    function withdraw() external nonReentrant {\n        Stake[] memory userStack = userStaking[msg.sender];\n        //require(userStack.stakedAmount > 0, \"Cannot withdraw 0\");\n        //require(userStack.withdrawDate <= block.timestamp, \"Too early withdraw!\");\n\n        uint256 unstackAmount = 0;\n\n        for (uint i = 0; i < userStack.length; i++) {\n            if (userStack[i].withdrawDate > 0 && userStack[i].stakedAmount > 0){\n                unstackAmount += userStack[i].stakedAmount;\n                userStaking[msg.sender][i] = Stake(0, 0);\n            }\n        }\n        \n        bool success = stakingToken.transfer(msg.sender, unstackAmount);\n        require(success, \"Transfer failed\");\n\n        totalStaked -= unstackAmount;\n        \n        emit Withdrawn(msg.sender, unstackAmount);\n    }\n\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"stack_contract.sol": {
				"StakingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_stakingToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stakedAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "withdrawDate",
											"type": "uint256"
										}
									],
									"internalType": "struct StakingContract.Stake[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "period",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userStaking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "withdrawDate",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"stack_contract.sol\":232:2509  contract StakingContract is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"stack_contract.sol\":638:737  constructor(IERC20 _stakingToken) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"stack_contract.sol\":680:690  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"stack_contract.sol\":717:730  _stakingToken */\n  dup1\n    /* \"stack_contract.sol\":702:714  stakingToken */\n  0x02\n  0x00\n    /* \"stack_contract.sol\":702:730  stakingToken = _stakingToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"stack_contract.sol\":638:737  constructor(IERC20 _stakingToken) Ownable(msg.sender) {... */\n  pop\n    /* \"stack_contract.sol\":232:2509  contract StakingContract is ReentrancyGuard, Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_22:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_34\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_21\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_23:\n    /* \"#utility.yul\":771:809   */\n  tag_36\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_22\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_37:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_24:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_39\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_23\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1396   */\ntag_3:\n    /* \"#utility.yul\":1101:1107   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  0x20\n    /* \"#utility.yul\":1138:1147   */\n  dup3\n    /* \"#utility.yul\":1129:1136   */\n  dup5\n    /* \"#utility.yul\":1125:1148   */\n  sub\n    /* \"#utility.yul\":1121:1153   */\n  slt\n    /* \"#utility.yul\":1118:1237   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1156:1235   */\n  tag_42\n  tag_18\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1118:1237   */\ntag_41:\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1301:1379   */\n  tag_43\n    /* \"#utility.yul\":1371:1378   */\n  dup5\n    /* \"#utility.yul\":1362:1368   */\n  dup3\n    /* \"#utility.yul\":1351:1360   */\n  dup6\n    /* \"#utility.yul\":1347:1369   */\n  add\n    /* \"#utility.yul\":1301:1379   */\n  tag_24\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1291:1379   */\n  swap2\n  pop\n    /* \"#utility.yul\":1247:1389   */\n  pop\n    /* \"#utility.yul\":1017:1396   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1402:1520   */\ntag_25:\n    /* \"#utility.yul\":1489:1513   */\n  tag_45\n    /* \"#utility.yul\":1507:1512   */\n  dup2\n    /* \"#utility.yul\":1489:1513   */\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1484:1487   */\n  dup3\n    /* \"#utility.yul\":1477:1514   */\n  mstore\n    /* \"#utility.yul\":1402:1520   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1526:1748   */\ntag_11:\n    /* \"#utility.yul\":1619:1623   */\n  0x00\n    /* \"#utility.yul\":1657:1659   */\n  0x20\n    /* \"#utility.yul\":1646:1655   */\n  dup3\n    /* \"#utility.yul\":1642:1660   */\n  add\n    /* \"#utility.yul\":1634:1660   */\n  swap1\n  pop\n    /* \"#utility.yul\":1670:1741   */\n  tag_47\n    /* \"#utility.yul\":1738:1739   */\n  0x00\n    /* \"#utility.yul\":1727:1736   */\n  dup4\n    /* \"#utility.yul\":1723:1740   */\n  add\n    /* \"#utility.yul\":1714:1720   */\n  dup5\n    /* \"#utility.yul\":1670:1741   */\n  tag_25\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1526:1748   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"stack_contract.sol\":232:2509  contract StakingContract is ReentrancyGuard, Ownable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"stack_contract.sol\":232:2509  contract StakingContract is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x90816302\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfc0e3d90\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7bc74225\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"stack_contract.sol\":1704:2506  function withdraw() external nonReentrant {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"stack_contract.sol\":292:318  IERC20 public stakingToken */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stack_contract.sol\":747:1490  function stake(uint256 amount, uint256 period) external nonReentrant {... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"stack_contract.sol\":1605:1694  function getTotalStake() public view returns(uint256) {... */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stack_contract.sol\":325:351  uint256 public totalStaked */\n    tag_8:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stack_contract.sol\":362:408  mapping(address => Stake[]) public userStaking */\n    tag_10:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"stack_contract.sol\":1496:1599  function getStake() public view returns(Stake[] memory) {... */\n    tag_12:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stack_contract.sol\":1704:2506  function withdraw() external nonReentrant {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_52\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_53\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_52:\n        /* \"stack_contract.sol\":1756:1780  Stake[] memory userStack */\n      0x00\n        /* \"stack_contract.sol\":1783:1794  userStaking */\n      0x04\n        /* \"stack_contract.sol\":1783:1806  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":1795:1805  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1783:1806  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":1756:1806  Stake[] memory userStack = userStaking[msg.sender] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_55:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_56\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_55)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"stack_contract.sol\":1970:1991  uint256 unstackAmount */\n      0x00\n        /* \"stack_contract.sol\":2011:2017  uint i */\n      dup1\n        /* \"stack_contract.sol\":2006:2274  for (uint i = 0; i < userStack.length; i++) {... */\n    tag_58:\n        /* \"stack_contract.sol\":2027:2036  userStack */\n      dup3\n        /* \"stack_contract.sol\":2027:2043  userStack.length */\n      mload\n        /* \"stack_contract.sol\":2023:2024  i */\n      dup2\n        /* \"stack_contract.sol\":2023:2043  i < userStack.length */\n      lt\n        /* \"stack_contract.sol\":2006:2274  for (uint i = 0; i < userStack.length; i++) {... */\n      iszero\n      tag_59\n      jumpi\n        /* \"stack_contract.sol\":2096:2097  0 */\n      0x00\n        /* \"stack_contract.sol\":2068:2077  userStack */\n      dup4\n        /* \"stack_contract.sol\":2078:2079  i */\n      dup3\n        /* \"stack_contract.sol\":2068:2080  userStack[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_61\n      jumpi\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n    tag_61:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"stack_contract.sol\":2068:2093  userStack[i].withdrawDate */\n      0x20\n      add\n      mload\n        /* \"stack_contract.sol\":2068:2097  userStack[i].withdrawDate > 0 */\n      gt\n        /* \"stack_contract.sol\":2068:2130  userStack[i].withdrawDate > 0 && userStack[i].stakedAmount > 0 */\n      dup1\n      iszero\n      tag_64\n      jumpi\n      pop\n        /* \"stack_contract.sol\":2129:2130  0 */\n      0x00\n        /* \"stack_contract.sol\":2101:2110  userStack */\n      dup4\n        /* \"stack_contract.sol\":2111:2112  i */\n      dup3\n        /* \"stack_contract.sol\":2101:2113  userStack[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_65\n      jumpi\n      tag_66\n      tag_63\n      jump\t// in\n    tag_66:\n    tag_65:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"stack_contract.sol\":2101:2126  userStack[i].stakedAmount */\n      0x00\n      add\n      mload\n        /* \"stack_contract.sol\":2101:2130  userStack[i].stakedAmount > 0 */\n      gt\n        /* \"stack_contract.sol\":2068:2130  userStack[i].withdrawDate > 0 && userStack[i].stakedAmount > 0 */\n    tag_64:\n        /* \"stack_contract.sol\":2064:2264  if (userStack[i].withdrawDate > 0 && userStack[i].stakedAmount > 0){... */\n      iszero\n      tag_67\n      jumpi\n        /* \"stack_contract.sol\":2166:2175  userStack */\n      dup3\n        /* \"stack_contract.sol\":2176:2177  i */\n      dup2\n        /* \"stack_contract.sol\":2166:2178  userStack[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_68\n      jumpi\n      tag_69\n      tag_63\n      jump\t// in\n    tag_69:\n    tag_68:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"stack_contract.sol\":2166:2191  userStack[i].stakedAmount */\n      0x00\n      add\n      mload\n        /* \"stack_contract.sol\":2149:2191  unstackAmount += userStack[i].stakedAmount */\n      dup3\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      swap2\n      pop\n        /* \"stack_contract.sol\":2238:2249  Stake(0, 0) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"stack_contract.sol\":2244:2245  0 */\n      0x00\n        /* \"stack_contract.sol\":2238:2249  Stake(0, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"stack_contract.sol\":2247:2248  0 */\n      0x00\n        /* \"stack_contract.sol\":2238:2249  Stake(0, 0) */\n      dup2\n      mstore\n      pop\n        /* \"stack_contract.sol\":2209:2220  userStaking */\n      0x04\n        /* \"stack_contract.sol\":2209:2232  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":2221:2231  msg.sender */\n      caller\n        /* \"stack_contract.sol\":2209:2232  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":2233:2234  i */\n      dup3\n        /* \"stack_contract.sol\":2209:2235  userStaking[msg.sender][i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_72\n      jumpi\n      tag_73\n      tag_63\n      jump\t// in\n    tag_73:\n    tag_72:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"stack_contract.sol\":2209:2249  userStaking[msg.sender][i] = Stake(0, 0) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"stack_contract.sol\":2064:2264  if (userStack[i].withdrawDate > 0 && userStack[i].stakedAmount > 0){... */\n    tag_67:\n        /* \"stack_contract.sol\":2045:2048  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"stack_contract.sol\":2006:2274  for (uint i = 0; i < userStack.length; i++) {... */\n      jump(tag_58)\n    tag_59:\n      pop\n        /* \"stack_contract.sol\":2292:2304  bool success */\n      0x00\n        /* \"stack_contract.sol\":2307:2319  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"stack_contract.sol\":2307:2328  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"stack_contract.sol\":2329:2339  msg.sender */\n      caller\n        /* \"stack_contract.sol\":2341:2354  unstackAmount */\n      dup5\n        /* \"stack_contract.sol\":2307:2355  stakingToken.transfer(msg.sender, unstackAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"stack_contract.sol\":2292:2355  bool success = stakingToken.transfer(msg.sender, unstackAmount) */\n      swap1\n      pop\n        /* \"stack_contract.sol\":2373:2380  success */\n      dup1\n        /* \"stack_contract.sol\":2365:2400  require(success, \"Transfer failed\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"stack_contract.sol\":2426:2439  unstackAmount */\n      dup2\n        /* \"stack_contract.sol\":2411:2422  totalStaked */\n      0x03\n      0x00\n        /* \"stack_contract.sol\":2411:2439  totalStaked -= unstackAmount */\n      dup3\n      dup3\n      sload\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stack_contract.sol\":2473:2483  msg.sender */\n      caller\n        /* \"stack_contract.sol\":2463:2499  Withdrawn(msg.sender, unstackAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"stack_contract.sol\":2485:2498  unstackAmount */\n      dup4\n        /* \"stack_contract.sol\":2463:2499  Withdrawn(msg.sender, unstackAmount) */\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"stack_contract.sol\":1746:2506  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_87\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_88\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_87:\n        /* \"stack_contract.sol\":1704:2506  function withdraw() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"stack_contract.sol\":292:318  IERC20 public stakingToken */\n    tag_19:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"stack_contract.sol\":747:1490  function stake(uint256 amount, uint256 period) external nonReentrant {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_96\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_53\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_96:\n        /* \"stack_contract.sol\":1007:1028  Stake memory newStack */\n      0x00\n        /* \"stack_contract.sol\":1031:1070  Stake(amount, block.timestamp + period) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"stack_contract.sol\":1037:1043  amount */\n      dup5\n        /* \"stack_contract.sol\":1031:1070  Stake(amount, block.timestamp + period) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"stack_contract.sol\":1063:1069  period */\n      dup4\n        /* \"stack_contract.sol\":1045:1060  block.timestamp */\n      timestamp\n        /* \"stack_contract.sol\":1045:1069  block.timestamp + period */\n      tag_98\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_98:\n        /* \"stack_contract.sol\":1031:1070  Stake(amount, block.timestamp + period) */\n      dup2\n      mstore\n      pop\n        /* \"stack_contract.sol\":1007:1070  Stake memory newStack = Stake(amount, block.timestamp + period) */\n      swap1\n      pop\n        /* \"stack_contract.sol\":1224:1235  userStaking */\n      0x04\n        /* \"stack_contract.sol\":1224:1247  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":1236:1246  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1224:1247  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":1253:1261  newStack */\n      dup2\n        /* \"stack_contract.sol\":1224:1262  userStaking[msg.sender].push(newStack) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"stack_contract.sol\":1281:1293  bool success */\n      0x00\n        /* \"stack_contract.sol\":1296:1308  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"stack_contract.sol\":1296:1321  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"stack_contract.sol\":1322:1332  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1342:1346  this */\n      address\n        /* \"stack_contract.sol\":1349:1355  amount */\n      dup8\n        /* \"stack_contract.sol\":1296:1356  stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_104:\n        /* \"stack_contract.sol\":1281:1356  bool success = stakingToken.transferFrom(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"stack_contract.sol\":1374:1381  success */\n      dup1\n        /* \"stack_contract.sol\":1366:1401  require(success, \"Transfer failed\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_83\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"stack_contract.sol\":1427:1433  amount */\n      dup4\n        /* \"stack_contract.sol\":1412:1423  totalStaked */\n      0x03\n      0x00\n        /* \"stack_contract.sol\":1412:1433  totalStaked += amount */\n      dup3\n      dup3\n      sload\n      tag_107\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_107:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stack_contract.sol\":1464:1474  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1457:1483  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"stack_contract.sol\":1476:1482  amount */\n      dup6\n        /* \"stack_contract.sol\":1457:1483  Staked(msg.sender, amount) */\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"stack_contract.sol\":816:1490  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_109\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_88\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_109:\n        /* \"stack_contract.sol\":747:1490  function stake(uint256 amount, uint256 period) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"stack_contract.sol\":1605:1694  function getTotalStake() public view returns(uint256) {... */\n    tag_27:\n        /* \"stack_contract.sol\":1650:1657  uint256 */\n      0x00\n        /* \"stack_contract.sol\":1676:1687  totalStaked */\n      sload(0x03)\n        /* \"stack_contract.sol\":1669:1687  return totalStaked */\n      swap1\n      pop\n        /* \"stack_contract.sol\":1605:1694  function getTotalStake() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"stack_contract.sol\":325:351  uint256 public totalStaked */\n    tag_31:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"stack_contract.sol\":362:408  mapping(address => Stake[]) public userStaking */\n    tag_40:\n      mstore(0x20, 0x04)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"stack_contract.sol\":1496:1599  function getStake() public view returns(Stake[] memory) {... */\n    tag_48:\n        /* \"stack_contract.sol\":1536:1550  Stake[] memory */\n      0x60\n        /* \"stack_contract.sol\":1569:1580  userStaking */\n      0x04\n        /* \"stack_contract.sol\":1569:1592  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":1581:1591  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1569:1592  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":1562:1592  return userStaking[msg.sender] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_121:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_122\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_121)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"stack_contract.sol\":1496:1599  function getStake() public view returns(Stake[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_34\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_138:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_139:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_140:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_176\n        /* \"#utility.yul\":306:340   */\n      tag_177\n        /* \"#utility.yul\":315:339   */\n      tag_178\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_138\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":306:340   */\n      tag_139\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":288:341   */\n      tag_138\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_141:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_180\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_140\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:625   */\n    tag_142:\n        /* \"#utility.yul\":549:558   */\n      0x00\n        /* \"#utility.yul\":582:619   */\n      tag_182\n        /* \"#utility.yul\":613:618   */\n      dup3\n        /* \"#utility.yul\":582:619   */\n      tag_141\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":569:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:790   */\n    tag_143:\n        /* \"#utility.yul\":732:783   */\n      tag_184\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":732:783   */\n      tag_142\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":727:730   */\n      dup3\n        /* \"#utility.yul\":720:784   */\n      mstore\n        /* \"#utility.yul\":631:790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1046   */\n    tag_21:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":930:939   */\n      dup3\n        /* \"#utility.yul\":926:944   */\n      add\n        /* \"#utility.yul\":918:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1039   */\n      tag_186\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1025:1034   */\n      dup4\n        /* \"#utility.yul\":1021:1038   */\n      add\n        /* \"#utility.yul\":1012:1018   */\n      dup5\n        /* \"#utility.yul\":954:1039   */\n      tag_143\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":796:1046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1133:1250   */\n    tag_145:\n        /* \"#utility.yul\":1242:1243   */\n      0x00\n        /* \"#utility.yul\":1239:1240   */\n      dup1\n        /* \"#utility.yul\":1232:1244   */\n      revert\n        /* \"#utility.yul\":1379:1456   */\n    tag_147:\n        /* \"#utility.yul\":1416:1423   */\n      0x00\n        /* \"#utility.yul\":1445:1450   */\n      dup2\n        /* \"#utility.yul\":1434:1450   */\n      swap1\n      pop\n        /* \"#utility.yul\":1379:1456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1462:1584   */\n    tag_148:\n        /* \"#utility.yul\":1535:1559   */\n      tag_192\n        /* \"#utility.yul\":1553:1558   */\n      dup2\n        /* \"#utility.yul\":1535:1559   */\n      tag_147\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1528:1533   */\n      dup2\n        /* \"#utility.yul\":1525:1560   */\n      eq\n        /* \"#utility.yul\":1515:1578   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":1574:1575   */\n      0x00\n        /* \"#utility.yul\":1571:1572   */\n      dup1\n        /* \"#utility.yul\":1564:1576   */\n      revert\n        /* \"#utility.yul\":1515:1578   */\n    tag_193:\n        /* \"#utility.yul\":1462:1584   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1590:1729   */\n    tag_149:\n        /* \"#utility.yul\":1636:1641   */\n      0x00\n        /* \"#utility.yul\":1674:1680   */\n      dup2\n        /* \"#utility.yul\":1661:1681   */\n      calldataload\n        /* \"#utility.yul\":1652:1681   */\n      swap1\n      pop\n        /* \"#utility.yul\":1690:1723   */\n      tag_195\n        /* \"#utility.yul\":1717:1722   */\n      dup2\n        /* \"#utility.yul\":1690:1723   */\n      tag_148\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1590:1729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:2209   */\n    tag_24:\n        /* \"#utility.yul\":1803:1809   */\n      0x00\n        /* \"#utility.yul\":1811:1817   */\n      dup1\n        /* \"#utility.yul\":1860:1862   */\n      0x40\n        /* \"#utility.yul\":1848:1857   */\n      dup4\n        /* \"#utility.yul\":1839:1846   */\n      dup6\n        /* \"#utility.yul\":1835:1858   */\n      sub\n        /* \"#utility.yul\":1831:1863   */\n      slt\n        /* \"#utility.yul\":1828:1947   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":1866:1945   */\n      tag_198\n      tag_145\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1828:1947   */\n    tag_197:\n        /* \"#utility.yul\":1986:1987   */\n      0x00\n        /* \"#utility.yul\":2011:2064   */\n      tag_199\n        /* \"#utility.yul\":2056:2063   */\n      dup6\n        /* \"#utility.yul\":2047:2053   */\n      dup3\n        /* \"#utility.yul\":2036:2045   */\n      dup7\n        /* \"#utility.yul\":2032:2054   */\n      add\n        /* \"#utility.yul\":2011:2064   */\n      tag_149\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2001:2064   */\n      swap3\n      pop\n        /* \"#utility.yul\":1957:2074   */\n      pop\n        /* \"#utility.yul\":2113:2115   */\n      0x20\n        /* \"#utility.yul\":2139:2192   */\n      tag_200\n        /* \"#utility.yul\":2184:2191   */\n      dup6\n        /* \"#utility.yul\":2175:2181   */\n      dup3\n        /* \"#utility.yul\":2164:2173   */\n      dup7\n        /* \"#utility.yul\":2160:2182   */\n      add\n        /* \"#utility.yul\":2139:2192   */\n      tag_149\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2129:2192   */\n      swap2\n      pop\n        /* \"#utility.yul\":2084:2202   */\n      pop\n        /* \"#utility.yul\":1735:2209   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2215:2333   */\n    tag_150:\n        /* \"#utility.yul\":2302:2326   */\n      tag_202\n        /* \"#utility.yul\":2320:2325   */\n      dup2\n        /* \"#utility.yul\":2302:2326   */\n      tag_147\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2297:2300   */\n      dup3\n        /* \"#utility.yul\":2290:2327   */\n      mstore\n        /* \"#utility.yul\":2215:2333   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2339:2561   */\n    tag_29:\n        /* \"#utility.yul\":2432:2436   */\n      0x00\n        /* \"#utility.yul\":2470:2472   */\n      0x20\n        /* \"#utility.yul\":2459:2468   */\n      dup3\n        /* \"#utility.yul\":2455:2473   */\n      add\n        /* \"#utility.yul\":2447:2473   */\n      swap1\n      pop\n        /* \"#utility.yul\":2483:2554   */\n      tag_204\n        /* \"#utility.yul\":2551:2552   */\n      0x00\n        /* \"#utility.yul\":2540:2549   */\n      dup4\n        /* \"#utility.yul\":2536:2553   */\n      add\n        /* \"#utility.yul\":2527:2533   */\n      dup5\n        /* \"#utility.yul\":2483:2554   */\n      tag_150\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2339:2561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2663   */\n    tag_151:\n        /* \"#utility.yul\":2604:2611   */\n      0x00\n        /* \"#utility.yul\":2633:2657   */\n      tag_206\n        /* \"#utility.yul\":2651:2656   */\n      dup3\n        /* \"#utility.yul\":2633:2657   */\n      tag_138\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2622:2657   */\n      swap1\n      pop\n        /* \"#utility.yul\":2567:2663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2669:2787   */\n    tag_152:\n        /* \"#utility.yul\":2756:2780   */\n      tag_208\n        /* \"#utility.yul\":2774:2779   */\n      dup2\n        /* \"#utility.yul\":2756:2780   */\n      tag_151\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2751:2754   */\n      dup3\n        /* \"#utility.yul\":2744:2781   */\n      mstore\n        /* \"#utility.yul\":2669:2787   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2793:3015   */\n    tag_36:\n        /* \"#utility.yul\":2886:2890   */\n      0x00\n        /* \"#utility.yul\":2924:2926   */\n      0x20\n        /* \"#utility.yul\":2913:2922   */\n      dup3\n        /* \"#utility.yul\":2909:2927   */\n      add\n        /* \"#utility.yul\":2901:2927   */\n      swap1\n      pop\n        /* \"#utility.yul\":2937:3008   */\n      tag_210\n        /* \"#utility.yul\":3005:3006   */\n      0x00\n        /* \"#utility.yul\":2994:3003   */\n      dup4\n        /* \"#utility.yul\":2990:3007   */\n      add\n        /* \"#utility.yul\":2981:2987   */\n      dup5\n        /* \"#utility.yul\":2937:3008   */\n      tag_152\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2793:3015   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3143   */\n    tag_153:\n        /* \"#utility.yul\":3094:3118   */\n      tag_212\n        /* \"#utility.yul\":3112:3117   */\n      dup2\n        /* \"#utility.yul\":3094:3118   */\n      tag_151\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3087:3092   */\n      dup2\n        /* \"#utility.yul\":3084:3119   */\n      eq\n        /* \"#utility.yul\":3074:3137   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":3133:3134   */\n      0x00\n        /* \"#utility.yul\":3130:3131   */\n      dup1\n        /* \"#utility.yul\":3123:3135   */\n      revert\n        /* \"#utility.yul\":3074:3137   */\n    tag_213:\n        /* \"#utility.yul\":3021:3143   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3149:3288   */\n    tag_154:\n        /* \"#utility.yul\":3195:3200   */\n      0x00\n        /* \"#utility.yul\":3233:3239   */\n      dup2\n        /* \"#utility.yul\":3220:3240   */\n      calldataload\n        /* \"#utility.yul\":3211:3240   */\n      swap1\n      pop\n        /* \"#utility.yul\":3249:3282   */\n      tag_215\n        /* \"#utility.yul\":3276:3281   */\n      dup2\n        /* \"#utility.yul\":3249:3282   */\n      tag_153\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3149:3288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3294:3768   */\n    tag_39:\n        /* \"#utility.yul\":3362:3368   */\n      0x00\n        /* \"#utility.yul\":3370:3376   */\n      dup1\n        /* \"#utility.yul\":3419:3421   */\n      0x40\n        /* \"#utility.yul\":3407:3416   */\n      dup4\n        /* \"#utility.yul\":3398:3405   */\n      dup6\n        /* \"#utility.yul\":3394:3417   */\n      sub\n        /* \"#utility.yul\":3390:3422   */\n      slt\n        /* \"#utility.yul\":3387:3506   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":3425:3504   */\n      tag_218\n      tag_145\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":3387:3506   */\n    tag_217:\n        /* \"#utility.yul\":3545:3546   */\n      0x00\n        /* \"#utility.yul\":3570:3623   */\n      tag_219\n        /* \"#utility.yul\":3615:3622   */\n      dup6\n        /* \"#utility.yul\":3606:3612   */\n      dup3\n        /* \"#utility.yul\":3595:3604   */\n      dup7\n        /* \"#utility.yul\":3591:3613   */\n      add\n        /* \"#utility.yul\":3570:3623   */\n      tag_154\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3560:3623   */\n      swap3\n      pop\n        /* \"#utility.yul\":3516:3633   */\n      pop\n        /* \"#utility.yul\":3672:3674   */\n      0x20\n        /* \"#utility.yul\":3698:3751   */\n      tag_220\n        /* \"#utility.yul\":3743:3750   */\n      dup6\n        /* \"#utility.yul\":3734:3740   */\n      dup3\n        /* \"#utility.yul\":3723:3732   */\n      dup7\n        /* \"#utility.yul\":3719:3741   */\n      add\n        /* \"#utility.yul\":3698:3751   */\n      tag_149\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3688:3751   */\n      swap2\n      pop\n        /* \"#utility.yul\":3643:3761   */\n      pop\n        /* \"#utility.yul\":3294:3768   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3774:4106   */\n    tag_42:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x40\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_222\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup6\n        /* \"#utility.yul\":3946:4017   */\n      tag_150\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":4027:4099   */\n      tag_223\n        /* \"#utility.yul\":4095:4097   */\n      0x20\n        /* \"#utility.yul\":4084:4093   */\n      dup4\n        /* \"#utility.yul\":4080:4098   */\n      add\n        /* \"#utility.yul\":4071:4077   */\n      dup5\n        /* \"#utility.yul\":4027:4099   */\n      tag_150\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3774:4106   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4112:4441   */\n    tag_45:\n        /* \"#utility.yul\":4171:4177   */\n      0x00\n        /* \"#utility.yul\":4220:4222   */\n      0x20\n        /* \"#utility.yul\":4208:4217   */\n      dup3\n        /* \"#utility.yul\":4199:4206   */\n      dup5\n        /* \"#utility.yul\":4195:4218   */\n      sub\n        /* \"#utility.yul\":4191:4223   */\n      slt\n        /* \"#utility.yul\":4188:4307   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":4226:4305   */\n      tag_226\n      tag_145\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4188:4307   */\n    tag_225:\n        /* \"#utility.yul\":4346:4347   */\n      0x00\n        /* \"#utility.yul\":4371:4424   */\n      tag_227\n        /* \"#utility.yul\":4416:4423   */\n      dup5\n        /* \"#utility.yul\":4407:4413   */\n      dup3\n        /* \"#utility.yul\":4396:4405   */\n      dup6\n        /* \"#utility.yul\":4392:4414   */\n      add\n        /* \"#utility.yul\":4371:4424   */\n      tag_154\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4361:4424   */\n      swap2\n      pop\n        /* \"#utility.yul\":4317:4434   */\n      pop\n        /* \"#utility.yul\":4112:4441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4447:4583   */\n    tag_155:\n        /* \"#utility.yul\":4536:4542   */\n      0x00\n        /* \"#utility.yul\":4570:4575   */\n      dup2\n        /* \"#utility.yul\":4564:4576   */\n      mload\n        /* \"#utility.yul\":4554:4576   */\n      swap1\n      pop\n        /* \"#utility.yul\":4447:4583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4589:4795   */\n    tag_156:\n        /* \"#utility.yul\":4710:4721   */\n      0x00\n        /* \"#utility.yul\":4744:4750   */\n      dup3\n        /* \"#utility.yul\":4739:4742   */\n      dup3\n        /* \"#utility.yul\":4732:4751   */\n      mstore\n        /* \"#utility.yul\":4784:4788   */\n      0x20\n        /* \"#utility.yul\":4779:4782   */\n      dup3\n        /* \"#utility.yul\":4775:4789   */\n      add\n        /* \"#utility.yul\":4760:4789   */\n      swap1\n      pop\n        /* \"#utility.yul\":4589:4795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4801:4955   */\n    tag_157:\n        /* \"#utility.yul\":4890:4894   */\n      0x00\n        /* \"#utility.yul\":4913:4916   */\n      dup2\n        /* \"#utility.yul\":4905:4916   */\n      swap1\n      pop\n        /* \"#utility.yul\":4943:4947   */\n      0x20\n        /* \"#utility.yul\":4938:4941   */\n      dup3\n        /* \"#utility.yul\":4934:4948   */\n      add\n        /* \"#utility.yul\":4926:4948   */\n      swap1\n      pop\n        /* \"#utility.yul\":4801:4955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4961:5069   */\n    tag_158:\n        /* \"#utility.yul\":5038:5062   */\n      tag_232\n        /* \"#utility.yul\":5056:5061   */\n      dup2\n        /* \"#utility.yul\":5038:5062   */\n      tag_147\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5033:5036   */\n      dup3\n        /* \"#utility.yul\":5026:5063   */\n      mstore\n        /* \"#utility.yul\":4961:5069   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5143:5650   */\n    tag_159:\n        /* \"#utility.yul\":5274:5278   */\n      0x40\n        /* \"#utility.yul\":5269:5272   */\n      dup3\n        /* \"#utility.yul\":5265:5279   */\n      add\n        /* \"#utility.yul\":5369:5373   */\n      0x00\n        /* \"#utility.yul\":5362:5367   */\n      dup3\n        /* \"#utility.yul\":5358:5374   */\n      add\n        /* \"#utility.yul\":5352:5375   */\n      mload\n        /* \"#utility.yul\":5388:5451   */\n      tag_234\n        /* \"#utility.yul\":5445:5449   */\n      0x00\n        /* \"#utility.yul\":5440:5443   */\n      dup6\n        /* \"#utility.yul\":5436:5450   */\n      add\n        /* \"#utility.yul\":5422:5434   */\n      dup3\n        /* \"#utility.yul\":5388:5451   */\n      tag_158\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5289:5461   */\n      pop\n        /* \"#utility.yul\":5551:5555   */\n      0x20\n        /* \"#utility.yul\":5544:5549   */\n      dup3\n        /* \"#utility.yul\":5540:5556   */\n      add\n        /* \"#utility.yul\":5534:5557   */\n      mload\n        /* \"#utility.yul\":5570:5633   */\n      tag_235\n        /* \"#utility.yul\":5627:5631   */\n      0x20\n        /* \"#utility.yul\":5622:5625   */\n      dup6\n        /* \"#utility.yul\":5618:5632   */\n      add\n        /* \"#utility.yul\":5604:5616   */\n      dup3\n        /* \"#utility.yul\":5570:5633   */\n      tag_158\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5471:5643   */\n      pop\n        /* \"#utility.yul\":5243:5650   */\n      pop\n        /* \"#utility.yul\":5143:5650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5656:5923   */\n    tag_160:\n        /* \"#utility.yul\":5769:5779   */\n      0x00\n        /* \"#utility.yul\":5790:5880   */\n      tag_237\n        /* \"#utility.yul\":5876:5879   */\n      dup4\n        /* \"#utility.yul\":5868:5874   */\n      dup4\n        /* \"#utility.yul\":5790:5880   */\n      tag_159\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":5912:5916   */\n      0x40\n        /* \"#utility.yul\":5907:5910   */\n      dup4\n        /* \"#utility.yul\":5903:5917   */\n      add\n        /* \"#utility.yul\":5889:5917   */\n      swap1\n      pop\n        /* \"#utility.yul\":5656:5923   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5929:6064   */\n    tag_161:\n        /* \"#utility.yul\":6021:6025   */\n      0x00\n        /* \"#utility.yul\":6053:6057   */\n      0x20\n        /* \"#utility.yul\":6048:6051   */\n      dup3\n        /* \"#utility.yul\":6044:6058   */\n      add\n        /* \"#utility.yul\":6036:6058   */\n      swap1\n      pop\n        /* \"#utility.yul\":5929:6064   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6142:7050   */\n    tag_162:\n        /* \"#utility.yul\":6305:6308   */\n      0x00\n        /* \"#utility.yul\":6334:6410   */\n      tag_240\n        /* \"#utility.yul\":6404:6409   */\n      dup3\n        /* \"#utility.yul\":6334:6410   */\n      tag_155\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6426:6534   */\n      tag_241\n        /* \"#utility.yul\":6527:6533   */\n      dup2\n        /* \"#utility.yul\":6522:6525   */\n      dup6\n        /* \"#utility.yul\":6426:6534   */\n      tag_156\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6419:6534   */\n      swap4\n      pop\n        /* \"#utility.yul\":6558:6636   */\n      tag_242\n        /* \"#utility.yul\":6630:6635   */\n      dup4\n        /* \"#utility.yul\":6558:6636   */\n      tag_157\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":6659:6666   */\n      dup1\n        /* \"#utility.yul\":6690:6691   */\n      0x00\n        /* \"#utility.yul\":6675:7025   */\n    tag_243:\n        /* \"#utility.yul\":6700:6706   */\n      dup4\n        /* \"#utility.yul\":6697:6698   */\n      dup2\n        /* \"#utility.yul\":6694:6707   */\n      lt\n        /* \"#utility.yul\":6675:7025   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":6776:6782   */\n      dup2\n        /* \"#utility.yul\":6770:6783   */\n      mload\n        /* \"#utility.yul\":6803:6910   */\n      tag_246\n        /* \"#utility.yul\":6906:6909   */\n      dup9\n        /* \"#utility.yul\":6891:6904   */\n      dup3\n        /* \"#utility.yul\":6803:6910   */\n      tag_160\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6796:6910   */\n      swap8\n      pop\n        /* \"#utility.yul\":6933:7015   */\n      tag_247\n        /* \"#utility.yul\":7008:7014   */\n      dup4\n        /* \"#utility.yul\":6933:7015   */\n      tag_161\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":6923:7015   */\n      swap3\n      pop\n        /* \"#utility.yul\":6735:7025   */\n      pop\n        /* \"#utility.yul\":6722:6723   */\n      0x01\n        /* \"#utility.yul\":6719:6720   */\n      dup2\n        /* \"#utility.yul\":6715:6724   */\n      add\n        /* \"#utility.yul\":6710:6724   */\n      swap1\n      pop\n        /* \"#utility.yul\":6675:7025   */\n      jump(tag_243)\n    tag_245:\n        /* \"#utility.yul\":6679:6693   */\n      pop\n        /* \"#utility.yul\":7041:7044   */\n      dup6\n        /* \"#utility.yul\":7034:7044   */\n      swap4\n      pop\n        /* \"#utility.yul\":6310:7050   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6142:7050   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7056:7517   */\n    tag_50:\n        /* \"#utility.yul\":7243:7247   */\n      0x00\n        /* \"#utility.yul\":7281:7283   */\n      0x20\n        /* \"#utility.yul\":7270:7279   */\n      dup3\n        /* \"#utility.yul\":7266:7284   */\n      add\n        /* \"#utility.yul\":7258:7284   */\n      swap1\n      pop\n        /* \"#utility.yul\":7330:7339   */\n      dup2\n        /* \"#utility.yul\":7324:7328   */\n      dup2\n        /* \"#utility.yul\":7320:7340   */\n      sub\n        /* \"#utility.yul\":7316:7317   */\n      0x00\n        /* \"#utility.yul\":7305:7314   */\n      dup4\n        /* \"#utility.yul\":7301:7318   */\n      add\n        /* \"#utility.yul\":7294:7341   */\n      mstore\n        /* \"#utility.yul\":7358:7510   */\n      tag_249\n        /* \"#utility.yul\":7505:7509   */\n      dup2\n        /* \"#utility.yul\":7496:7502   */\n      dup5\n        /* \"#utility.yul\":7358:7510   */\n      tag_162\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7350:7510   */\n      swap1\n      pop\n        /* \"#utility.yul\":7056:7517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7523:7703   */\n    tag_63:\n        /* \"#utility.yul\":7571:7648   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7568:7569   */\n      0x00\n        /* \"#utility.yul\":7561:7649   */\n      mstore\n        /* \"#utility.yul\":7668:7672   */\n      0x32\n        /* \"#utility.yul\":7665:7666   */\n      0x04\n        /* \"#utility.yul\":7658:7673   */\n      mstore\n        /* \"#utility.yul\":7692:7696   */\n      0x24\n        /* \"#utility.yul\":7689:7690   */\n      0x00\n        /* \"#utility.yul\":7682:7697   */\n      revert\n        /* \"#utility.yul\":7709:7889   */\n    tag_163:\n        /* \"#utility.yul\":7757:7834   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7754:7755   */\n      0x00\n        /* \"#utility.yul\":7747:7835   */\n      mstore\n        /* \"#utility.yul\":7854:7858   */\n      0x11\n        /* \"#utility.yul\":7851:7852   */\n      0x04\n        /* \"#utility.yul\":7844:7859   */\n      mstore\n        /* \"#utility.yul\":7878:7882   */\n      0x24\n        /* \"#utility.yul\":7875:7876   */\n      0x00\n        /* \"#utility.yul\":7868:7883   */\n      revert\n        /* \"#utility.yul\":7895:8086   */\n    tag_71:\n        /* \"#utility.yul\":7935:7938   */\n      0x00\n        /* \"#utility.yul\":7954:7974   */\n      tag_253\n        /* \"#utility.yul\":7972:7973   */\n      dup3\n        /* \"#utility.yul\":7954:7974   */\n      tag_147\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":7949:7974   */\n      swap2\n      pop\n        /* \"#utility.yul\":7988:8008   */\n      tag_254\n        /* \"#utility.yul\":8006:8007   */\n      dup4\n        /* \"#utility.yul\":7988:8008   */\n      tag_147\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":7983:8008   */\n      swap3\n      pop\n        /* \"#utility.yul\":8031:8032   */\n      dup3\n        /* \"#utility.yul\":8028:8029   */\n      dup3\n        /* \"#utility.yul\":8024:8033   */\n      add\n        /* \"#utility.yul\":8017:8033   */\n      swap1\n      pop\n        /* \"#utility.yul\":8052:8055   */\n      dup1\n        /* \"#utility.yul\":8049:8050   */\n      dup3\n        /* \"#utility.yul\":8046:8056   */\n      gt\n        /* \"#utility.yul\":8043:8079   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":8059:8077   */\n      tag_256\n      tag_163\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8043:8079   */\n    tag_255:\n        /* \"#utility.yul\":7895:8086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8092:8424   */\n    tag_76:\n        /* \"#utility.yul\":8213:8217   */\n      0x00\n        /* \"#utility.yul\":8251:8253   */\n      0x40\n        /* \"#utility.yul\":8240:8249   */\n      dup3\n        /* \"#utility.yul\":8236:8254   */\n      add\n        /* \"#utility.yul\":8228:8254   */\n      swap1\n      pop\n        /* \"#utility.yul\":8264:8335   */\n      tag_258\n        /* \"#utility.yul\":8332:8333   */\n      0x00\n        /* \"#utility.yul\":8321:8330   */\n      dup4\n        /* \"#utility.yul\":8317:8334   */\n      add\n        /* \"#utility.yul\":8308:8314   */\n      dup6\n        /* \"#utility.yul\":8264:8335   */\n      tag_152\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":8345:8417   */\n      tag_259\n        /* \"#utility.yul\":8413:8415   */\n      0x20\n        /* \"#utility.yul\":8402:8411   */\n      dup4\n        /* \"#utility.yul\":8398:8416   */\n      add\n        /* \"#utility.yul\":8389:8395   */\n      dup5\n        /* \"#utility.yul\":8345:8417   */\n      tag_150\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8092:8424   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8430:8520   */\n    tag_164:\n        /* \"#utility.yul\":8464:8471   */\n      0x00\n        /* \"#utility.yul\":8507:8512   */\n      dup2\n        /* \"#utility.yul\":8500:8513   */\n      iszero\n        /* \"#utility.yul\":8493:8514   */\n      iszero\n        /* \"#utility.yul\":8482:8514   */\n      swap1\n      pop\n        /* \"#utility.yul\":8430:8520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8526:8642   */\n    tag_165:\n        /* \"#utility.yul\":8596:8617   */\n      tag_262\n        /* \"#utility.yul\":8611:8616   */\n      dup2\n        /* \"#utility.yul\":8596:8617   */\n      tag_164\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":8589:8594   */\n      dup2\n        /* \"#utility.yul\":8586:8618   */\n      eq\n        /* \"#utility.yul\":8576:8636   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":8632:8633   */\n      0x00\n        /* \"#utility.yul\":8629:8630   */\n      dup1\n        /* \"#utility.yul\":8622:8634   */\n      revert\n        /* \"#utility.yul\":8576:8636   */\n    tag_263:\n        /* \"#utility.yul\":8526:8642   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8648:8785   */\n    tag_166:\n        /* \"#utility.yul\":8702:8707   */\n      0x00\n        /* \"#utility.yul\":8733:8739   */\n      dup2\n        /* \"#utility.yul\":8727:8740   */\n      mload\n        /* \"#utility.yul\":8718:8740   */\n      swap1\n      pop\n        /* \"#utility.yul\":8749:8779   */\n      tag_265\n        /* \"#utility.yul\":8773:8778   */\n      dup2\n        /* \"#utility.yul\":8749:8779   */\n      tag_165\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":8648:8785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8791:9136   */\n    tag_80:\n        /* \"#utility.yul\":8858:8864   */\n      0x00\n        /* \"#utility.yul\":8907:8909   */\n      0x20\n        /* \"#utility.yul\":8895:8904   */\n      dup3\n        /* \"#utility.yul\":8886:8893   */\n      dup5\n        /* \"#utility.yul\":8882:8905   */\n      sub\n        /* \"#utility.yul\":8878:8910   */\n      slt\n        /* \"#utility.yul\":8875:8994   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":8913:8992   */\n      tag_268\n      tag_145\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":8875:8994   */\n    tag_267:\n        /* \"#utility.yul\":9033:9034   */\n      0x00\n        /* \"#utility.yul\":9058:9119   */\n      tag_269\n        /* \"#utility.yul\":9111:9118   */\n      dup5\n        /* \"#utility.yul\":9102:9108   */\n      dup3\n        /* \"#utility.yul\":9091:9100   */\n      dup6\n        /* \"#utility.yul\":9087:9109   */\n      add\n        /* \"#utility.yul\":9058:9119   */\n      tag_166\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9048:9119   */\n      swap2\n      pop\n        /* \"#utility.yul\":9004:9129   */\n      pop\n        /* \"#utility.yul\":8791:9136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9142:9311   */\n    tag_167:\n        /* \"#utility.yul\":9226:9237   */\n      0x00\n        /* \"#utility.yul\":9260:9266   */\n      dup3\n        /* \"#utility.yul\":9255:9258   */\n      dup3\n        /* \"#utility.yul\":9248:9267   */\n      mstore\n        /* \"#utility.yul\":9300:9304   */\n      0x20\n        /* \"#utility.yul\":9295:9298   */\n      dup3\n        /* \"#utility.yul\":9291:9305   */\n      add\n        /* \"#utility.yul\":9276:9305   */\n      swap1\n      pop\n        /* \"#utility.yul\":9142:9311   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9317:9482   */\n    tag_168:\n        /* \"#utility.yul\":9457:9474   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":9453:9454   */\n      0x00\n        /* \"#utility.yul\":9445:9451   */\n      dup3\n        /* \"#utility.yul\":9441:9455   */\n      add\n        /* \"#utility.yul\":9434:9475   */\n      mstore\n        /* \"#utility.yul\":9317:9482   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9488:9854   */\n    tag_169:\n        /* \"#utility.yul\":9630:9633   */\n      0x00\n        /* \"#utility.yul\":9651:9718   */\n      tag_273\n        /* \"#utility.yul\":9715:9717   */\n      0x0f\n        /* \"#utility.yul\":9710:9713   */\n      dup4\n        /* \"#utility.yul\":9651:9718   */\n      tag_167\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9644:9718   */\n      swap2\n      pop\n        /* \"#utility.yul\":9727:9820   */\n      tag_274\n        /* \"#utility.yul\":9816:9819   */\n      dup3\n        /* \"#utility.yul\":9727:9820   */\n      tag_168\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":9845:9847   */\n      0x20\n        /* \"#utility.yul\":9840:9843   */\n      dup3\n        /* \"#utility.yul\":9836:9848   */\n      add\n        /* \"#utility.yul\":9829:9848   */\n      swap1\n      pop\n        /* \"#utility.yul\":9488:9854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9860:10279   */\n    tag_83:\n        /* \"#utility.yul\":10026:10030   */\n      0x00\n        /* \"#utility.yul\":10064:10066   */\n      0x20\n        /* \"#utility.yul\":10053:10062   */\n      dup3\n        /* \"#utility.yul\":10049:10067   */\n      add\n        /* \"#utility.yul\":10041:10067   */\n      swap1\n      pop\n        /* \"#utility.yul\":10113:10122   */\n      dup2\n        /* \"#utility.yul\":10107:10111   */\n      dup2\n        /* \"#utility.yul\":10103:10123   */\n      sub\n        /* \"#utility.yul\":10099:10100   */\n      0x00\n        /* \"#utility.yul\":10088:10097   */\n      dup4\n        /* \"#utility.yul\":10084:10101   */\n      add\n        /* \"#utility.yul\":10077:10124   */\n      mstore\n        /* \"#utility.yul\":10141:10272   */\n      tag_276\n        /* \"#utility.yul\":10267:10271   */\n      dup2\n        /* \"#utility.yul\":10141:10272   */\n      tag_169\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10133:10272   */\n      swap1\n      pop\n        /* \"#utility.yul\":9860:10279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10285:10479   */\n    tag_85:\n        /* \"#utility.yul\":10325:10329   */\n      0x00\n        /* \"#utility.yul\":10345:10365   */\n      tag_278\n        /* \"#utility.yul\":10363:10364   */\n      dup3\n        /* \"#utility.yul\":10345:10365   */\n      tag_147\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10340:10365   */\n      swap2\n      pop\n        /* \"#utility.yul\":10379:10399   */\n      tag_279\n        /* \"#utility.yul\":10397:10398   */\n      dup4\n        /* \"#utility.yul\":10379:10399   */\n      tag_147\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":10374:10399   */\n      swap3\n      pop\n        /* \"#utility.yul\":10423:10424   */\n      dup3\n        /* \"#utility.yul\":10420:10421   */\n      dup3\n        /* \"#utility.yul\":10416:10425   */\n      sub\n        /* \"#utility.yul\":10408:10425   */\n      swap1\n      pop\n        /* \"#utility.yul\":10447:10448   */\n      dup2\n        /* \"#utility.yul\":10441:10445   */\n      dup2\n        /* \"#utility.yul\":10438:10449   */\n      gt\n        /* \"#utility.yul\":10435:10472   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":10452:10470   */\n      tag_281\n      tag_163\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10435:10472   */\n    tag_280:\n        /* \"#utility.yul\":10285:10479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10485:10927   */\n    tag_101:\n        /* \"#utility.yul\":10634:10638   */\n      0x00\n        /* \"#utility.yul\":10672:10674   */\n      0x60\n        /* \"#utility.yul\":10661:10670   */\n      dup3\n        /* \"#utility.yul\":10657:10675   */\n      add\n        /* \"#utility.yul\":10649:10675   */\n      swap1\n      pop\n        /* \"#utility.yul\":10685:10756   */\n      tag_283\n        /* \"#utility.yul\":10753:10754   */\n      0x00\n        /* \"#utility.yul\":10742:10751   */\n      dup4\n        /* \"#utility.yul\":10738:10755   */\n      add\n        /* \"#utility.yul\":10729:10735   */\n      dup7\n        /* \"#utility.yul\":10685:10756   */\n      tag_152\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":10766:10838   */\n      tag_284\n        /* \"#utility.yul\":10834:10836   */\n      0x20\n        /* \"#utility.yul\":10823:10832   */\n      dup4\n        /* \"#utility.yul\":10819:10837   */\n      add\n        /* \"#utility.yul\":10810:10816   */\n      dup6\n        /* \"#utility.yul\":10766:10838   */\n      tag_152\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":10848:10920   */\n      tag_285\n        /* \"#utility.yul\":10916:10918   */\n      0x40\n        /* \"#utility.yul\":10905:10914   */\n      dup4\n        /* \"#utility.yul\":10901:10919   */\n      add\n        /* \"#utility.yul\":10892:10898   */\n      dup5\n        /* \"#utility.yul\":10848:10920   */\n      tag_150\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":10485:10927   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10933:11114   */\n    tag_170:\n        /* \"#utility.yul\":11073:11106   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":11069:11070   */\n      0x00\n        /* \"#utility.yul\":11061:11067   */\n      dup3\n        /* \"#utility.yul\":11057:11071   */\n      add\n        /* \"#utility.yul\":11050:11107   */\n      mstore\n        /* \"#utility.yul\":10933:11114   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11120:11486   */\n    tag_171:\n        /* \"#utility.yul\":11262:11265   */\n      0x00\n        /* \"#utility.yul\":11283:11350   */\n      tag_288\n        /* \"#utility.yul\":11347:11349   */\n      0x1f\n        /* \"#utility.yul\":11342:11345   */\n      dup4\n        /* \"#utility.yul\":11283:11350   */\n      tag_167\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":11276:11350   */\n      swap2\n      pop\n        /* \"#utility.yul\":11359:11452   */\n      tag_289\n        /* \"#utility.yul\":11448:11451   */\n      dup3\n        /* \"#utility.yul\":11359:11452   */\n      tag_170\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":11477:11479   */\n      0x20\n        /* \"#utility.yul\":11472:11475   */\n      dup3\n        /* \"#utility.yul\":11468:11480   */\n      add\n        /* \"#utility.yul\":11461:11480   */\n      swap1\n      pop\n        /* \"#utility.yul\":11120:11486   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11492:11911   */\n    tag_127:\n        /* \"#utility.yul\":11658:11662   */\n      0x00\n        /* \"#utility.yul\":11696:11698   */\n      0x20\n        /* \"#utility.yul\":11685:11694   */\n      dup3\n        /* \"#utility.yul\":11681:11699   */\n      add\n        /* \"#utility.yul\":11673:11699   */\n      swap1\n      pop\n        /* \"#utility.yul\":11745:11754   */\n      dup2\n        /* \"#utility.yul\":11739:11743   */\n      dup2\n        /* \"#utility.yul\":11735:11755   */\n      sub\n        /* \"#utility.yul\":11731:11732   */\n      0x00\n        /* \"#utility.yul\":11720:11729   */\n      dup4\n        /* \"#utility.yul\":11716:11733   */\n      add\n        /* \"#utility.yul\":11709:11756   */\n      mstore\n        /* \"#utility.yul\":11773:11904   */\n      tag_291\n        /* \"#utility.yul\":11899:11903   */\n      dup2\n        /* \"#utility.yul\":11773:11904   */\n      tag_171\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":11765:11904   */\n      swap1\n      pop\n        /* \"#utility.yul\":11492:11911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b80ec40c30da7bd963bfe08efaa2ef11a5461c140143fb583d09156cc53f735a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 255,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$290_fromMemory": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$290_fromMemory": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$290": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$290": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1751:5",
										"nodeType": "YulBlock",
										"src": "0:1751:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "627:51:5",
													"nodeType": "YulBlock",
													"src": "627:51:5",
													"statements": [
														{
															"nativeSrc": "637:35:5",
															"nodeType": "YulAssignment",
															"src": "637:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:5"
																},
																"nativeSrc": "648:24:5",
																"nodeType": "YulFunctionCall",
																"src": "648:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$290",
												"nativeSrc": "568:110:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:5",
														"nodeType": "YulTypedName",
														"src": "609:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:5",
														"nodeType": "YulTypedName",
														"src": "619:7:5",
														"type": ""
													}
												],
												"src": "568:110:5"
											},
											{
												"body": {
													"nativeSrc": "741:93:5",
													"nodeType": "YulBlock",
													"src": "741:93:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:5",
																"nodeType": "YulBlock",
																"src": "812:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:5",
																					"nodeType": "YulLiteral",
																					"src": "821:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:5",
																					"nodeType": "YulLiteral",
																					"src": "824:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:5"
																			},
																			"nativeSrc": "814:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:5"
																		},
																		"nativeSrc": "814:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$290",
																					"nativeSrc": "771:31:5",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:5"
																				},
																				"nativeSrc": "771:38:5",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:5"
																		},
																		"nativeSrc": "761:49:5",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:5"
																},
																"nativeSrc": "754:57:5",
																"nodeType": "YulFunctionCall",
																"src": "754:57:5"
															},
															"nativeSrc": "751:77:5",
															"nodeType": "YulIf",
															"src": "751:77:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$290",
												"nativeSrc": "684:150:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:5",
														"nodeType": "YulTypedName",
														"src": "734:5:5",
														"type": ""
													}
												],
												"src": "684:150:5"
											},
											{
												"body": {
													"nativeSrc": "917:94:5",
													"nodeType": "YulBlock",
													"src": "917:94:5",
													"statements": [
														{
															"nativeSrc": "927:22:5",
															"nodeType": "YulAssignment",
															"src": "927:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:5"
																},
																"nativeSrc": "936:13:5",
																"nodeType": "YulFunctionCall",
																"src": "936:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$290",
																	"nativeSrc": "958:40:5",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:5"
																},
																"nativeSrc": "958:47:5",
																"nodeType": "YulFunctionCall",
																"src": "958:47:5"
															},
															"nativeSrc": "958:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$290_fromMemory",
												"nativeSrc": "840:171:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:5",
														"nodeType": "YulTypedName",
														"src": "895:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:5",
														"nodeType": "YulTypedName",
														"src": "903:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:5",
														"nodeType": "YulTypedName",
														"src": "911:5:5",
														"type": ""
													}
												],
												"src": "840:171:5"
											},
											{
												"body": {
													"nativeSrc": "1108:288:5",
													"nodeType": "YulBlock",
													"src": "1108:288:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:5",
																"nodeType": "YulBlock",
																"src": "1154:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:5"
																			},
																			"nativeSrc": "1156:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:5"
																		},
																		"nativeSrc": "1156:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:5"
																		},
																		"nativeSrc": "1125:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:5"
																},
																"nativeSrc": "1121:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:5"
															},
															"nativeSrc": "1118:119:5",
															"nodeType": "YulIf",
															"src": "1118:119:5"
														},
														{
															"nativeSrc": "1247:142:5",
															"nodeType": "YulBlock",
															"src": "1247:142:5",
															"statements": [
																{
																	"nativeSrc": "1262:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:88:5",
																	"nodeType": "YulAssignment",
																	"src": "1291:88:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1351:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1351:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1362:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1362:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1347:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1347:3:5"
																				},
																				"nativeSrc": "1347:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1347:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$290_fromMemory",
																			"nativeSrc": "1301:45:5",
																			"nodeType": "YulIdentifier",
																			"src": "1301:45:5"
																		},
																		"nativeSrc": "1301:78:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:78:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$290_fromMemory",
												"nativeSrc": "1017:379:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:5",
														"nodeType": "YulTypedName",
														"src": "1078:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:5",
														"nodeType": "YulTypedName",
														"src": "1089:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:5",
														"nodeType": "YulTypedName",
														"src": "1101:6:5",
														"type": ""
													}
												],
												"src": "1017:379:5"
											},
											{
												"body": {
													"nativeSrc": "1467:53:5",
													"nodeType": "YulBlock",
													"src": "1467:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1484:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1484:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1507:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1507:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1489:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1489:17:5"
																		},
																		"nativeSrc": "1489:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1489:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1477:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:5"
																},
																"nativeSrc": "1477:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1477:37:5"
															},
															"nativeSrc": "1477:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1477:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1402:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1455:5:5",
														"nodeType": "YulTypedName",
														"src": "1455:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1462:3:5",
														"nodeType": "YulTypedName",
														"src": "1462:3:5",
														"type": ""
													}
												],
												"src": "1402:118:5"
											},
											{
												"body": {
													"nativeSrc": "1624:124:5",
													"nodeType": "YulBlock",
													"src": "1624:124:5",
													"statements": [
														{
															"nativeSrc": "1634:26:5",
															"nodeType": "YulAssignment",
															"src": "1634:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1646:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1646:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1657:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1642:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1642:3:5"
																},
																"nativeSrc": "1642:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1642:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1634:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1634:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1714:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1714:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1727:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1727:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1738:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1738:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1723:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1723:3:5"
																		},
																		"nativeSrc": "1723:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1723:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1670:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1670:43:5"
																},
																"nativeSrc": "1670:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1670:71:5"
															},
															"nativeSrc": "1670:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1670:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1526:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1596:9:5",
														"nodeType": "YulTypedName",
														"src": "1596:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1608:6:5",
														"nodeType": "YulTypedName",
														"src": "1608:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1619:4:5",
														"nodeType": "YulTypedName",
														"src": "1619:4:5",
														"type": ""
													}
												],
												"src": "1526:222:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$290(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$290(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$290(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$290_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$290(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$290_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$290_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161128c38038061128c83398181016040528101906100319190610231565b3360015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a9575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a0919061026b565b60405180910390fd5b6100b8816100ff60201b60201c565b508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610284565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101ef826101c6565b9050919050565b5f610200826101e5565b9050919050565b610210816101f6565b811461021a575f80fd5b50565b5f8151905061022b81610207565b92915050565b5f60208284031215610246576102456101c2565b5b5f6102538482850161021d565b91505092915050565b610265816101e5565b82525050565b5f60208201905061027e5f83018461025c565b92915050565b610ffb806102915f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c8063817b1cd211610064578063817b1cd21461010c5780638da5cb5b1461012a5780639081630214610148578063f2fde38b14610179578063fc0e3d90146101955761009c565b80633ccfd60b146100a0578063715018a6146100aa57806372f702f3146100b45780637b0472f0146100d25780637bc74225146100ee575b5f80fd5b6100a86101b3565b005b6100b26104cc565b005b6100bc6104df565b6040516100c99190610abc565b60405180910390f35b6100ec60048036038101906100e79190610b0c565b610504565b005b6100f66106fc565b6040516101039190610b59565b60405180910390f35b610114610705565b6040516101219190610b59565b60405180910390f35b61013261070b565b60405161013f9190610b92565b60405180910390f35b610162600480360381019061015d9190610bd5565b610733565b604051610170929190610c13565b60405180910390f35b610193600480360381019061018e9190610c3a565b61076d565b005b61019d6107f1565b6040516101aa9190610d49565b60405180910390f35b6101bb61089b565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b8282101561025b578382905f5260205f2090600202016040518060400160405290815f820154815260200160018201548152505081526020019060010190610218565b5050505090505f805b8251811015610379575f83828151811061028157610280610d69565b5b6020026020010151602001511180156102b657505f8382815181106102a9576102a8610d69565b5b60200260200101515f0151115b1561036c578281815181106102ce576102cd610d69565b5b60200260200101515f0151826102e49190610dc3565b915060405180604001604052805f81526020015f81525060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061034a57610349610d69565b5b905f5260205f2090600202015f820151815f0155602082015181600101559050505b8080600101915050610264565b505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016103d7929190610df6565b6020604051808303815f875af11580156103f3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104179190610e52565b905080610459576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045090610ed7565b60405180910390fd5b8160035f82825461046a9190610ef5565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5836040516104b79190610b59565b60405180910390a25050506104ca6108e8565b565b6104d46108f1565b6104dd5f610978565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61050c61089b565b5f6040518060400160405280848152602001834261052a9190610dc3565b815250905060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f01556020820151816001015550505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161060693929190610f28565b6020604051808303815f875af1158015610622573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106469190610e52565b905080610688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067f90610ed7565b60405180910390fd5b8360035f8282546106999190610dc3565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d856040516106e69190610b59565b60405180910390a250506106f86108e8565b5050565b5f600354905090565b60035481565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6004602052815f5260405f20818154811061074c575f80fd5b905f5260205f2090600202015f9150915050805f0154908060010154905082565b6107756108f1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107e5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107dc9190610b92565b60405180910390fd5b6107ee81610978565b50565b606060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015610892578382905f5260205f2090600202016040518060400160405290815f82015481526020016001820154815250508152602001906001019061084f565b50505050905090565b60025f54036108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d690610fa7565b60405180910390fd5b60025f81905550565b60015f81905550565b6108f9610a3b565b73ffffffffffffffffffffffffffffffffffffffff1661091761070b565b73ffffffffffffffffffffffffffffffffffffffff16146109765761093a610a3b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161096d9190610b92565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610a84610a7f610a7a84610a42565b610a61565b610a42565b9050919050565b5f610a9582610a6a565b9050919050565b5f610aa682610a8b565b9050919050565b610ab681610a9c565b82525050565b5f602082019050610acf5f830184610aad565b92915050565b5f80fd5b5f819050919050565b610aeb81610ad9565b8114610af5575f80fd5b50565b5f81359050610b0681610ae2565b92915050565b5f8060408385031215610b2257610b21610ad5565b5b5f610b2f85828601610af8565b9250506020610b4085828601610af8565b9150509250929050565b610b5381610ad9565b82525050565b5f602082019050610b6c5f830184610b4a565b92915050565b5f610b7c82610a42565b9050919050565b610b8c81610b72565b82525050565b5f602082019050610ba55f830184610b83565b92915050565b610bb481610b72565b8114610bbe575f80fd5b50565b5f81359050610bcf81610bab565b92915050565b5f8060408385031215610beb57610bea610ad5565b5b5f610bf885828601610bc1565b9250506020610c0985828601610af8565b9150509250929050565b5f604082019050610c265f830185610b4a565b610c336020830184610b4a565b9392505050565b5f60208284031215610c4f57610c4e610ad5565b5b5f610c5c84828501610bc1565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610c9781610ad9565b82525050565b604082015f820151610cb15f850182610c8e565b506020820151610cc46020850182610c8e565b50505050565b5f610cd58383610c9d565b60408301905092915050565b5f602082019050919050565b5f610cf782610c65565b610d018185610c6f565b9350610d0c83610c7f565b805f5b83811015610d3c578151610d238882610cca565b9750610d2e83610ce1565b925050600181019050610d0f565b5085935050505092915050565b5f6020820190508181035f830152610d618184610ced565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610dcd82610ad9565b9150610dd883610ad9565b9250828201905080821115610df057610def610d96565b5b92915050565b5f604082019050610e095f830185610b83565b610e166020830184610b4a565b9392505050565b5f8115159050919050565b610e3181610e1d565b8114610e3b575f80fd5b50565b5f81519050610e4c81610e28565b92915050565b5f60208284031215610e6757610e66610ad5565b5b5f610e7484828501610e3e565b91505092915050565b5f82825260208201905092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f610ec1600f83610e7d565b9150610ecc82610e8d565b602082019050919050565b5f6020820190508181035f830152610eee81610eb5565b9050919050565b5f610eff82610ad9565b9150610f0a83610ad9565b9250828203905081811115610f2257610f21610d96565b5b92915050565b5f606082019050610f3b5f830186610b83565b610f486020830185610b83565b610f556040830184610b4a565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610f91601f83610e7d565b9150610f9c82610f5d565b602082019050919050565b5f6020820190508181035f830152610fbe81610f85565b905091905056fea2646970667358221220b80ec40c30da7bd963bfe08efaa2ef11a5461c140143fb583d09156cc53f735a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x128C CODESIZE SUB DUP1 PUSH2 0x128C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x231 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x26B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0xFF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x284 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF DUP3 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x200 DUP3 PUSH2 0x1E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x210 DUP2 PUSH2 0x1F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x22B DUP2 PUSH2 0x207 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x246 JUMPI PUSH2 0x245 PUSH2 0x1C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x253 DUP5 DUP3 DUP6 ADD PUSH2 0x21D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x265 DUP2 PUSH2 0x1E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27E PUSH0 DUP4 ADD DUP5 PUSH2 0x25C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFB DUP1 PUSH2 0x291 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x90816302 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xFC0E3D90 EQ PUSH2 0x195 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x7BC74225 EQ PUSH2 0xEE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x1B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2 PUSH2 0x4CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBC PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF6 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP3 SWAP2 SWAP1 PUSH2 0xC13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xC3A JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19D PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH2 0x89B JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x25B JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x218 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x379 JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x281 JUMPI PUSH2 0x280 PUSH2 0xD69 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD GT DUP1 ISZERO PUSH2 0x2B6 JUMPI POP PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A9 JUMPI PUSH2 0x2A8 PUSH2 0xD69 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x36C JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2CE JUMPI PUSH2 0x2CD PUSH2 0xD69 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 ADD MLOAD DUP3 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x34A JUMPI PUSH2 0x349 PUSH2 0xD69 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x264 JUMP JUMPDEST POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP3 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x459 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x450 SWAP1 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0xEF5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x4CA PUSH2 0x8E8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4D4 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x4DD PUSH0 PUSH2 0x978 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x50C PUSH2 0x89B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 TIMESTAMP PUSH2 0x52A SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x606 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x622 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67F SWAP1 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x699 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP6 PUSH1 0x40 MLOAD PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x6F8 PUSH2 0x8E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x74C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x775 PUSH2 0x8F1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DC SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7EE DUP2 PUSH2 0x978 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x892 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x84F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP1 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x8F9 PUSH2 0xA3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x917 PUSH2 0x70B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x976 JUMPI PUSH2 0x93A PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96D SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA84 PUSH2 0xA7F PUSH2 0xA7A DUP5 PUSH2 0xA42 JUMP JUMPDEST PUSH2 0xA61 JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA95 DUP3 PUSH2 0xA6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA6 DUP3 PUSH2 0xA8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB6 DUP2 PUSH2 0xA9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xACF PUSH0 DUP4 ADD DUP5 PUSH2 0xAAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEB DUP2 PUSH2 0xAD9 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB06 DUP2 PUSH2 0xAE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB22 JUMPI PUSH2 0xB21 PUSH2 0xAD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB2F DUP6 DUP3 DUP7 ADD PUSH2 0xAF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB40 DUP6 DUP3 DUP7 ADD PUSH2 0xAF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB53 DUP2 PUSH2 0xAD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB6C PUSH0 DUP4 ADD DUP5 PUSH2 0xB4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB7C DUP3 PUSH2 0xA42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8C DUP2 PUSH2 0xB72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBA5 PUSH0 DUP4 ADD DUP5 PUSH2 0xB83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBB4 DUP2 PUSH2 0xB72 JUMP JUMPDEST DUP2 EQ PUSH2 0xBBE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCF DUP2 PUSH2 0xBAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEA PUSH2 0xAD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBF8 DUP6 DUP3 DUP7 ADD PUSH2 0xBC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC09 DUP6 DUP3 DUP7 ADD PUSH2 0xAF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC26 PUSH0 DUP4 ADD DUP6 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0xC33 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB4A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4F JUMPI PUSH2 0xC4E PUSH2 0xAD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC5C DUP5 DUP3 DUP6 ADD PUSH2 0xBC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC97 DUP2 PUSH2 0xAD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xCB1 PUSH0 DUP6 ADD DUP3 PUSH2 0xC8E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xCC4 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xC8E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCD5 DUP4 DUP4 PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCF7 DUP3 PUSH2 0xC65 JUMP JUMPDEST PUSH2 0xD01 DUP2 DUP6 PUSH2 0xC6F JUMP JUMPDEST SWAP4 POP PUSH2 0xD0C DUP4 PUSH2 0xC7F JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD3C JUMPI DUP2 MLOAD PUSH2 0xD23 DUP9 DUP3 PUSH2 0xCCA JUMP JUMPDEST SWAP8 POP PUSH2 0xD2E DUP4 PUSH2 0xCE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xD0F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD61 DUP2 DUP5 PUSH2 0xCED JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDCD DUP3 PUSH2 0xAD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xDD8 DUP4 PUSH2 0xAD9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDF0 JUMPI PUSH2 0xDEF PUSH2 0xD96 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE09 PUSH0 DUP4 ADD DUP6 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0xE16 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB4A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE31 DUP2 PUSH2 0xE1D JUMP JUMPDEST DUP2 EQ PUSH2 0xE3B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE4C DUP2 PUSH2 0xE28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE67 JUMPI PUSH2 0xE66 PUSH2 0xAD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE74 DUP5 DUP3 DUP6 ADD PUSH2 0xE3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEC1 PUSH1 0xF DUP4 PUSH2 0xE7D JUMP JUMPDEST SWAP2 POP PUSH2 0xECC DUP3 PUSH2 0xE8D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEEE DUP2 PUSH2 0xEB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEFF DUP3 PUSH2 0xAD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0A DUP4 PUSH2 0xAD9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF22 JUMPI PUSH2 0xF21 PUSH2 0xD96 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF3B PUSH0 DUP4 ADD DUP7 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0xF48 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0xF55 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB4A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF91 PUSH1 0x1F DUP4 PUSH2 0xE7D JUMP JUMPDEST SWAP2 POP PUSH2 0xF9C DUP3 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFBE DUP2 PUSH2 0xF85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xE 0xC4 0xC ADDRESS 0xDA PUSH28 0xD963BFE08EFAA2EF11A5461C140143FB583D09156CC53F735A64736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "232:2277:4:-:0;;;638:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;680:10;1716:1:1;1821:7;:22;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;717:13:4::1;702:12;;:28;;;;;;;;;;;;;;;;;;638:99:::0;232:2277;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:379::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:78;1371:7;1362:6;1351:9;1347:22;1301:78;:::i;:::-;1291:88;;1247:142;1017:379;;;;:::o;1402:118::-;1489:24;1507:5;1489:24;:::i;:::-;1484:3;1477:37;1402:118;;:::o;1526:222::-;1619:4;1657:2;1646:9;1642:18;1634:26;;1670:71;1738:1;1727:9;1723:17;1714:6;1670:71;:::i;:::-;1526:222;;;;:::o;232:2277:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2289,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_302": {
									"entryPoint": 2619,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 2280,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 2203,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2424,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getStake_442": {
									"entryPoint": 2033,
									"id": 442,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalStake_450": {
									"entryPoint": 1788,
									"id": 450,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1803,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1228,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_429": {
									"entryPoint": 1284,
									"id": 429,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakingToken_332": {
									"entryPoint": 1247,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_334": {
									"entryPoint": 1797,
									"id": 334,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1901,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userStaking_340": {
									"entryPoint": 1843,
									"id": 340,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_541": {
									"entryPoint": 435,
									"id": 541,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr": {
									"entryPoint": 3274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack": {
									"entryPoint": 2733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr": {
									"entryPoint": 3229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3880,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3574,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed": {
									"entryPoint": 2748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3091,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$290_to_t_address": {
									"entryPoint": 2716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3478,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2773,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 3725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 3933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11914:5",
										"nodeType": "YulBlock",
										"src": "0:11914:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:5",
													"nodeType": "YulBlock",
													"src": "52:81:5",
													"statements": [
														{
															"nativeSrc": "62:65:5",
															"nodeType": "YulAssignment",
															"src": "62:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:5",
																		"nodeType": "YulLiteral",
																		"src": "84:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:5"
																},
																"nativeSrc": "73:54:5",
																"nodeType": "YulFunctionCall",
																"src": "73:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:5",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:5",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:126:5"
											},
											{
												"body": {
													"nativeSrc": "171:28:5",
													"nodeType": "YulBlock",
													"src": "171:28:5",
													"statements": [
														{
															"nativeSrc": "181:12:5",
															"nodeType": "YulAssignment",
															"src": "181:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:5",
																"nodeType": "YulIdentifier",
																"src": "188:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:5",
														"nodeType": "YulTypedName",
														"src": "157:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:5",
														"nodeType": "YulTypedName",
														"src": "167:3:5",
														"type": ""
													}
												],
												"src": "139:60:5"
											},
											{
												"body": {
													"nativeSrc": "265:82:5",
													"nodeType": "YulBlock",
													"src": "265:82:5",
													"statements": [
														{
															"nativeSrc": "275:66:5",
															"nodeType": "YulAssignment",
															"src": "275:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:5"
																				},
																				"nativeSrc": "315:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:5"
																		},
																		"nativeSrc": "306:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:5"
																},
																"nativeSrc": "288:53:5",
																"nodeType": "YulFunctionCall",
																"src": "288:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:5",
														"nodeType": "YulTypedName",
														"src": "245:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:5",
														"nodeType": "YulTypedName",
														"src": "255:9:5",
														"type": ""
													}
												],
												"src": "205:142:5"
											},
											{
												"body": {
													"nativeSrc": "413:66:5",
													"nodeType": "YulBlock",
													"src": "413:66:5",
													"statements": [
														{
															"nativeSrc": "423:50:5",
															"nodeType": "YulAssignment",
															"src": "423:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:5"
																},
																"nativeSrc": "436:37:5",
																"nodeType": "YulFunctionCall",
																"src": "436:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:5",
														"nodeType": "YulTypedName",
														"src": "393:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:5",
														"nodeType": "YulTypedName",
														"src": "403:9:5",
														"type": ""
													}
												],
												"src": "353:126:5"
											},
											{
												"body": {
													"nativeSrc": "559:66:5",
													"nodeType": "YulBlock",
													"src": "559:66:5",
													"statements": [
														{
															"nativeSrc": "569:50:5",
															"nodeType": "YulAssignment",
															"src": "569:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "613:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "582:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "582:30:5"
																},
																"nativeSrc": "582:37:5",
																"nodeType": "YulFunctionCall",
																"src": "582:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "569:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "569:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$290_to_t_address",
												"nativeSrc": "485:140:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "539:5:5",
														"nodeType": "YulTypedName",
														"src": "539:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "549:9:5",
														"nodeType": "YulTypedName",
														"src": "549:9:5",
														"type": ""
													}
												],
												"src": "485:140:5"
											},
											{
												"body": {
													"nativeSrc": "710:80:5",
													"nodeType": "YulBlock",
													"src": "710:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "727:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$290_to_t_address",
																			"nativeSrc": "732:44:5",
																			"nodeType": "YulIdentifier",
																			"src": "732:44:5"
																		},
																		"nativeSrc": "732:51:5",
																		"nodeType": "YulFunctionCall",
																		"src": "732:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "720:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:5"
																},
																"nativeSrc": "720:64:5",
																"nodeType": "YulFunctionCall",
																"src": "720:64:5"
															},
															"nativeSrc": "720:64:5",
															"nodeType": "YulExpressionStatement",
															"src": "720:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
												"nativeSrc": "631:159:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "698:5:5",
														"nodeType": "YulTypedName",
														"src": "698:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "705:3:5",
														"nodeType": "YulTypedName",
														"src": "705:3:5",
														"type": ""
													}
												],
												"src": "631:159:5"
											},
											{
												"body": {
													"nativeSrc": "908:138:5",
													"nodeType": "YulBlock",
													"src": "908:138:5",
													"statements": [
														{
															"nativeSrc": "918:26:5",
															"nodeType": "YulAssignment",
															"src": "918:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "930:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:5",
																		"nodeType": "YulLiteral",
																		"src": "941:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "926:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:5"
																},
																"nativeSrc": "926:18:5",
																"nodeType": "YulFunctionCall",
																"src": "926:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "918:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1012:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1025:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1036:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1021:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:5"
																		},
																		"nativeSrc": "1021:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1021:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
																	"nativeSrc": "954:57:5",
																	"nodeType": "YulIdentifier",
																	"src": "954:57:5"
																},
																"nativeSrc": "954:85:5",
																"nodeType": "YulFunctionCall",
																"src": "954:85:5"
															},
															"nativeSrc": "954:85:5",
															"nodeType": "YulExpressionStatement",
															"src": "954:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed",
												"nativeSrc": "796:250:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "880:9:5",
														"nodeType": "YulTypedName",
														"src": "880:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "892:6:5",
														"nodeType": "YulTypedName",
														"src": "892:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "903:4:5",
														"nodeType": "YulTypedName",
														"src": "903:4:5",
														"type": ""
													}
												],
												"src": "796:250:5"
											},
											{
												"body": {
													"nativeSrc": "1092:35:5",
													"nodeType": "YulBlock",
													"src": "1092:35:5",
													"statements": [
														{
															"nativeSrc": "1102:19:5",
															"nodeType": "YulAssignment",
															"src": "1102:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1118:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1118:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1112:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1112:5:5"
																},
																"nativeSrc": "1112:9:5",
																"nodeType": "YulFunctionCall",
																"src": "1112:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1102:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1052:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1085:6:5",
														"nodeType": "YulTypedName",
														"src": "1085:6:5",
														"type": ""
													}
												],
												"src": "1052:75:5"
											},
											{
												"body": {
													"nativeSrc": "1222:28:5",
													"nodeType": "YulBlock",
													"src": "1222:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1239:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1239:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1242:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1242:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1232:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1232:6:5"
																},
																"nativeSrc": "1232:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1232:12:5"
															},
															"nativeSrc": "1232:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1232:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1133:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1133:117:5"
											},
											{
												"body": {
													"nativeSrc": "1345:28:5",
													"nodeType": "YulBlock",
													"src": "1345:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1362:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1362:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1355:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1355:6:5"
																},
																"nativeSrc": "1355:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1355:12:5"
															},
															"nativeSrc": "1355:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1355:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1256:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1256:117:5"
											},
											{
												"body": {
													"nativeSrc": "1424:32:5",
													"nodeType": "YulBlock",
													"src": "1424:32:5",
													"statements": [
														{
															"nativeSrc": "1434:16:5",
															"nodeType": "YulAssignment",
															"src": "1434:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1445:5:5",
																"nodeType": "YulIdentifier",
																"src": "1445:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1434:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1434:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1379:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1406:5:5",
														"nodeType": "YulTypedName",
														"src": "1406:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1416:7:5",
														"nodeType": "YulTypedName",
														"src": "1416:7:5",
														"type": ""
													}
												],
												"src": "1379:77:5"
											},
											{
												"body": {
													"nativeSrc": "1505:79:5",
													"nodeType": "YulBlock",
													"src": "1505:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1562:16:5",
																"nodeType": "YulBlock",
																"src": "1562:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1571:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1571:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1574:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1574:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1564:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1564:6:5"
																			},
																			"nativeSrc": "1564:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1564:12:5"
																		},
																		"nativeSrc": "1564:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1564:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1528:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1528:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1553:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1553:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1535:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1535:17:5"
																				},
																				"nativeSrc": "1535:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1535:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1525:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1525:2:5"
																		},
																		"nativeSrc": "1525:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1525:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1518:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:5"
																},
																"nativeSrc": "1518:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1518:43:5"
															},
															"nativeSrc": "1515:63:5",
															"nodeType": "YulIf",
															"src": "1515:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1462:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1498:5:5",
														"nodeType": "YulTypedName",
														"src": "1498:5:5",
														"type": ""
													}
												],
												"src": "1462:122:5"
											},
											{
												"body": {
													"nativeSrc": "1642:87:5",
													"nodeType": "YulBlock",
													"src": "1642:87:5",
													"statements": [
														{
															"nativeSrc": "1652:29:5",
															"nodeType": "YulAssignment",
															"src": "1652:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1674:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1674:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1661:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1661:12:5"
																},
																"nativeSrc": "1661:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1661:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1652:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1652:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1717:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1717:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1690:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1690:26:5"
																},
																"nativeSrc": "1690:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1690:33:5"
															},
															"nativeSrc": "1690:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1690:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1590:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1620:6:5",
														"nodeType": "YulTypedName",
														"src": "1620:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1628:3:5",
														"nodeType": "YulTypedName",
														"src": "1628:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1636:5:5",
														"nodeType": "YulTypedName",
														"src": "1636:5:5",
														"type": ""
													}
												],
												"src": "1590:139:5"
											},
											{
												"body": {
													"nativeSrc": "1818:391:5",
													"nodeType": "YulBlock",
													"src": "1818:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1864:83:5",
																"nodeType": "YulBlock",
																"src": "1864:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1866:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1866:77:5"
																			},
																			"nativeSrc": "1866:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1866:79:5"
																		},
																		"nativeSrc": "1866:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1866:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1839:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1839:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1848:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1848:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1835:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:5"
																		},
																		"nativeSrc": "1835:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1835:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1860:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1860:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1831:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1831:3:5"
																},
																"nativeSrc": "1831:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1831:32:5"
															},
															"nativeSrc": "1828:119:5",
															"nodeType": "YulIf",
															"src": "1828:119:5"
														},
														{
															"nativeSrc": "1957:117:5",
															"nodeType": "YulBlock",
															"src": "1957:117:5",
															"statements": [
																{
																	"nativeSrc": "1972:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1972:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1986:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1986:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1976:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1976:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2001:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2001:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2036:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2036:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2047:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2047:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2032:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2032:3:5"
																				},
																				"nativeSrc": "2032:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2032:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2056:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2056:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2011:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2011:20:5"
																		},
																		"nativeSrc": "2011:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2011:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2001:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2001:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2084:118:5",
															"nodeType": "YulBlock",
															"src": "2084:118:5",
															"statements": [
																{
																	"nativeSrc": "2099:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2099:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2113:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2113:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2103:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2103:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2129:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2129:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2164:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2164:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2175:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2175:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2160:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2160:3:5"
																				},
																				"nativeSrc": "2160:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2160:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2184:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2184:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2139:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2139:20:5"
																		},
																		"nativeSrc": "2139:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2139:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2129:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2129:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1735:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1780:9:5",
														"nodeType": "YulTypedName",
														"src": "1780:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1791:7:5",
														"nodeType": "YulTypedName",
														"src": "1791:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1803:6:5",
														"nodeType": "YulTypedName",
														"src": "1803:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1811:6:5",
														"nodeType": "YulTypedName",
														"src": "1811:6:5",
														"type": ""
													}
												],
												"src": "1735:474:5"
											},
											{
												"body": {
													"nativeSrc": "2280:53:5",
													"nodeType": "YulBlock",
													"src": "2280:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2297:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2297:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2320:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2320:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2302:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2302:17:5"
																		},
																		"nativeSrc": "2302:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2290:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2290:6:5"
																},
																"nativeSrc": "2290:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2290:37:5"
															},
															"nativeSrc": "2290:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2290:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2215:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2268:5:5",
														"nodeType": "YulTypedName",
														"src": "2268:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2275:3:5",
														"nodeType": "YulTypedName",
														"src": "2275:3:5",
														"type": ""
													}
												],
												"src": "2215:118:5"
											},
											{
												"body": {
													"nativeSrc": "2437:124:5",
													"nodeType": "YulBlock",
													"src": "2437:124:5",
													"statements": [
														{
															"nativeSrc": "2447:26:5",
															"nodeType": "YulAssignment",
															"src": "2447:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2459:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2459:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2470:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2470:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2455:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2455:3:5"
																},
																"nativeSrc": "2455:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2455:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2447:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2447:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2527:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2527:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2540:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2540:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2551:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2551:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2536:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2536:3:5"
																		},
																		"nativeSrc": "2536:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2536:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2483:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2483:43:5"
																},
																"nativeSrc": "2483:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2483:71:5"
															},
															"nativeSrc": "2483:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2483:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2339:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2409:9:5",
														"nodeType": "YulTypedName",
														"src": "2409:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2421:6:5",
														"nodeType": "YulTypedName",
														"src": "2421:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2432:4:5",
														"nodeType": "YulTypedName",
														"src": "2432:4:5",
														"type": ""
													}
												],
												"src": "2339:222:5"
											},
											{
												"body": {
													"nativeSrc": "2612:51:5",
													"nodeType": "YulBlock",
													"src": "2612:51:5",
													"statements": [
														{
															"nativeSrc": "2622:35:5",
															"nodeType": "YulAssignment",
															"src": "2622:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2651:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2651:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2633:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2633:17:5"
																},
																"nativeSrc": "2633:24:5",
																"nodeType": "YulFunctionCall",
																"src": "2633:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2622:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2622:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2567:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2594:5:5",
														"nodeType": "YulTypedName",
														"src": "2594:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2604:7:5",
														"nodeType": "YulTypedName",
														"src": "2604:7:5",
														"type": ""
													}
												],
												"src": "2567:96:5"
											},
											{
												"body": {
													"nativeSrc": "2734:53:5",
													"nodeType": "YulBlock",
													"src": "2734:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2751:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2751:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2774:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2774:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2756:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2756:17:5"
																		},
																		"nativeSrc": "2756:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2756:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2744:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:5"
																},
																"nativeSrc": "2744:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2744:37:5"
															},
															"nativeSrc": "2744:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2744:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2669:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2722:5:5",
														"nodeType": "YulTypedName",
														"src": "2722:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2729:3:5",
														"nodeType": "YulTypedName",
														"src": "2729:3:5",
														"type": ""
													}
												],
												"src": "2669:118:5"
											},
											{
												"body": {
													"nativeSrc": "2891:124:5",
													"nodeType": "YulBlock",
													"src": "2891:124:5",
													"statements": [
														{
															"nativeSrc": "2901:26:5",
															"nodeType": "YulAssignment",
															"src": "2901:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2913:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2913:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2924:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2924:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2909:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2909:3:5"
																},
																"nativeSrc": "2909:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2909:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2901:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2901:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2981:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2981:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2994:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2994:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3005:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3005:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2990:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2990:3:5"
																		},
																		"nativeSrc": "2990:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2990:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2937:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2937:43:5"
																},
																"nativeSrc": "2937:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2937:71:5"
															},
															"nativeSrc": "2937:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2937:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2793:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2863:9:5",
														"nodeType": "YulTypedName",
														"src": "2863:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2875:6:5",
														"nodeType": "YulTypedName",
														"src": "2875:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2886:4:5",
														"nodeType": "YulTypedName",
														"src": "2886:4:5",
														"type": ""
													}
												],
												"src": "2793:222:5"
											},
											{
												"body": {
													"nativeSrc": "3064:79:5",
													"nodeType": "YulBlock",
													"src": "3064:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3121:16:5",
																"nodeType": "YulBlock",
																"src": "3121:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3130:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3130:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3133:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3133:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3123:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3123:6:5"
																			},
																			"nativeSrc": "3123:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3123:12:5"
																		},
																		"nativeSrc": "3123:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3123:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3087:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3087:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3112:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3112:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3094:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "3094:17:5"
																				},
																				"nativeSrc": "3094:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3094:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3084:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "3084:2:5"
																		},
																		"nativeSrc": "3084:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3084:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3077:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:5"
																},
																"nativeSrc": "3077:43:5",
																"nodeType": "YulFunctionCall",
																"src": "3077:43:5"
															},
															"nativeSrc": "3074:63:5",
															"nodeType": "YulIf",
															"src": "3074:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3021:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3057:5:5",
														"nodeType": "YulTypedName",
														"src": "3057:5:5",
														"type": ""
													}
												],
												"src": "3021:122:5"
											},
											{
												"body": {
													"nativeSrc": "3201:87:5",
													"nodeType": "YulBlock",
													"src": "3201:87:5",
													"statements": [
														{
															"nativeSrc": "3211:29:5",
															"nodeType": "YulAssignment",
															"src": "3211:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3233:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3233:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3220:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3220:12:5"
																},
																"nativeSrc": "3220:20:5",
																"nodeType": "YulFunctionCall",
																"src": "3220:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3211:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3211:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3276:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3276:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3249:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "3249:26:5"
																},
																"nativeSrc": "3249:33:5",
																"nodeType": "YulFunctionCall",
																"src": "3249:33:5"
															},
															"nativeSrc": "3249:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "3249:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3149:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3179:6:5",
														"nodeType": "YulTypedName",
														"src": "3179:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3187:3:5",
														"nodeType": "YulTypedName",
														"src": "3187:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3195:5:5",
														"nodeType": "YulTypedName",
														"src": "3195:5:5",
														"type": ""
													}
												],
												"src": "3149:139:5"
											},
											{
												"body": {
													"nativeSrc": "3377:391:5",
													"nodeType": "YulBlock",
													"src": "3377:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3423:83:5",
																"nodeType": "YulBlock",
																"src": "3423:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3425:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3425:77:5"
																			},
																			"nativeSrc": "3425:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3425:79:5"
																		},
																		"nativeSrc": "3425:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3425:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3398:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3398:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3407:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3407:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3394:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3394:3:5"
																		},
																		"nativeSrc": "3394:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3394:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3419:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3419:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3390:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3390:3:5"
																},
																"nativeSrc": "3390:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3390:32:5"
															},
															"nativeSrc": "3387:119:5",
															"nodeType": "YulIf",
															"src": "3387:119:5"
														},
														{
															"nativeSrc": "3516:117:5",
															"nodeType": "YulBlock",
															"src": "3516:117:5",
															"statements": [
																{
																	"nativeSrc": "3531:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3531:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3545:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3545:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3535:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3535:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3560:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3560:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3595:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3595:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3606:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3606:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3591:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3591:3:5"
																				},
																				"nativeSrc": "3591:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3591:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3615:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3615:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3570:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3570:20:5"
																		},
																		"nativeSrc": "3570:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3570:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3560:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3560:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3643:118:5",
															"nodeType": "YulBlock",
															"src": "3643:118:5",
															"statements": [
																{
																	"nativeSrc": "3658:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3658:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3672:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3672:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3662:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3662:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3688:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3688:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3723:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3723:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3734:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3734:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3719:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3719:3:5"
																				},
																				"nativeSrc": "3719:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3719:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3743:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3743:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3698:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3698:20:5"
																		},
																		"nativeSrc": "3698:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3698:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3688:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3688:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3294:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3339:9:5",
														"nodeType": "YulTypedName",
														"src": "3339:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3350:7:5",
														"nodeType": "YulTypedName",
														"src": "3350:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3362:6:5",
														"nodeType": "YulTypedName",
														"src": "3362:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3370:6:5",
														"nodeType": "YulTypedName",
														"src": "3370:6:5",
														"type": ""
													}
												],
												"src": "3294:474:5"
											},
											{
												"body": {
													"nativeSrc": "3900:206:5",
													"nodeType": "YulBlock",
													"src": "3900:206:5",
													"statements": [
														{
															"nativeSrc": "3910:26:5",
															"nodeType": "YulAssignment",
															"src": "3910:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:5"
																},
																"nativeSrc": "3918:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:5"
																		},
																		"nativeSrc": "3999:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3946:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:5"
																},
																"nativeSrc": "3946:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:5"
															},
															"nativeSrc": "3946:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4071:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4071:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4084:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4084:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4095:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4095:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4080:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4080:3:5"
																		},
																		"nativeSrc": "4080:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4080:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4027:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4027:43:5"
																},
																"nativeSrc": "4027:72:5",
																"nodeType": "YulFunctionCall",
																"src": "4027:72:5"
															},
															"nativeSrc": "4027:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "4027:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3774:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3864:9:5",
														"nodeType": "YulTypedName",
														"src": "3864:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3876:6:5",
														"nodeType": "YulTypedName",
														"src": "3876:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:5",
														"nodeType": "YulTypedName",
														"src": "3884:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:5",
														"nodeType": "YulTypedName",
														"src": "3895:4:5",
														"type": ""
													}
												],
												"src": "3774:332:5"
											},
											{
												"body": {
													"nativeSrc": "4178:263:5",
													"nodeType": "YulBlock",
													"src": "4178:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4224:83:5",
																"nodeType": "YulBlock",
																"src": "4224:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4226:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4226:77:5"
																			},
																			"nativeSrc": "4226:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4226:79:5"
																		},
																		"nativeSrc": "4226:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4226:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4199:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4199:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4208:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4208:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4195:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4195:3:5"
																		},
																		"nativeSrc": "4195:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4195:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4220:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4220:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4191:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4191:3:5"
																},
																"nativeSrc": "4191:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4191:32:5"
															},
															"nativeSrc": "4188:119:5",
															"nodeType": "YulIf",
															"src": "4188:119:5"
														},
														{
															"nativeSrc": "4317:117:5",
															"nodeType": "YulBlock",
															"src": "4317:117:5",
															"statements": [
																{
																	"nativeSrc": "4332:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4332:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4346:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4346:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4336:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4336:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4361:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4361:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4396:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4396:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4407:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4407:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4392:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4392:3:5"
																				},
																				"nativeSrc": "4392:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4392:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4416:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4416:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4371:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4371:20:5"
																		},
																		"nativeSrc": "4371:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4371:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4361:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4361:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4112:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4148:9:5",
														"nodeType": "YulTypedName",
														"src": "4148:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4159:7:5",
														"nodeType": "YulTypedName",
														"src": "4159:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4171:6:5",
														"nodeType": "YulTypedName",
														"src": "4171:6:5",
														"type": ""
													}
												],
												"src": "4112:329:5"
											},
											{
												"body": {
													"nativeSrc": "4543:40:5",
													"nodeType": "YulBlock",
													"src": "4543:40:5",
													"statements": [
														{
															"nativeSrc": "4554:22:5",
															"nodeType": "YulAssignment",
															"src": "4554:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4570:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4570:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4564:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4564:5:5"
																},
																"nativeSrc": "4564:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4564:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4554:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4554:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "4447:136:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4526:5:5",
														"nodeType": "YulTypedName",
														"src": "4526:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4536:6:5",
														"nodeType": "YulTypedName",
														"src": "4536:6:5",
														"type": ""
													}
												],
												"src": "4447:136:5"
											},
											{
												"body": {
													"nativeSrc": "4722:73:5",
													"nodeType": "YulBlock",
													"src": "4722:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4739:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4739:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4744:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4744:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4732:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4732:6:5"
																},
																"nativeSrc": "4732:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4732:19:5"
															},
															"nativeSrc": "4732:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "4732:19:5"
														},
														{
															"nativeSrc": "4760:29:5",
															"nodeType": "YulAssignment",
															"src": "4760:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4779:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4779:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4784:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4784:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4775:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4775:3:5"
																},
																"nativeSrc": "4775:14:5",
																"nodeType": "YulFunctionCall",
																"src": "4775:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4760:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "4760:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "4589:206:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4694:3:5",
														"nodeType": "YulTypedName",
														"src": "4694:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4699:6:5",
														"nodeType": "YulTypedName",
														"src": "4699:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4710:11:5",
														"nodeType": "YulTypedName",
														"src": "4710:11:5",
														"type": ""
													}
												],
												"src": "4589:206:5"
											},
											{
												"body": {
													"nativeSrc": "4895:60:5",
													"nodeType": "YulBlock",
													"src": "4895:60:5",
													"statements": [
														{
															"nativeSrc": "4905:11:5",
															"nodeType": "YulAssignment",
															"src": "4905:11:5",
															"value": {
																"name": "ptr",
																"nativeSrc": "4913:3:5",
																"nodeType": "YulIdentifier",
																"src": "4913:3:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4905:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4905:4:5"
																}
															]
														},
														{
															"nativeSrc": "4926:22:5",
															"nodeType": "YulAssignment",
															"src": "4926:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4938:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4938:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4943:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4943:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4934:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4934:3:5"
																},
																"nativeSrc": "4934:14:5",
																"nodeType": "YulFunctionCall",
																"src": "4934:14:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4926:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4926:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "4801:154:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4882:3:5",
														"nodeType": "YulTypedName",
														"src": "4882:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4890:4:5",
														"nodeType": "YulTypedName",
														"src": "4890:4:5",
														"type": ""
													}
												],
												"src": "4801:154:5"
											},
											{
												"body": {
													"nativeSrc": "5016:53:5",
													"nodeType": "YulBlock",
													"src": "5016:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5033:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5033:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5056:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5056:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5038:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "5038:17:5"
																		},
																		"nativeSrc": "5038:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5038:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5026:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5026:6:5"
																},
																"nativeSrc": "5026:37:5",
																"nodeType": "YulFunctionCall",
																"src": "5026:37:5"
															},
															"nativeSrc": "5026:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "5026:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "4961:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5004:5:5",
														"nodeType": "YulTypedName",
														"src": "5004:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5011:3:5",
														"nodeType": "YulTypedName",
														"src": "5011:3:5",
														"type": ""
													}
												],
												"src": "4961:108:5"
											},
											{
												"body": {
													"nativeSrc": "5243:407:5",
													"nodeType": "YulBlock",
													"src": "5243:407:5",
													"statements": [
														{
															"nativeSrc": "5253:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5253:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5269:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5269:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5274:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5274:4:5",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5265:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:5"
																},
																"nativeSrc": "5265:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5265:14:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "5257:4:5",
																	"nodeType": "YulTypedName",
																	"src": "5257:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5289:172:5",
															"nodeType": "YulBlock",
															"src": "5289:172:5",
															"statements": [
																{
																	"nativeSrc": "5332:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5332:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5362:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5362:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5369:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5369:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5358:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5358:3:5"
																				},
																				"nativeSrc": "5358:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5358:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5352:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5352:5:5"
																		},
																		"nativeSrc": "5352:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5352:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5336:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5336:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5422:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5422:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5440:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5440:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5445:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5445:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5436:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5436:3:5"
																				},
																				"nativeSrc": "5436:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5436:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5388:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5388:33:5"
																		},
																		"nativeSrc": "5388:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5388:63:5"
																	},
																	"nativeSrc": "5388:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5388:63:5"
																}
															]
														},
														{
															"nativeSrc": "5471:172:5",
															"nodeType": "YulBlock",
															"src": "5471:172:5",
															"statements": [
																{
																	"nativeSrc": "5514:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5514:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5544:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5544:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5551:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5551:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5540:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5540:3:5"
																				},
																				"nativeSrc": "5540:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5540:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5534:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5534:5:5"
																		},
																		"nativeSrc": "5534:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5534:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5518:12:5",
																			"nodeType": "YulTypedName",
																			"src": "5518:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5604:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "5604:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5622:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5622:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5627:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5627:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5618:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5618:3:5"
																				},
																				"nativeSrc": "5618:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5618:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5570:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "5570:33:5"
																		},
																		"nativeSrc": "5570:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5570:63:5"
																	},
																	"nativeSrc": "5570:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "5570:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr",
												"nativeSrc": "5143:507:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5230:5:5",
														"nodeType": "YulTypedName",
														"src": "5230:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5237:3:5",
														"nodeType": "YulTypedName",
														"src": "5237:3:5",
														"type": ""
													}
												],
												"src": "5143:507:5"
											},
											{
												"body": {
													"nativeSrc": "5780:143:5",
													"nodeType": "YulBlock",
													"src": "5780:143:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5868:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5868:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5876:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5876:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr",
																	"nativeSrc": "5790:77:5",
																	"nodeType": "YulIdentifier",
																	"src": "5790:77:5"
																},
																"nativeSrc": "5790:90:5",
																"nodeType": "YulFunctionCall",
																"src": "5790:90:5"
															},
															"nativeSrc": "5790:90:5",
															"nodeType": "YulExpressionStatement",
															"src": "5790:90:5"
														},
														{
															"nativeSrc": "5889:28:5",
															"nodeType": "YulAssignment",
															"src": "5889:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5907:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5907:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5912:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5912:4:5",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5903:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5903:3:5"
																},
																"nativeSrc": "5903:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5903:14:5"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "5889:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "5889:10:5"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr",
												"nativeSrc": "5656:267:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "5753:6:5",
														"nodeType": "YulTypedName",
														"src": "5753:6:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5761:3:5",
														"nodeType": "YulTypedName",
														"src": "5761:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "5769:10:5",
														"nodeType": "YulTypedName",
														"src": "5769:10:5",
														"type": ""
													}
												],
												"src": "5656:267:5"
											},
											{
												"body": {
													"nativeSrc": "6026:38:5",
													"nodeType": "YulBlock",
													"src": "6026:38:5",
													"statements": [
														{
															"nativeSrc": "6036:22:5",
															"nodeType": "YulAssignment",
															"src": "6036:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6048:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6048:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6053:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6053:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6044:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6044:3:5"
																},
																"nativeSrc": "6044:14:5",
																"nodeType": "YulFunctionCall",
																"src": "6044:14:5"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6036:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6036:4:5"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "5929:135:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6013:3:5",
														"nodeType": "YulTypedName",
														"src": "6013:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6021:4:5",
														"nodeType": "YulTypedName",
														"src": "6021:4:5",
														"type": ""
													}
												],
												"src": "5929:135:5"
											},
											{
												"body": {
													"nativeSrc": "6310:740:5",
													"nodeType": "YulBlock",
													"src": "6310:740:5",
													"statements": [
														{
															"nativeSrc": "6320:90:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6320:90:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6404:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "6334:69:5",
																	"nodeType": "YulIdentifier",
																	"src": "6334:69:5"
																},
																"nativeSrc": "6334:76:5",
																"nodeType": "YulFunctionCall",
																"src": "6334:76:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6324:6:5",
																	"nodeType": "YulTypedName",
																	"src": "6324:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6419:115:5",
															"nodeType": "YulAssignment",
															"src": "6419:115:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6522:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6522:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6527:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6527:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "6426:95:5",
																	"nodeType": "YulIdentifier",
																	"src": "6426:95:5"
																},
																"nativeSrc": "6426:108:5",
																"nodeType": "YulFunctionCall",
																"src": "6426:108:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6419:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6419:3:5"
																}
															]
														},
														{
															"nativeSrc": "6543:93:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6543:93:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6630:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6630:5:5"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "6558:71:5",
																	"nodeType": "YulIdentifier",
																	"src": "6558:71:5"
																},
																"nativeSrc": "6558:78:5",
																"nodeType": "YulFunctionCall",
																"src": "6558:78:5"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "6547:7:5",
																	"nodeType": "YulTypedName",
																	"src": "6547:7:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6645:21:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6645:21:5",
															"value": {
																"name": "baseRef",
																"nativeSrc": "6659:7:5",
																"nodeType": "YulIdentifier",
																"src": "6659:7:5"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "6649:6:5",
																	"nodeType": "YulTypedName",
																	"src": "6649:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6735:290:5",
																"nodeType": "YulBlock",
																"src": "6735:290:5",
																"statements": [
																	{
																		"nativeSrc": "6749:34:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6749:34:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6776:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "6776:6:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6770:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6770:5:5"
																			},
																			"nativeSrc": "6770:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6770:13:5"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "6753:13:5",
																				"nodeType": "YulTypedName",
																				"src": "6753:13:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6796:114:5",
																		"nodeType": "YulAssignment",
																		"src": "6796:114:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "6891:13:5",
																					"nodeType": "YulIdentifier",
																					"src": "6891:13:5"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "6906:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6906:3:5"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr",
																				"nativeSrc": "6803:87:5",
																				"nodeType": "YulIdentifier",
																				"src": "6803:87:5"
																			},
																			"nativeSrc": "6803:107:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6803:107:5"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "6796:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6796:3:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6923:92:5",
																		"nodeType": "YulAssignment",
																		"src": "6923:92:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7008:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "7008:6:5"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "6933:74:5",
																				"nodeType": "YulIdentifier",
																				"src": "6933:74:5"
																			},
																			"nativeSrc": "6933:82:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6933:82:5"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "6923:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6923:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6697:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6697:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6700:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6700:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6694:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6694:2:5"
																},
																"nativeSrc": "6694:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6694:13:5"
															},
															"nativeSrc": "6675:350:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6708:18:5",
																"nodeType": "YulBlock",
																"src": "6708:18:5",
																"statements": [
																	{
																		"nativeSrc": "6710:14:5",
																		"nodeType": "YulAssignment",
																		"src": "6710:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6719:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "6719:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6722:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6722:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6715:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6715:3:5"
																			},
																			"nativeSrc": "6715:9:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6715:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6710:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "6710:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6679:14:5",
																"nodeType": "YulBlock",
																"src": "6679:14:5",
																"statements": [
																	{
																		"nativeSrc": "6681:10:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6681:10:5",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6690:1:5",
																			"nodeType": "YulLiteral",
																			"src": "6690:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "6685:1:5",
																				"nodeType": "YulTypedName",
																				"src": "6685:1:5",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6675:350:5"
														},
														{
															"nativeSrc": "7034:10:5",
															"nodeType": "YulAssignment",
															"src": "7034:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "7041:3:5",
																"nodeType": "YulIdentifier",
																"src": "7041:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7034:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7034:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6142:908:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6289:5:5",
														"nodeType": "YulTypedName",
														"src": "6289:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6296:3:5",
														"nodeType": "YulTypedName",
														"src": "6296:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6305:3:5",
														"nodeType": "YulTypedName",
														"src": "6305:3:5",
														"type": ""
													}
												],
												"src": "6142:908:5"
											},
											{
												"body": {
													"nativeSrc": "7248:269:5",
													"nodeType": "YulBlock",
													"src": "7248:269:5",
													"statements": [
														{
															"nativeSrc": "7258:26:5",
															"nodeType": "YulAssignment",
															"src": "7258:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7270:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7270:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7281:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7281:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7266:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7266:3:5"
																},
																"nativeSrc": "7266:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7266:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7258:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7258:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7305:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7305:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7316:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7316:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7301:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7301:3:5"
																		},
																		"nativeSrc": "7301:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7301:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7324:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7324:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7330:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7330:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7320:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7320:3:5"
																		},
																		"nativeSrc": "7320:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7320:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7294:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7294:6:5"
																},
																"nativeSrc": "7294:47:5",
																"nodeType": "YulFunctionCall",
																"src": "7294:47:5"
															},
															"nativeSrc": "7294:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "7294:47:5"
														},
														{
															"nativeSrc": "7350:160:5",
															"nodeType": "YulAssignment",
															"src": "7350:160:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7496:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7496:6:5"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7505:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7505:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7358:137:5",
																	"nodeType": "YulIdentifier",
																	"src": "7358:137:5"
																},
																"nativeSrc": "7358:152:5",
																"nodeType": "YulFunctionCall",
																"src": "7358:152:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7350:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7350:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7056:461:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7220:9:5",
														"nodeType": "YulTypedName",
														"src": "7220:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7232:6:5",
														"nodeType": "YulTypedName",
														"src": "7232:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7243:4:5",
														"nodeType": "YulTypedName",
														"src": "7243:4:5",
														"type": ""
													}
												],
												"src": "7056:461:5"
											},
											{
												"body": {
													"nativeSrc": "7551:152:5",
													"nodeType": "YulBlock",
													"src": "7551:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7568:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7568:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7571:77:5",
																		"nodeType": "YulLiteral",
																		"src": "7571:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7561:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7561:6:5"
																},
																"nativeSrc": "7561:88:5",
																"nodeType": "YulFunctionCall",
																"src": "7561:88:5"
															},
															"nativeSrc": "7561:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "7561:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7665:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7665:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7668:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7668:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7658:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7658:6:5"
																},
																"nativeSrc": "7658:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7658:15:5"
															},
															"nativeSrc": "7658:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7658:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7689:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7689:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7692:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7692:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7682:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7682:6:5"
																},
																"nativeSrc": "7682:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7682:15:5"
															},
															"nativeSrc": "7682:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7682:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7523:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "7523:180:5"
											},
											{
												"body": {
													"nativeSrc": "7737:152:5",
													"nodeType": "YulBlock",
													"src": "7737:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7754:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7754:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7757:77:5",
																		"nodeType": "YulLiteral",
																		"src": "7757:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7747:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7747:6:5"
																},
																"nativeSrc": "7747:88:5",
																"nodeType": "YulFunctionCall",
																"src": "7747:88:5"
															},
															"nativeSrc": "7747:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "7747:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7851:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7851:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7854:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7854:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7844:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7844:6:5"
																},
																"nativeSrc": "7844:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7844:15:5"
															},
															"nativeSrc": "7844:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7844:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7875:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7875:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7878:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7878:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7868:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7868:6:5"
																},
																"nativeSrc": "7868:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7868:15:5"
															},
															"nativeSrc": "7868:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7868:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7709:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "7709:180:5"
											},
											{
												"body": {
													"nativeSrc": "7939:147:5",
													"nodeType": "YulBlock",
													"src": "7939:147:5",
													"statements": [
														{
															"nativeSrc": "7949:25:5",
															"nodeType": "YulAssignment",
															"src": "7949:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7972:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7972:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7954:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7954:17:5"
																},
																"nativeSrc": "7954:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7954:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7949:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7949:1:5"
																}
															]
														},
														{
															"nativeSrc": "7983:25:5",
															"nodeType": "YulAssignment",
															"src": "7983:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8006:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8006:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7988:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7988:17:5"
																},
																"nativeSrc": "7988:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7988:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7983:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7983:1:5"
																}
															]
														},
														{
															"nativeSrc": "8017:16:5",
															"nodeType": "YulAssignment",
															"src": "8017:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8028:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8028:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8031:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8031:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8024:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8024:3:5"
																},
																"nativeSrc": "8024:9:5",
																"nodeType": "YulFunctionCall",
																"src": "8024:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8017:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8017:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8057:22:5",
																"nodeType": "YulBlock",
																"src": "8057:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8059:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "8059:16:5"
																			},
																			"nativeSrc": "8059:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8059:18:5"
																		},
																		"nativeSrc": "8059:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8059:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8049:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8049:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8052:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8052:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8046:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "8046:2:5"
																},
																"nativeSrc": "8046:10:5",
																"nodeType": "YulFunctionCall",
																"src": "8046:10:5"
															},
															"nativeSrc": "8043:36:5",
															"nodeType": "YulIf",
															"src": "8043:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7895:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7926:1:5",
														"nodeType": "YulTypedName",
														"src": "7926:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7929:1:5",
														"nodeType": "YulTypedName",
														"src": "7929:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7935:3:5",
														"nodeType": "YulTypedName",
														"src": "7935:3:5",
														"type": ""
													}
												],
												"src": "7895:191:5"
											},
											{
												"body": {
													"nativeSrc": "8218:206:5",
													"nodeType": "YulBlock",
													"src": "8218:206:5",
													"statements": [
														{
															"nativeSrc": "8228:26:5",
															"nodeType": "YulAssignment",
															"src": "8228:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8240:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8240:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8251:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8251:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8236:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8236:3:5"
																},
																"nativeSrc": "8236:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8236:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8228:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8228:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8308:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8308:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8321:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8321:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8332:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8332:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8317:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8317:3:5"
																		},
																		"nativeSrc": "8317:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8317:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8264:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8264:43:5"
																},
																"nativeSrc": "8264:71:5",
																"nodeType": "YulFunctionCall",
																"src": "8264:71:5"
															},
															"nativeSrc": "8264:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "8264:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8389:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8389:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8402:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8402:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8413:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8413:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8398:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8398:3:5"
																		},
																		"nativeSrc": "8398:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8398:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8345:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8345:43:5"
																},
																"nativeSrc": "8345:72:5",
																"nodeType": "YulFunctionCall",
																"src": "8345:72:5"
															},
															"nativeSrc": "8345:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "8345:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8092:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8182:9:5",
														"nodeType": "YulTypedName",
														"src": "8182:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8194:6:5",
														"nodeType": "YulTypedName",
														"src": "8194:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8202:6:5",
														"nodeType": "YulTypedName",
														"src": "8202:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8213:4:5",
														"nodeType": "YulTypedName",
														"src": "8213:4:5",
														"type": ""
													}
												],
												"src": "8092:332:5"
											},
											{
												"body": {
													"nativeSrc": "8472:48:5",
													"nodeType": "YulBlock",
													"src": "8472:48:5",
													"statements": [
														{
															"nativeSrc": "8482:32:5",
															"nodeType": "YulAssignment",
															"src": "8482:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8507:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8507:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8500:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8500:6:5"
																		},
																		"nativeSrc": "8500:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8500:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8493:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8493:6:5"
																},
																"nativeSrc": "8493:21:5",
																"nodeType": "YulFunctionCall",
																"src": "8493:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8482:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "8482:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "8430:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8454:5:5",
														"nodeType": "YulTypedName",
														"src": "8454:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8464:7:5",
														"nodeType": "YulTypedName",
														"src": "8464:7:5",
														"type": ""
													}
												],
												"src": "8430:90:5"
											},
											{
												"body": {
													"nativeSrc": "8566:76:5",
													"nodeType": "YulBlock",
													"src": "8566:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8620:16:5",
																"nodeType": "YulBlock",
																"src": "8620:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8629:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8629:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8632:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8632:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8622:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8622:6:5"
																			},
																			"nativeSrc": "8622:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8622:12:5"
																		},
																		"nativeSrc": "8622:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8622:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8589:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8589:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8611:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "8611:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8596:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "8596:14:5"
																				},
																				"nativeSrc": "8596:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8596:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8586:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "8586:2:5"
																		},
																		"nativeSrc": "8586:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8586:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8579:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8579:6:5"
																},
																"nativeSrc": "8579:40:5",
																"nodeType": "YulFunctionCall",
																"src": "8579:40:5"
															},
															"nativeSrc": "8576:60:5",
															"nodeType": "YulIf",
															"src": "8576:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8526:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8559:5:5",
														"nodeType": "YulTypedName",
														"src": "8559:5:5",
														"type": ""
													}
												],
												"src": "8526:116:5"
											},
											{
												"body": {
													"nativeSrc": "8708:77:5",
													"nodeType": "YulBlock",
													"src": "8708:77:5",
													"statements": [
														{
															"nativeSrc": "8718:22:5",
															"nodeType": "YulAssignment",
															"src": "8718:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8733:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8733:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8727:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8727:5:5"
																},
																"nativeSrc": "8727:13:5",
																"nodeType": "YulFunctionCall",
																"src": "8727:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8718:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8718:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8773:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8773:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8749:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "8749:23:5"
																},
																"nativeSrc": "8749:30:5",
																"nodeType": "YulFunctionCall",
																"src": "8749:30:5"
															},
															"nativeSrc": "8749:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "8749:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "8648:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8686:6:5",
														"nodeType": "YulTypedName",
														"src": "8686:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8694:3:5",
														"nodeType": "YulTypedName",
														"src": "8694:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8702:5:5",
														"nodeType": "YulTypedName",
														"src": "8702:5:5",
														"type": ""
													}
												],
												"src": "8648:137:5"
											},
											{
												"body": {
													"nativeSrc": "8865:271:5",
													"nodeType": "YulBlock",
													"src": "8865:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8911:83:5",
																"nodeType": "YulBlock",
																"src": "8911:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8913:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "8913:77:5"
																			},
																			"nativeSrc": "8913:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8913:79:5"
																		},
																		"nativeSrc": "8913:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8913:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8886:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8886:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8895:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8895:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8882:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8882:3:5"
																		},
																		"nativeSrc": "8882:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8882:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8907:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8907:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8878:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8878:3:5"
																},
																"nativeSrc": "8878:32:5",
																"nodeType": "YulFunctionCall",
																"src": "8878:32:5"
															},
															"nativeSrc": "8875:119:5",
															"nodeType": "YulIf",
															"src": "8875:119:5"
														},
														{
															"nativeSrc": "9004:125:5",
															"nodeType": "YulBlock",
															"src": "9004:125:5",
															"statements": [
																{
																	"nativeSrc": "9019:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9019:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9033:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9033:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9023:6:5",
																			"nodeType": "YulTypedName",
																			"src": "9023:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9048:71:5",
																	"nodeType": "YulAssignment",
																	"src": "9048:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9091:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "9091:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9102:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "9102:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9087:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9087:3:5"
																				},
																				"nativeSrc": "9087:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9087:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9111:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "9111:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9058:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "9058:28:5"
																		},
																		"nativeSrc": "9058:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9058:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9048:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "9048:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8791:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8835:9:5",
														"nodeType": "YulTypedName",
														"src": "8835:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8846:7:5",
														"nodeType": "YulTypedName",
														"src": "8846:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8858:6:5",
														"nodeType": "YulTypedName",
														"src": "8858:6:5",
														"type": ""
													}
												],
												"src": "8791:345:5"
											},
											{
												"body": {
													"nativeSrc": "9238:73:5",
													"nodeType": "YulBlock",
													"src": "9238:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9255:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9255:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9260:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9260:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9248:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9248:6:5"
																},
																"nativeSrc": "9248:19:5",
																"nodeType": "YulFunctionCall",
																"src": "9248:19:5"
															},
															"nativeSrc": "9248:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "9248:19:5"
														},
														{
															"nativeSrc": "9276:29:5",
															"nodeType": "YulAssignment",
															"src": "9276:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9295:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9295:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9300:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9300:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9291:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9291:3:5"
																},
																"nativeSrc": "9291:14:5",
																"nodeType": "YulFunctionCall",
																"src": "9291:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9276:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9276:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9142:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9210:3:5",
														"nodeType": "YulTypedName",
														"src": "9210:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9215:6:5",
														"nodeType": "YulTypedName",
														"src": "9215:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9226:11:5",
														"nodeType": "YulTypedName",
														"src": "9226:11:5",
														"type": ""
													}
												],
												"src": "9142:169:5"
											},
											{
												"body": {
													"nativeSrc": "9423:59:5",
													"nodeType": "YulBlock",
													"src": "9423:59:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9445:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9445:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9453:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9453:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9441:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9441:3:5"
																		},
																		"nativeSrc": "9441:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9441:14:5"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "9457:17:5",
																		"nodeType": "YulLiteral",
																		"src": "9457:17:5",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9434:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9434:6:5"
																},
																"nativeSrc": "9434:41:5",
																"nodeType": "YulFunctionCall",
																"src": "9434:41:5"
															},
															"nativeSrc": "9434:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "9434:41:5"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "9317:165:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9415:6:5",
														"nodeType": "YulTypedName",
														"src": "9415:6:5",
														"type": ""
													}
												],
												"src": "9317:165:5"
											},
											{
												"body": {
													"nativeSrc": "9634:220:5",
													"nodeType": "YulBlock",
													"src": "9634:220:5",
													"statements": [
														{
															"nativeSrc": "9644:74:5",
															"nodeType": "YulAssignment",
															"src": "9644:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9710:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9710:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9715:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9715:2:5",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9651:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "9651:58:5"
																},
																"nativeSrc": "9651:67:5",
																"nodeType": "YulFunctionCall",
																"src": "9651:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9644:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9644:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9816:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9816:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "9727:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "9727:88:5"
																},
																"nativeSrc": "9727:93:5",
																"nodeType": "YulFunctionCall",
																"src": "9727:93:5"
															},
															"nativeSrc": "9727:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "9727:93:5"
														},
														{
															"nativeSrc": "9829:19:5",
															"nodeType": "YulAssignment",
															"src": "9829:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9840:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9840:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9845:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9845:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9836:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9836:3:5"
																},
																"nativeSrc": "9836:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9836:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9829:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9829:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9488:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9622:3:5",
														"nodeType": "YulTypedName",
														"src": "9622:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9630:3:5",
														"nodeType": "YulTypedName",
														"src": "9630:3:5",
														"type": ""
													}
												],
												"src": "9488:366:5"
											},
											{
												"body": {
													"nativeSrc": "10031:248:5",
													"nodeType": "YulBlock",
													"src": "10031:248:5",
													"statements": [
														{
															"nativeSrc": "10041:26:5",
															"nodeType": "YulAssignment",
															"src": "10041:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10053:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10053:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10064:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10064:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10049:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10049:3:5"
																},
																"nativeSrc": "10049:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10049:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10041:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10041:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10088:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10088:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10099:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10099:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10084:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10084:3:5"
																		},
																		"nativeSrc": "10084:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10084:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10107:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10107:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10113:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10113:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10103:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10103:3:5"
																		},
																		"nativeSrc": "10103:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10103:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10077:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10077:6:5"
																},
																"nativeSrc": "10077:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10077:47:5"
															},
															"nativeSrc": "10077:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10077:47:5"
														},
														{
															"nativeSrc": "10133:139:5",
															"nodeType": "YulAssignment",
															"src": "10133:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10267:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10267:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10141:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10141:124:5"
																},
																"nativeSrc": "10141:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10141:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10133:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10133:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9860:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10011:9:5",
														"nodeType": "YulTypedName",
														"src": "10011:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10026:4:5",
														"nodeType": "YulTypedName",
														"src": "10026:4:5",
														"type": ""
													}
												],
												"src": "9860:419:5"
											},
											{
												"body": {
													"nativeSrc": "10330:149:5",
													"nodeType": "YulBlock",
													"src": "10330:149:5",
													"statements": [
														{
															"nativeSrc": "10340:25:5",
															"nodeType": "YulAssignment",
															"src": "10340:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10363:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10363:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10345:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "10345:17:5"
																},
																"nativeSrc": "10345:20:5",
																"nodeType": "YulFunctionCall",
																"src": "10345:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10340:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "10340:1:5"
																}
															]
														},
														{
															"nativeSrc": "10374:25:5",
															"nodeType": "YulAssignment",
															"src": "10374:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10397:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10397:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10379:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "10379:17:5"
																},
																"nativeSrc": "10379:20:5",
																"nodeType": "YulFunctionCall",
																"src": "10379:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10374:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "10374:1:5"
																}
															]
														},
														{
															"nativeSrc": "10408:17:5",
															"nodeType": "YulAssignment",
															"src": "10408:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10420:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10420:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10423:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10423:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10416:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10416:3:5"
																},
																"nativeSrc": "10416:9:5",
																"nodeType": "YulFunctionCall",
																"src": "10416:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10408:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10408:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10450:22:5",
																"nodeType": "YulBlock",
																"src": "10450:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10452:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "10452:16:5"
																			},
																			"nativeSrc": "10452:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "10452:18:5"
																		},
																		"nativeSrc": "10452:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "10452:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10441:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10441:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10447:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10447:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10438:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "10438:2:5"
																},
																"nativeSrc": "10438:11:5",
																"nodeType": "YulFunctionCall",
																"src": "10438:11:5"
															},
															"nativeSrc": "10435:37:5",
															"nodeType": "YulIf",
															"src": "10435:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10285:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10316:1:5",
														"nodeType": "YulTypedName",
														"src": "10316:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10319:1:5",
														"nodeType": "YulTypedName",
														"src": "10319:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10325:4:5",
														"nodeType": "YulTypedName",
														"src": "10325:4:5",
														"type": ""
													}
												],
												"src": "10285:194:5"
											},
											{
												"body": {
													"nativeSrc": "10639:288:5",
													"nodeType": "YulBlock",
													"src": "10639:288:5",
													"statements": [
														{
															"nativeSrc": "10649:26:5",
															"nodeType": "YulAssignment",
															"src": "10649:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10661:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10661:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10672:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10672:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10657:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10657:3:5"
																},
																"nativeSrc": "10657:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10657:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10649:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10649:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10729:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10729:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10742:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10742:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10753:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10753:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10738:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10738:3:5"
																		},
																		"nativeSrc": "10738:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10738:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10685:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10685:43:5"
																},
																"nativeSrc": "10685:71:5",
																"nodeType": "YulFunctionCall",
																"src": "10685:71:5"
															},
															"nativeSrc": "10685:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "10685:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10810:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10810:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10823:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10823:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10834:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10834:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10819:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10819:3:5"
																		},
																		"nativeSrc": "10819:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10819:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10766:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10766:43:5"
																},
																"nativeSrc": "10766:72:5",
																"nodeType": "YulFunctionCall",
																"src": "10766:72:5"
															},
															"nativeSrc": "10766:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "10766:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10892:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10892:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10905:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10905:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10916:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10916:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10901:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10901:3:5"
																		},
																		"nativeSrc": "10901:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10901:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10848:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10848:43:5"
																},
																"nativeSrc": "10848:72:5",
																"nodeType": "YulFunctionCall",
																"src": "10848:72:5"
															},
															"nativeSrc": "10848:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "10848:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10485:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10595:9:5",
														"nodeType": "YulTypedName",
														"src": "10595:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10607:6:5",
														"nodeType": "YulTypedName",
														"src": "10607:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10615:6:5",
														"nodeType": "YulTypedName",
														"src": "10615:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10623:6:5",
														"nodeType": "YulTypedName",
														"src": "10623:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10634:4:5",
														"nodeType": "YulTypedName",
														"src": "10634:4:5",
														"type": ""
													}
												],
												"src": "10485:442:5"
											},
											{
												"body": {
													"nativeSrc": "11039:75:5",
													"nodeType": "YulBlock",
													"src": "11039:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11061:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11061:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11069:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11069:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11057:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11057:3:5"
																		},
																		"nativeSrc": "11057:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11057:14:5"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "11073:33:5",
																		"nodeType": "YulLiteral",
																		"src": "11073:33:5",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11050:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11050:6:5"
																},
																"nativeSrc": "11050:57:5",
																"nodeType": "YulFunctionCall",
																"src": "11050:57:5"
															},
															"nativeSrc": "11050:57:5",
															"nodeType": "YulExpressionStatement",
															"src": "11050:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "10933:181:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11031:6:5",
														"nodeType": "YulTypedName",
														"src": "11031:6:5",
														"type": ""
													}
												],
												"src": "10933:181:5"
											},
											{
												"body": {
													"nativeSrc": "11266:220:5",
													"nodeType": "YulBlock",
													"src": "11266:220:5",
													"statements": [
														{
															"nativeSrc": "11276:74:5",
															"nodeType": "YulAssignment",
															"src": "11276:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11342:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11342:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11347:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11347:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11283:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "11283:58:5"
																},
																"nativeSrc": "11283:67:5",
																"nodeType": "YulFunctionCall",
																"src": "11283:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11276:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11276:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11448:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11448:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "11359:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "11359:88:5"
																},
																"nativeSrc": "11359:93:5",
																"nodeType": "YulFunctionCall",
																"src": "11359:93:5"
															},
															"nativeSrc": "11359:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "11359:93:5"
														},
														{
															"nativeSrc": "11461:19:5",
															"nodeType": "YulAssignment",
															"src": "11461:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11472:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11472:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11477:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11477:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11468:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11468:3:5"
																},
																"nativeSrc": "11468:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11468:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11461:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11461:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11120:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11254:3:5",
														"nodeType": "YulTypedName",
														"src": "11254:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11262:3:5",
														"nodeType": "YulTypedName",
														"src": "11262:3:5",
														"type": ""
													}
												],
												"src": "11120:366:5"
											},
											{
												"body": {
													"nativeSrc": "11663:248:5",
													"nodeType": "YulBlock",
													"src": "11663:248:5",
													"statements": [
														{
															"nativeSrc": "11673:26:5",
															"nodeType": "YulAssignment",
															"src": "11673:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11685:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11685:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11696:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11696:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11681:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11681:3:5"
																},
																"nativeSrc": "11681:18:5",
																"nodeType": "YulFunctionCall",
																"src": "11681:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11673:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11673:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11720:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11720:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11731:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11731:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11716:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11716:3:5"
																		},
																		"nativeSrc": "11716:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11716:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11739:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "11739:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11745:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11745:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11735:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11735:3:5"
																		},
																		"nativeSrc": "11735:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11735:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11709:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11709:6:5"
																},
																"nativeSrc": "11709:47:5",
																"nodeType": "YulFunctionCall",
																"src": "11709:47:5"
															},
															"nativeSrc": "11709:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "11709:47:5"
														},
														{
															"nativeSrc": "11765:139:5",
															"nodeType": "YulAssignment",
															"src": "11765:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11899:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "11899:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11773:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "11773:124:5"
																},
																"nativeSrc": "11773:131:5",
																"nodeType": "YulFunctionCall",
																"src": "11773:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11765:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11765:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11492:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11643:9:5",
														"nodeType": "YulTypedName",
														"src": "11643:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11658:4:5",
														"nodeType": "YulTypedName",
														"src": "11658:4:5",
														"type": ""
													}
												],
												"src": "11492:419:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$290_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$290_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct StakingContract.Stake -> struct StakingContract.Stake\n    function abi_encode_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // stakedAmount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // withdrawDate\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct StakingContract.Stake[] -> struct StakingContract.Stake[]\n    function abi_encode_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Stake_$345_memory_ptr_to_t_struct$_Stake_$345_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009c575f3560e01c8063817b1cd211610064578063817b1cd21461010c5780638da5cb5b1461012a5780639081630214610148578063f2fde38b14610179578063fc0e3d90146101955761009c565b80633ccfd60b146100a0578063715018a6146100aa57806372f702f3146100b45780637b0472f0146100d25780637bc74225146100ee575b5f80fd5b6100a86101b3565b005b6100b26104cc565b005b6100bc6104df565b6040516100c99190610abc565b60405180910390f35b6100ec60048036038101906100e79190610b0c565b610504565b005b6100f66106fc565b6040516101039190610b59565b60405180910390f35b610114610705565b6040516101219190610b59565b60405180910390f35b61013261070b565b60405161013f9190610b92565b60405180910390f35b610162600480360381019061015d9190610bd5565b610733565b604051610170929190610c13565b60405180910390f35b610193600480360381019061018e9190610c3a565b61076d565b005b61019d6107f1565b6040516101aa9190610d49565b60405180910390f35b6101bb61089b565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b8282101561025b578382905f5260205f2090600202016040518060400160405290815f820154815260200160018201548152505081526020019060010190610218565b5050505090505f805b8251811015610379575f83828151811061028157610280610d69565b5b6020026020010151602001511180156102b657505f8382815181106102a9576102a8610d69565b5b60200260200101515f0151115b1561036c578281815181106102ce576102cd610d69565b5b60200260200101515f0151826102e49190610dc3565b915060405180604001604052805f81526020015f81525060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061034a57610349610d69565b5b905f5260205f2090600202015f820151815f0155602082015181600101559050505b8080600101915050610264565b505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016103d7929190610df6565b6020604051808303815f875af11580156103f3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104179190610e52565b905080610459576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045090610ed7565b60405180910390fd5b8160035f82825461046a9190610ef5565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5836040516104b79190610b59565b60405180910390a25050506104ca6108e8565b565b6104d46108f1565b6104dd5f610978565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61050c61089b565b5f6040518060400160405280848152602001834261052a9190610dc3565b815250905060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f01556020820151816001015550505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161060693929190610f28565b6020604051808303815f875af1158015610622573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106469190610e52565b905080610688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067f90610ed7565b60405180910390fd5b8360035f8282546106999190610dc3565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d856040516106e69190610b59565b60405180910390a250506106f86108e8565b5050565b5f600354905090565b60035481565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6004602052815f5260405f20818154811061074c575f80fd5b905f5260205f2090600202015f9150915050805f0154908060010154905082565b6107756108f1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107e5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107dc9190610b92565b60405180910390fd5b6107ee81610978565b50565b606060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015610892578382905f5260205f2090600202016040518060400160405290815f82015481526020016001820154815250508152602001906001019061084f565b50505050905090565b60025f54036108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d690610fa7565b60405180910390fd5b60025f81905550565b60015f81905550565b6108f9610a3b565b73ffffffffffffffffffffffffffffffffffffffff1661091761070b565b73ffffffffffffffffffffffffffffffffffffffff16146109765761093a610a3b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161096d9190610b92565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610a84610a7f610a7a84610a42565b610a61565b610a42565b9050919050565b5f610a9582610a6a565b9050919050565b5f610aa682610a8b565b9050919050565b610ab681610a9c565b82525050565b5f602082019050610acf5f830184610aad565b92915050565b5f80fd5b5f819050919050565b610aeb81610ad9565b8114610af5575f80fd5b50565b5f81359050610b0681610ae2565b92915050565b5f8060408385031215610b2257610b21610ad5565b5b5f610b2f85828601610af8565b9250506020610b4085828601610af8565b9150509250929050565b610b5381610ad9565b82525050565b5f602082019050610b6c5f830184610b4a565b92915050565b5f610b7c82610a42565b9050919050565b610b8c81610b72565b82525050565b5f602082019050610ba55f830184610b83565b92915050565b610bb481610b72565b8114610bbe575f80fd5b50565b5f81359050610bcf81610bab565b92915050565b5f8060408385031215610beb57610bea610ad5565b5b5f610bf885828601610bc1565b9250506020610c0985828601610af8565b9150509250929050565b5f604082019050610c265f830185610b4a565b610c336020830184610b4a565b9392505050565b5f60208284031215610c4f57610c4e610ad5565b5b5f610c5c84828501610bc1565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610c9781610ad9565b82525050565b604082015f820151610cb15f850182610c8e565b506020820151610cc46020850182610c8e565b50505050565b5f610cd58383610c9d565b60408301905092915050565b5f602082019050919050565b5f610cf782610c65565b610d018185610c6f565b9350610d0c83610c7f565b805f5b83811015610d3c578151610d238882610cca565b9750610d2e83610ce1565b925050600181019050610d0f565b5085935050505092915050565b5f6020820190508181035f830152610d618184610ced565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610dcd82610ad9565b9150610dd883610ad9565b9250828201905080821115610df057610def610d96565b5b92915050565b5f604082019050610e095f830185610b83565b610e166020830184610b4a565b9392505050565b5f8115159050919050565b610e3181610e1d565b8114610e3b575f80fd5b50565b5f81519050610e4c81610e28565b92915050565b5f60208284031215610e6757610e66610ad5565b5b5f610e7484828501610e3e565b91505092915050565b5f82825260208201905092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f610ec1600f83610e7d565b9150610ecc82610e8d565b602082019050919050565b5f6020820190508181035f830152610eee81610eb5565b9050919050565b5f610eff82610ad9565b9150610f0a83610ad9565b9250828203905081811115610f2257610f21610d96565b5b92915050565b5f606082019050610f3b5f830186610b83565b610f486020830185610b83565b610f556040830184610b4a565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610f91601f83610e7d565b9150610f9c82610f5d565b602082019050919050565b5f6020820190508181035f830152610fbe81610f85565b905091905056fea2646970667358221220b80ec40c30da7bd963bfe08efaa2ef11a5461c140143fb583d09156cc53f735a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x90816302 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xFC0E3D90 EQ PUSH2 0x195 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x7BC74225 EQ PUSH2 0xEE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x1B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2 PUSH2 0x4CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBC PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF6 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP3 SWAP2 SWAP1 PUSH2 0xC13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xC3A JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19D PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH2 0x89B JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x25B JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x218 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x379 JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x281 JUMPI PUSH2 0x280 PUSH2 0xD69 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD GT DUP1 ISZERO PUSH2 0x2B6 JUMPI POP PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A9 JUMPI PUSH2 0x2A8 PUSH2 0xD69 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x36C JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2CE JUMPI PUSH2 0x2CD PUSH2 0xD69 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 ADD MLOAD DUP3 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x34A JUMPI PUSH2 0x349 PUSH2 0xD69 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x264 JUMP JUMPDEST POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP3 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x459 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x450 SWAP1 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0xEF5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x4CA PUSH2 0x8E8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4D4 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x4DD PUSH0 PUSH2 0x978 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x50C PUSH2 0x89B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 TIMESTAMP PUSH2 0x52A SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x606 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x622 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67F SWAP1 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x699 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP6 PUSH1 0x40 MLOAD PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x6F8 PUSH2 0x8E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x74C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x775 PUSH2 0x8F1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DC SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7EE DUP2 PUSH2 0x978 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x892 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x84F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP1 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x8F9 PUSH2 0xA3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x917 PUSH2 0x70B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x976 JUMPI PUSH2 0x93A PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96D SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA84 PUSH2 0xA7F PUSH2 0xA7A DUP5 PUSH2 0xA42 JUMP JUMPDEST PUSH2 0xA61 JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA95 DUP3 PUSH2 0xA6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA6 DUP3 PUSH2 0xA8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB6 DUP2 PUSH2 0xA9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xACF PUSH0 DUP4 ADD DUP5 PUSH2 0xAAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEB DUP2 PUSH2 0xAD9 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB06 DUP2 PUSH2 0xAE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB22 JUMPI PUSH2 0xB21 PUSH2 0xAD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB2F DUP6 DUP3 DUP7 ADD PUSH2 0xAF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB40 DUP6 DUP3 DUP7 ADD PUSH2 0xAF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB53 DUP2 PUSH2 0xAD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB6C PUSH0 DUP4 ADD DUP5 PUSH2 0xB4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB7C DUP3 PUSH2 0xA42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8C DUP2 PUSH2 0xB72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBA5 PUSH0 DUP4 ADD DUP5 PUSH2 0xB83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBB4 DUP2 PUSH2 0xB72 JUMP JUMPDEST DUP2 EQ PUSH2 0xBBE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCF DUP2 PUSH2 0xBAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEA PUSH2 0xAD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBF8 DUP6 DUP3 DUP7 ADD PUSH2 0xBC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC09 DUP6 DUP3 DUP7 ADD PUSH2 0xAF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC26 PUSH0 DUP4 ADD DUP6 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0xC33 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB4A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4F JUMPI PUSH2 0xC4E PUSH2 0xAD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC5C DUP5 DUP3 DUP6 ADD PUSH2 0xBC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC97 DUP2 PUSH2 0xAD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xCB1 PUSH0 DUP6 ADD DUP3 PUSH2 0xC8E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xCC4 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xC8E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCD5 DUP4 DUP4 PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCF7 DUP3 PUSH2 0xC65 JUMP JUMPDEST PUSH2 0xD01 DUP2 DUP6 PUSH2 0xC6F JUMP JUMPDEST SWAP4 POP PUSH2 0xD0C DUP4 PUSH2 0xC7F JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD3C JUMPI DUP2 MLOAD PUSH2 0xD23 DUP9 DUP3 PUSH2 0xCCA JUMP JUMPDEST SWAP8 POP PUSH2 0xD2E DUP4 PUSH2 0xCE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xD0F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD61 DUP2 DUP5 PUSH2 0xCED JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDCD DUP3 PUSH2 0xAD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xDD8 DUP4 PUSH2 0xAD9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDF0 JUMPI PUSH2 0xDEF PUSH2 0xD96 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE09 PUSH0 DUP4 ADD DUP6 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0xE16 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB4A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE31 DUP2 PUSH2 0xE1D JUMP JUMPDEST DUP2 EQ PUSH2 0xE3B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE4C DUP2 PUSH2 0xE28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE67 JUMPI PUSH2 0xE66 PUSH2 0xAD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE74 DUP5 DUP3 DUP6 ADD PUSH2 0xE3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEC1 PUSH1 0xF DUP4 PUSH2 0xE7D JUMP JUMPDEST SWAP2 POP PUSH2 0xECC DUP3 PUSH2 0xE8D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEEE DUP2 PUSH2 0xEB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEFF DUP3 PUSH2 0xAD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0A DUP4 PUSH2 0xAD9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF22 JUMPI PUSH2 0xF21 PUSH2 0xD96 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF3B PUSH0 DUP4 ADD DUP7 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0xF48 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0xF55 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB4A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF91 PUSH1 0x1F DUP4 PUSH2 0xE7D JUMP JUMPDEST SWAP2 POP PUSH2 0xF9C DUP3 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFBE DUP2 PUSH2 0xF85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xE 0xC4 0xC ADDRESS 0xDA PUSH28 0xD963BFE08EFAA2EF11A5461C140143FB583D09156CC53F735A64736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "232:2277:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1704:802;;;:::i;:::-;;2293:101:0;;;:::i;:::-;;292:26:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;747:743;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1605:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;325:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;362:46:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1496:103:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1704:802;2261:21:1;:19;:21::i;:::-;1756:24:4::1;1783:11;:23;1795:10;1783:23;;;;;;;;;;;;;;;1756:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;1970:21;2011:6:::0;2006:268:::1;2027:9;:16;2023:1;:20;2006:268;;;2096:1;2068:9;2078:1;2068:12;;;;;;;;:::i;:::-;;;;;;;;:25;;;:29;:62;;;;;2129:1;2101:9;2111:1;2101:12;;;;;;;;:::i;:::-;;;;;;;;:25;;;:29;2068:62;2064:200;;;2166:9;2176:1;2166:12;;;;;;;;:::i;:::-;;;;;;;;:25;;;2149:42;;;;;:::i;:::-;;;2238:11;;;;;;;;2244:1;2238:11;;;;2247:1;2238:11;;::::0;2209::::1;:23;2221:10;2209:23;;;;;;;;;;;;;;;2233:1;2209:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;2064:200;2045:3;;;;;;;2006:268;;;;2292:12;2307;;;;;;;;;;;:21;;;2329:10;2341:13;2307:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2292:63;;2373:7;2365:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;2426:13;2411:11;;:28;;;;;;;:::i;:::-;;;;;;;;2473:10;2463:36;;;2485:13;2463:36;;;;;;:::i;:::-;;;;;;;;1746:760;;;2303:20:1::0;:18;:20::i;:::-;1704:802:4:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;292:26:4:-;;;;;;;;;;;;;:::o;747:743::-;2261:21:1;:19;:21::i;:::-;1007::4::1;1031:39;;;;;;;;1037:6;1031:39;;;;1063:6;1045:15;:24;;;;:::i;:::-;1031:39;;::::0;1007:63:::1;;1224:11;:23;1236:10;1224:23;;;;;;;;;;;;;;;1253:8;1224:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1281:12;1296;;;;;;;;;;;:25;;;1322:10;1342:4;1349:6;1296:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1281:75;;1374:7;1366:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;1427:6;1412:11;;:21;;;;;;;:::i;:::-;;;;;;;;1464:10;1457:26;;;1476:6;1457:26;;;;;;:::i;:::-;;;;;;;;816:674;;2303:20:1::0;:18;:20::i;:::-;747:743:4;;:::o;1605:89::-;1650:7;1676:11;;1669:18;;1605:89;:::o;325:26::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;362:46:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1496:103:4:-;1536:14;1569:11;:23;1581:10;1569:23;;;;;;;;;;;;;;;1562:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:103;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;7:126:5:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1133:117::-;1242:1;1239;1232:12;1379:77;1416:7;1445:5;1434:16;;1379:77;;;:::o;1462:122::-;1535:24;1553:5;1535:24;:::i;:::-;1528:5;1525:35;1515:63;;1574:1;1571;1564:12;1515:63;1462:122;:::o;1590:139::-;1636:5;1674:6;1661:20;1652:29;;1690:33;1717:5;1690:33;:::i;:::-;1590:139;;;;:::o;1735:474::-;1803:6;1811;1860:2;1848:9;1839:7;1835:23;1831:32;1828:119;;;1866:79;;:::i;:::-;1828:119;1986:1;2011:53;2056:7;2047:6;2036:9;2032:22;2011:53;:::i;:::-;2001:63;;1957:117;2113:2;2139:53;2184:7;2175:6;2164:9;2160:22;2139:53;:::i;:::-;2129:63;;2084:118;1735:474;;;;;:::o;2215:118::-;2302:24;2320:5;2302:24;:::i;:::-;2297:3;2290:37;2215:118;;:::o;2339:222::-;2432:4;2470:2;2459:9;2455:18;2447:26;;2483:71;2551:1;2540:9;2536:17;2527:6;2483:71;:::i;:::-;2339:222;;;;:::o;2567:96::-;2604:7;2633:24;2651:5;2633:24;:::i;:::-;2622:35;;2567:96;;;:::o;2669:118::-;2756:24;2774:5;2756:24;:::i;:::-;2751:3;2744:37;2669:118;;:::o;2793:222::-;2886:4;2924:2;2913:9;2909:18;2901:26;;2937:71;3005:1;2994:9;2990:17;2981:6;2937:71;:::i;:::-;2793:222;;;;:::o;3021:122::-;3094:24;3112:5;3094:24;:::i;:::-;3087:5;3084:35;3074:63;;3133:1;3130;3123:12;3074:63;3021:122;:::o;3149:139::-;3195:5;3233:6;3220:20;3211:29;;3249:33;3276:5;3249:33;:::i;:::-;3149:139;;;;:::o;3294:474::-;3362:6;3370;3419:2;3407:9;3398:7;3394:23;3390:32;3387:119;;;3425:79;;:::i;:::-;3387:119;3545:1;3570:53;3615:7;3606:6;3595:9;3591:22;3570:53;:::i;:::-;3560:63;;3516:117;3672:2;3698:53;3743:7;3734:6;3723:9;3719:22;3698:53;:::i;:::-;3688:63;;3643:118;3294:474;;;;;:::o;3774:332::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;4027:72;4095:2;4084:9;4080:18;4071:6;4027:72;:::i;:::-;3774:332;;;;;:::o;4112:329::-;4171:6;4220:2;4208:9;4199:7;4195:23;4191:32;4188:119;;;4226:79;;:::i;:::-;4188:119;4346:1;4371:53;4416:7;4407:6;4396:9;4392:22;4371:53;:::i;:::-;4361:63;;4317:117;4112:329;;;;:::o;4447:136::-;4536:6;4570:5;4564:12;4554:22;;4447:136;;;:::o;4589:206::-;4710:11;4744:6;4739:3;4732:19;4784:4;4779:3;4775:14;4760:29;;4589:206;;;;:::o;4801:154::-;4890:4;4913:3;4905:11;;4943:4;4938:3;4934:14;4926:22;;4801:154;;;:::o;4961:108::-;5038:24;5056:5;5038:24;:::i;:::-;5033:3;5026:37;4961:108;;:::o;5143:507::-;5274:4;5269:3;5265:14;5369:4;5362:5;5358:16;5352:23;5388:63;5445:4;5440:3;5436:14;5422:12;5388:63;:::i;:::-;5289:172;5551:4;5544:5;5540:16;5534:23;5570:63;5627:4;5622:3;5618:14;5604:12;5570:63;:::i;:::-;5471:172;5243:407;5143:507;;:::o;5656:267::-;5769:10;5790:90;5876:3;5868:6;5790:90;:::i;:::-;5912:4;5907:3;5903:14;5889:28;;5656:267;;;;:::o;5929:135::-;6021:4;6053;6048:3;6044:14;6036:22;;5929:135;;;:::o;6142:908::-;6305:3;6334:76;6404:5;6334:76;:::i;:::-;6426:108;6527:6;6522:3;6426:108;:::i;:::-;6419:115;;6558:78;6630:5;6558:78;:::i;:::-;6659:7;6690:1;6675:350;6700:6;6697:1;6694:13;6675:350;;;6776:6;6770:13;6803:107;6906:3;6891:13;6803:107;:::i;:::-;6796:114;;6933:82;7008:6;6933:82;:::i;:::-;6923:92;;6735:290;6722:1;6719;6715:9;6710:14;;6675:350;;;6679:14;7041:3;7034:10;;6310:740;;;6142:908;;;;:::o;7056:461::-;7243:4;7281:2;7270:9;7266:18;7258:26;;7330:9;7324:4;7320:20;7316:1;7305:9;7301:17;7294:47;7358:152;7505:4;7496:6;7358:152;:::i;:::-;7350:160;;7056:461;;;;:::o;7523:180::-;7571:77;7568:1;7561:88;7668:4;7665:1;7658:15;7692:4;7689:1;7682:15;7709:180;7757:77;7754:1;7747:88;7854:4;7851:1;7844:15;7878:4;7875:1;7868:15;7895:191;7935:3;7954:20;7972:1;7954:20;:::i;:::-;7949:25;;7988:20;8006:1;7988:20;:::i;:::-;7983:25;;8031:1;8028;8024:9;8017:16;;8052:3;8049:1;8046:10;8043:36;;;8059:18;;:::i;:::-;8043:36;7895:191;;;;:::o;8092:332::-;8213:4;8251:2;8240:9;8236:18;8228:26;;8264:71;8332:1;8321:9;8317:17;8308:6;8264:71;:::i;:::-;8345:72;8413:2;8402:9;8398:18;8389:6;8345:72;:::i;:::-;8092:332;;;;;:::o;8430:90::-;8464:7;8507:5;8500:13;8493:21;8482:32;;8430:90;;;:::o;8526:116::-;8596:21;8611:5;8596:21;:::i;:::-;8589:5;8586:32;8576:60;;8632:1;8629;8622:12;8576:60;8526:116;:::o;8648:137::-;8702:5;8733:6;8727:13;8718:22;;8749:30;8773:5;8749:30;:::i;:::-;8648:137;;;;:::o;8791:345::-;8858:6;8907:2;8895:9;8886:7;8882:23;8878:32;8875:119;;;8913:79;;:::i;:::-;8875:119;9033:1;9058:61;9111:7;9102:6;9091:9;9087:22;9058:61;:::i;:::-;9048:71;;9004:125;8791:345;;;;:::o;9142:169::-;9226:11;9260:6;9255:3;9248:19;9300:4;9295:3;9291:14;9276:29;;9142:169;;;;:::o;9317:165::-;9457:17;9453:1;9445:6;9441:14;9434:41;9317:165;:::o;9488:366::-;9630:3;9651:67;9715:2;9710:3;9651:67;:::i;:::-;9644:74;;9727:93;9816:3;9727:93;:::i;:::-;9845:2;9840:3;9836:12;9829:19;;9488:366;;;:::o;9860:419::-;10026:4;10064:2;10053:9;10049:18;10041:26;;10113:9;10107:4;10103:20;10099:1;10088:9;10084:17;10077:47;10141:131;10267:4;10141:131;:::i;:::-;10133:139;;9860:419;;;:::o;10285:194::-;10325:4;10345:20;10363:1;10345:20;:::i;:::-;10340:25;;10379:20;10397:1;10379:20;:::i;:::-;10374:25;;10423:1;10420;10416:9;10408:17;;10447:1;10441:4;10438:11;10435:37;;;10452:18;;:::i;:::-;10435:37;10285:194;;;;:::o;10485:442::-;10634:4;10672:2;10661:9;10657:18;10649:26;;10685:71;10753:1;10742:9;10738:17;10729:6;10685:71;:::i;:::-;10766:72;10834:2;10823:9;10819:18;10810:6;10766:72;:::i;:::-;10848;10916:2;10905:9;10901:18;10892:6;10848:72;:::i;:::-;10485:442;;;;;;:::o;10933:181::-;11073:33;11069:1;11061:6;11057:14;11050:57;10933:181;:::o;11120:366::-;11262:3;11283:67;11347:2;11342:3;11283:67;:::i;:::-;11276:74;;11359:93;11448:3;11359:93;:::i;:::-;11477:2;11472:3;11468:12;11461:19;;11120:366;;;:::o;11492:419::-;11658:4;11696:2;11685:9;11681:18;11673:26;;11745:9;11739:4;11735:20;11731:1;11720:9;11716:17;11709:47;11773:131;11899:4;11773:131;:::i;:::-;11765:139;;11492:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "818200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getStake()": "infinite",
								"getTotalStake()": "2521",
								"owner()": "2537",
								"renounceOwnership()": "infinite",
								"stake(uint256,uint256)": "infinite",
								"stakingToken()": "infinite",
								"totalStaked()": "2425",
								"transferOwnership(address)": "infinite",
								"userStaking(address,uint256)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 232,
									"end": 2509,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 232,
									"end": 2509,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 232,
									"end": 2509,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 638,
									"end": 737,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 737,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 638,
									"end": 737,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 638,
									"end": 737,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 638,
									"end": 737,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 638,
									"end": 737,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 638,
									"end": 737,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 638,
									"end": 737,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 680,
									"end": 690,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 717,
									"end": 730,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 702,
									"end": 714,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 702,
									"end": 714,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 702,
									"end": 730,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 638,
									"end": 737,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 232,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 232,
									"end": 2509,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1138,
									"end": 1147,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1129,
									"end": 1136,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1121,
									"end": 1153,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1156,
									"end": 1235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1362,
									"end": 1368,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1360,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1347,
									"end": 1369,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1301,
									"end": 1379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1247,
									"end": 1389,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1507,
									"end": 1512,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1489,
									"end": 1513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1487,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1477,
									"end": 1514,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1520,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1619,
									"end": 1623,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1657,
									"end": 1659,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1646,
									"end": 1655,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1660,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1660,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1738,
									"end": 1739,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1727,
									"end": 1736,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1723,
									"end": 1740,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1714,
									"end": 1720,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1670,
									"end": 1741,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 232,
									"end": 2509,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 232,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 232,
									"end": 2509,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 2509,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 232,
									"end": 2509,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 2509,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 2509,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 232,
									"end": 2509,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 2509,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b80ec40c30da7bd963bfe08efaa2ef11a5461c140143fb583d09156cc53f735a64736f6c634300081a0033",
									".code": [
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "817B1CD2"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "817B1CD2"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "90816302"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "FC0E3D90"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "3CCFD60B"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "72F702F3"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "7B0472F0"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "7BC74225"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2509,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 2506,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1704,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1704,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1704,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 2506,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1704,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 2506,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 292,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 747,
											"end": 1490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 747,
											"end": 1490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1605,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1605,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 325,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 325,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 362,
											"end": 408,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 362,
											"end": 408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 362,
											"end": 408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1496,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1496,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 2506,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1704,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1783,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1805,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1783,
											"end": 1806,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1783,
											"end": 1806,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1806,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1783,
											"end": 1806,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1806,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1783,
											"end": 1806,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1806,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1806,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1970,
											"end": 1991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2274,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2006,
											"end": 2274,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2036,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2043,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2043,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2274,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2006,
											"end": 2274,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2096,
											"end": 2097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2077,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2078,
											"end": 2079,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2068,
											"end": 2080,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2068,
											"end": 2093,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2093,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2097,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2130,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2130,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2068,
											"end": 2130,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2130,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2129,
											"end": 2130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2110,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2112,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2101,
											"end": 2113,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2113,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2126,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2126,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2130,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2130,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2068,
											"end": 2130,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2264,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2264,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2064,
											"end": 2264,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2175,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2176,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2166,
											"end": 2178,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2178,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2191,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2191,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2191,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2149,
											"end": 2191,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2191,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2149,
											"end": 2191,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2149,
											"end": 2191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2191,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2249,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2249,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2249,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2249,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2244,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2249,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2249,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2209,
											"end": 2232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2221,
											"end": 2231,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2209,
											"end": 2232,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2209,
											"end": 2232,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2232,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2232,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2209,
											"end": 2232,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2232,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2232,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2232,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2209,
											"end": 2232,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2232,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2209,
											"end": 2235,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2235,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2249,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2264,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2064,
											"end": 2264,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2045,
											"end": 2048,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2045,
											"end": 2048,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2045,
											"end": 2048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2045,
											"end": 2048,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2045,
											"end": 2048,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2045,
											"end": 2048,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2045,
											"end": 2048,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2006,
											"end": 2274,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2274,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2006,
											"end": 2274,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2274,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2307,
											"end": 2319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2319,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2319,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2319,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2307,
											"end": 2319,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2319,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2319,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2307,
											"end": 2319,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2307,
											"end": 2328,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2329,
											"end": 2339,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2341,
											"end": 2354,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2307,
											"end": 2355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2355,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2307,
											"end": 2355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2373,
											"end": 2380,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2365,
											"end": 2400,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2365,
											"end": 2400,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2439,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2411,
											"end": 2422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2439,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2439,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2439,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2439,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2411,
											"end": 2439,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2439,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2439,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2411,
											"end": 2439,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2439,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2411,
											"end": 2439,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2439,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2439,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2439,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2439,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2439,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2439,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2439,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2483,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 2485,
											"end": 2498,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2463,
											"end": 2499,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 2506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 292,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1070,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1070,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1070,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1070,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1070,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1043,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1070,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1070,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1031,
											"end": 1070,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1069,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1060,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1045,
											"end": 1069,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1069,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1045,
											"end": 1069,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1069,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1045,
											"end": 1069,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1070,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1070,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1007,
											"end": 1070,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1224,
											"end": 1247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1246,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1224,
											"end": 1247,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1224,
											"end": 1247,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1247,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1247,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1224,
											"end": 1247,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1247,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1247,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1247,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1224,
											"end": 1247,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1247,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1253,
											"end": 1261,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1262,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1296,
											"end": 1308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1308,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1296,
											"end": 1308,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1308,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1308,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1321,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1322,
											"end": 1332,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1346,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1355,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1296,
											"end": 1356,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1356,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1296,
											"end": 1356,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1296,
											"end": 1356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1356,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1381,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1366,
											"end": 1401,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1366,
											"end": 1401,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1433,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1412,
											"end": 1423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1433,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1433,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1433,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1412,
											"end": 1433,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1433,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1412,
											"end": 1433,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1433,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1412,
											"end": 1433,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1433,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1433,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1433,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1433,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1433,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1433,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1433,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1474,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 1476,
											"end": 1482,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1457,
											"end": 1483,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1483,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 816,
											"end": 1490,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 816,
											"end": 1490,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 747,
											"end": 1490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1657,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1687,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1676,
											"end": 1687,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 408,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 362,
											"end": 408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 362,
											"end": 408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1569,
											"end": 1580,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1591,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 485,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 582,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 582,
											"end": 619,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 569,
											"end": 619,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 569,
											"end": 619,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 631,
											"end": 790,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 631,
											"end": 790,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 732,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 732,
											"end": 783,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 732,
											"end": 783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 720,
											"end": 784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 631,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 918,
											"end": 944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 918,
											"end": 944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 954,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1240,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1434,
											"end": 1450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1434,
											"end": 1450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1553,
											"end": 1558,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1535,
											"end": 1559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1533,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1560,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1576,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1681,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1690,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1809,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1817,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1860,
											"end": 1862,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 1857,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1858,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1863,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1866,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1866,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1945,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1866,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 1987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2056,
											"end": 2063,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2053,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2054,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2011,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 2074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2113,
											"end": 2115,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2184,
											"end": 2191,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2164,
											"end": 2173,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2182,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2139,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2192,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2139,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2192,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2202,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2320,
											"end": 2325,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2302,
											"end": 2326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2300,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2290,
											"end": 2327,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2472,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2468,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2549,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2536,
											"end": 2553,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2533,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2483,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2633,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2657,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2787,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2669,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2756,
											"end": 2780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2780,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2756,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2751,
											"end": 2754,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2781,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2886,
											"end": 2890,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 2922,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2909,
											"end": 2927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 3005,
											"end": 3006,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 3003,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2990,
											"end": 3007,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2937,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 3008,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2937,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3143,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3021,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3112,
											"end": 3117,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3094,
											"end": 3118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3092,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3084,
											"end": 3119,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3074,
											"end": 3137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3133,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3131,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3137,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3074,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3200,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3240,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3240,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 3276,
											"end": 3281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3249,
											"end": 3282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3282,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 3249,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3768,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3294,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3362,
											"end": 3368,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3376,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3421,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3407,
											"end": 3416,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3398,
											"end": 3405,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3417,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3390,
											"end": 3422,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3506,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3387,
											"end": 3506,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3425,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3425,
											"end": 3504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3504,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3425,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3506,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3387,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3615,
											"end": 3622,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3604,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3591,
											"end": 3613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3570,
											"end": 3623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3570,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3623,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3516,
											"end": 3633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3674,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3743,
											"end": 3750,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3740,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3698,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3698,
											"end": 3751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3698,
											"end": 3751,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3698,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3751,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3643,
											"end": 3761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3768,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3768,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3774,
											"end": 4106,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3774,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4027,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 4095,
											"end": 4097,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4093,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4098,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4077,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4027,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4027,
											"end": 4099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4027,
											"end": 4099,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 4027,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3774,
											"end": 4106,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3774,
											"end": 4106,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3774,
											"end": 4106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3774,
											"end": 4106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3774,
											"end": 4106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3774,
											"end": 4106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4441,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4112,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4220,
											"end": 4222,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4208,
											"end": 4217,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4206,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4195,
											"end": 4218,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4191,
											"end": 4223,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4307,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4188,
											"end": 4307,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4226,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4226,
											"end": 4305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4305,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4226,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4307,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4188,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4347,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4371,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 4416,
											"end": 4423,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4407,
											"end": 4413,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4405,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4414,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4371,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4371,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4371,
											"end": 4424,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 4371,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4361,
											"end": 4424,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4361,
											"end": 4424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4317,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4441,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4441,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4441,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4441,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4447,
											"end": 4583,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4447,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4542,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4570,
											"end": 4575,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4564,
											"end": 4576,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4576,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4447,
											"end": 4583,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4447,
											"end": 4583,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4447,
											"end": 4583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4447,
											"end": 4583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4795,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4589,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4710,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4750,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4742,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4732,
											"end": 4751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4784,
											"end": 4788,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4779,
											"end": 4782,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4775,
											"end": 4789,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4760,
											"end": 4789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4760,
											"end": 4789,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4795,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4795,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4801,
											"end": 4955,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4801,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4913,
											"end": 4916,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4905,
											"end": 4916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4905,
											"end": 4916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4947,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4938,
											"end": 4941,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4934,
											"end": 4948,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4926,
											"end": 4948,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4926,
											"end": 4948,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4801,
											"end": 4955,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4801,
											"end": 4955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4801,
											"end": 4955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4801,
											"end": 4955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4961,
											"end": 5069,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4961,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5038,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5056,
											"end": 5061,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5038,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 5038,
											"end": 5062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5038,
											"end": 5062,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5038,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5033,
											"end": 5036,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5026,
											"end": 5063,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4961,
											"end": 5069,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4961,
											"end": 5069,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4961,
											"end": 5069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5143,
											"end": 5650,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5143,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5278,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5269,
											"end": 5272,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5362,
											"end": 5367,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5358,
											"end": 5374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5375,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5388,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5445,
											"end": 5449,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5440,
											"end": 5443,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5436,
											"end": 5450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5388,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 5388,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5388,
											"end": 5451,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5388,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5551,
											"end": 5555,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5544,
											"end": 5549,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5540,
											"end": 5556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5534,
											"end": 5557,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5570,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5627,
											"end": 5631,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5622,
											"end": 5625,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5632,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5604,
											"end": 5616,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5570,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 5570,
											"end": 5633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5570,
											"end": 5633,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5570,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5471,
											"end": 5643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5243,
											"end": 5650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5143,
											"end": 5650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5143,
											"end": 5650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5143,
											"end": 5650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5923,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5656,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5769,
											"end": 5779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5790,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5876,
											"end": 5879,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5868,
											"end": 5874,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5790,
											"end": 5880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5880,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5790,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5916,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5907,
											"end": 5910,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5903,
											"end": 5917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5923,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5923,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5923,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5923,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 6064,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 5929,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6025,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6053,
											"end": 6057,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6048,
											"end": 6051,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6044,
											"end": 6058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 6064,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 6064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 6064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 6064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6142,
											"end": 7050,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6142,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6305,
											"end": 6308,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6334,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 6404,
											"end": 6409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6334,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 6334,
											"end": 6410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6334,
											"end": 6410,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 6334,
											"end": 6410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6525,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 6426,
											"end": 6534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6419,
											"end": 6534,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6419,
											"end": 6534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6558,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 6630,
											"end": 6635,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6558,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6558,
											"end": 6636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6558,
											"end": 6636,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 6558,
											"end": 6636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6659,
											"end": 6666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6690,
											"end": 6691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6675,
											"end": 7025,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 6675,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6700,
											"end": 6706,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6698,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6694,
											"end": 6707,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6675,
											"end": 7025,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6675,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 6675,
											"end": 7025,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6776,
											"end": 6782,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6770,
											"end": 6783,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6803,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 6906,
											"end": 6909,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6891,
											"end": 6904,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6803,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6803,
											"end": 6910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6803,
											"end": 6910,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 6803,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6796,
											"end": 6910,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 6796,
											"end": 6910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6933,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 7008,
											"end": 7014,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6933,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 6933,
											"end": 7015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6933,
											"end": 7015,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 6933,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6923,
											"end": 7015,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6923,
											"end": 7015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6735,
											"end": 7025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6722,
											"end": 6723,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6719,
											"end": 6720,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6715,
											"end": 6724,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6724,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6675,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 6675,
											"end": 7025,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6675,
											"end": 7025,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 6675,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6679,
											"end": 6693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7041,
											"end": 7044,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7044,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6310,
											"end": 7050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6310,
											"end": 7050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6310,
											"end": 7050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6142,
											"end": 7050,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6142,
											"end": 7050,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6142,
											"end": 7050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6142,
											"end": 7050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6142,
											"end": 7050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7056,
											"end": 7517,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 7056,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7243,
											"end": 7247,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7281,
											"end": 7283,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7270,
											"end": 7279,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7258,
											"end": 7284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7258,
											"end": 7284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7339,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7324,
											"end": 7328,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7320,
											"end": 7340,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7316,
											"end": 7317,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7305,
											"end": 7314,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7301,
											"end": 7318,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7294,
											"end": 7341,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7358,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 7505,
											"end": 7509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7502,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7358,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 7358,
											"end": 7510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7358,
											"end": 7510,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 7358,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7510,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7350,
											"end": 7510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7056,
											"end": 7517,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7056,
											"end": 7517,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7056,
											"end": 7517,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7056,
											"end": 7517,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7056,
											"end": 7517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7523,
											"end": 7703,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 7523,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7571,
											"end": 7648,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7568,
											"end": 7569,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7561,
											"end": 7649,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7668,
											"end": 7672,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 7665,
											"end": 7666,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7658,
											"end": 7673,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7692,
											"end": 7696,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7689,
											"end": 7690,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7682,
											"end": 7697,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7709,
											"end": 7889,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 7709,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7757,
											"end": 7834,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7754,
											"end": 7755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7747,
											"end": 7835,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7854,
											"end": 7858,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 7851,
											"end": 7852,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7844,
											"end": 7859,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7875,
											"end": 7876,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7868,
											"end": 7883,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7895,
											"end": 8086,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 7895,
											"end": 8086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7935,
											"end": 7938,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7954,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7972,
											"end": 7973,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 7954,
											"end": 7974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 7974,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7954,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7949,
											"end": 7974,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7949,
											"end": 7974,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7988,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 8006,
											"end": 8007,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7988,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 7988,
											"end": 8008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7988,
											"end": 8008,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 7988,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7983,
											"end": 8008,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7983,
											"end": 8008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8031,
											"end": 8032,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8028,
											"end": 8029,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8024,
											"end": 8033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8017,
											"end": 8033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8052,
											"end": 8055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8049,
											"end": 8050,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8046,
											"end": 8056,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8043,
											"end": 8079,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8043,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 8043,
											"end": 8079,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 8059,
											"end": 8077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8043,
											"end": 8079,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 8043,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7895,
											"end": 8086,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7895,
											"end": 8086,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7895,
											"end": 8086,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7895,
											"end": 8086,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7895,
											"end": 8086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8424,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 8092,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8213,
											"end": 8217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8251,
											"end": 8253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8240,
											"end": 8249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8236,
											"end": 8254,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8228,
											"end": 8254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8228,
											"end": 8254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 8332,
											"end": 8333,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8330,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8317,
											"end": 8334,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8308,
											"end": 8314,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 8264,
											"end": 8335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8335,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 8264,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8345,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 8413,
											"end": 8415,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8402,
											"end": 8411,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8398,
											"end": 8416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8389,
											"end": 8395,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8345,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 8345,
											"end": 8417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8345,
											"end": 8417,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 8345,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8424,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8424,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8430,
											"end": 8520,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 8430,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8464,
											"end": 8471,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8500,
											"end": 8513,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8514,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8430,
											"end": 8520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8430,
											"end": 8520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8430,
											"end": 8520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8430,
											"end": 8520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8526,
											"end": 8642,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 8526,
											"end": 8642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8596,
											"end": 8617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 8611,
											"end": 8616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8596,
											"end": 8617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 8596,
											"end": 8617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8596,
											"end": 8617,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 8596,
											"end": 8617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8589,
											"end": 8594,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8586,
											"end": 8618,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8576,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 8576,
											"end": 8636,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8632,
											"end": 8633,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8629,
											"end": 8630,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8622,
											"end": 8634,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8576,
											"end": 8636,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 8576,
											"end": 8636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8526,
											"end": 8642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8526,
											"end": 8642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8785,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 8648,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8702,
											"end": 8707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8733,
											"end": 8739,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8727,
											"end": 8740,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8718,
											"end": 8740,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8718,
											"end": 8740,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8749,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 8773,
											"end": 8778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8749,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 8749,
											"end": 8779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8749,
											"end": 8779,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 8749,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8785,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8791,
											"end": 9136,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 8791,
											"end": 9136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8858,
											"end": 8864,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8907,
											"end": 8909,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8895,
											"end": 8904,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8886,
											"end": 8893,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8882,
											"end": 8905,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8878,
											"end": 8910,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 8875,
											"end": 8994,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8875,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 8875,
											"end": 8994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8913,
											"end": 8992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 8913,
											"end": 8992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 8913,
											"end": 8992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8913,
											"end": 8992,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 8913,
											"end": 8992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8875,
											"end": 8994,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 8875,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9058,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 9111,
											"end": 9118,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9102,
											"end": 9108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9091,
											"end": 9100,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9087,
											"end": 9109,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9058,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 9058,
											"end": 9119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9058,
											"end": 9119,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 9058,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9048,
											"end": 9119,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9048,
											"end": 9119,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9004,
											"end": 9129,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8791,
											"end": 9136,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8791,
											"end": 9136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8791,
											"end": 9136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8791,
											"end": 9136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8791,
											"end": 9136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9142,
											"end": 9311,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 9142,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9226,
											"end": 9237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9260,
											"end": 9266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9255,
											"end": 9258,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9248,
											"end": 9267,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9300,
											"end": 9304,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9295,
											"end": 9298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9291,
											"end": 9305,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9276,
											"end": 9305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9276,
											"end": 9305,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9142,
											"end": 9311,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9142,
											"end": 9311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9142,
											"end": 9311,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9142,
											"end": 9311,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9142,
											"end": 9311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9317,
											"end": 9482,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 9317,
											"end": 9482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9457,
											"end": 9474,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 9453,
											"end": 9454,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9445,
											"end": 9451,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9441,
											"end": 9455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9434,
											"end": 9475,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9317,
											"end": 9482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9317,
											"end": 9482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9488,
											"end": 9854,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 9488,
											"end": 9854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9630,
											"end": 9633,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9651,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 9715,
											"end": 9717,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 9710,
											"end": 9713,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 9651,
											"end": 9718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9718,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 9651,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9644,
											"end": 9718,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9644,
											"end": 9718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9727,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 9816,
											"end": 9819,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9727,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 9727,
											"end": 9820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9727,
											"end": 9820,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 9727,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9845,
											"end": 9847,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9840,
											"end": 9843,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9848,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9829,
											"end": 9848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9829,
											"end": 9848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9488,
											"end": 9854,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9488,
											"end": 9854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9488,
											"end": 9854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9488,
											"end": 9854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9860,
											"end": 10279,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 9860,
											"end": 10279,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10026,
											"end": 10030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10066,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10053,
											"end": 10062,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10041,
											"end": 10067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10041,
											"end": 10067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 10122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10107,
											"end": 10111,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10099,
											"end": 10100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10088,
											"end": 10097,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10084,
											"end": 10101,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10077,
											"end": 10124,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10141,
											"end": 10272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 10267,
											"end": 10271,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10141,
											"end": 10272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 10141,
											"end": 10272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10141,
											"end": 10272,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 10141,
											"end": 10272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10133,
											"end": 10272,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10133,
											"end": 10272,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9860,
											"end": 10279,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9860,
											"end": 10279,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9860,
											"end": 10279,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9860,
											"end": 10279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10285,
											"end": 10479,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 10285,
											"end": 10479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10325,
											"end": 10329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10345,
											"end": 10365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 10363,
											"end": 10364,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10345,
											"end": 10365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 10345,
											"end": 10365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10345,
											"end": 10365,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 10345,
											"end": 10365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10340,
											"end": 10365,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10340,
											"end": 10365,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10379,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 10397,
											"end": 10398,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10379,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 10379,
											"end": 10399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10379,
											"end": 10399,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 10379,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10374,
											"end": 10399,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10374,
											"end": 10399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10423,
											"end": 10424,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10420,
											"end": 10421,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10416,
											"end": 10425,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10408,
											"end": 10425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10408,
											"end": 10425,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10447,
											"end": 10448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10441,
											"end": 10445,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10449,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10435,
											"end": 10472,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10435,
											"end": 10472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 10435,
											"end": 10472,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 10452,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10435,
											"end": 10472,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 10435,
											"end": 10472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10285,
											"end": 10479,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10285,
											"end": 10479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10285,
											"end": 10479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10285,
											"end": 10479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10285,
											"end": 10479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10485,
											"end": 10927,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 10485,
											"end": 10927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10634,
											"end": 10638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10672,
											"end": 10674,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10661,
											"end": 10670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10657,
											"end": 10675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10649,
											"end": 10675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10649,
											"end": 10675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10685,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 10753,
											"end": 10754,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10742,
											"end": 10751,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10738,
											"end": 10755,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10729,
											"end": 10735,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10685,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 10685,
											"end": 10756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10685,
											"end": 10756,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 10685,
											"end": 10756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10766,
											"end": 10838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 10834,
											"end": 10836,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10823,
											"end": 10832,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10819,
											"end": 10837,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10810,
											"end": 10816,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10766,
											"end": 10838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 10766,
											"end": 10838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10766,
											"end": 10838,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 10766,
											"end": 10838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10848,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 10916,
											"end": 10918,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10905,
											"end": 10914,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10901,
											"end": 10919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10892,
											"end": 10898,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10848,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 10848,
											"end": 10920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10848,
											"end": 10920,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 10848,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10485,
											"end": 10927,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10485,
											"end": 10927,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10485,
											"end": 10927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10485,
											"end": 10927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10485,
											"end": 10927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10485,
											"end": 10927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10485,
											"end": 10927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10933,
											"end": 11114,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 10933,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11106,
											"name": "PUSH",
											"source": 5,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 11069,
											"end": 11070,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11061,
											"end": 11067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11057,
											"end": 11071,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11050,
											"end": 11107,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10933,
											"end": 11114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10933,
											"end": 11114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11120,
											"end": 11486,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 11120,
											"end": 11486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11262,
											"end": 11265,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 11347,
											"end": 11349,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 11342,
											"end": 11345,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11283,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 11283,
											"end": 11350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11283,
											"end": 11350,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 11283,
											"end": 11350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11276,
											"end": 11350,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11276,
											"end": 11350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11359,
											"end": 11452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 11448,
											"end": 11451,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11359,
											"end": 11452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 11359,
											"end": 11452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11359,
											"end": 11452,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 11359,
											"end": 11452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11477,
											"end": 11479,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11472,
											"end": 11475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11468,
											"end": 11480,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11461,
											"end": 11480,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11461,
											"end": 11480,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11120,
											"end": 11486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11120,
											"end": 11486,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11120,
											"end": 11486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11120,
											"end": 11486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11492,
											"end": 11911,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 11492,
											"end": 11911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11658,
											"end": 11662,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11696,
											"end": 11698,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11685,
											"end": 11694,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11681,
											"end": 11699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11673,
											"end": 11699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11673,
											"end": 11699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11745,
											"end": 11754,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11739,
											"end": 11743,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11735,
											"end": 11755,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11731,
											"end": 11732,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11720,
											"end": 11729,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11716,
											"end": 11733,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11709,
											"end": 11756,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11773,
											"end": 11904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 11899,
											"end": 11903,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11773,
											"end": 11904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 11773,
											"end": 11904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11773,
											"end": 11904,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 11773,
											"end": 11904,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11765,
											"end": 11904,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11765,
											"end": 11904,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11492,
											"end": 11911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11492,
											"end": 11911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11492,
											"end": 11911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11492,
											"end": 11911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"stack_contract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getStake()": "fc0e3d90",
							"getTotalStake()": "7bc74225",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stake(uint256,uint256)": "7b0472f0",
							"stakingToken()": "72f702f3",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"userStaking(address,uint256)": "90816302",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawDate\",\"type\":\"uint256\"}],\"internalType\":\"struct StakingContract.Stake[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawDate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"stack_contract.sol\":\"StakingContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"stack_contract.sol\":{\"keccak256\":\"0x2082afddb444d1ec9aa6097df5d236d5ea1ed1138358d638dc3993db2be703fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c424e1df76fba9ceffa45f4546b8fc5d5e34bc1035d4aab9b92da3651cf300b\",\"dweb:/ipfs/QmToz8V84NgP25u6vafqJFGQxwjVkGGWZchPL8hj4JHu4N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "stack_contract.sol:StakingContract",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "stack_contract.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 332,
								"contract": "stack_contract.sol:StakingContract",
								"label": "stakingToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)290"
							},
							{
								"astId": 334,
								"contract": "stack_contract.sol:StakingContract",
								"label": "totalStaked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 340,
								"contract": "stack_contract.sol:StakingContract",
								"label": "userStaking",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_array(t_struct(Stake)345_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Stake)345_storage)dyn_storage": {
								"base": "t_struct(Stake)345_storage",
								"encoding": "dynamic_array",
								"label": "struct StakingContract.Stake[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)290": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(Stake)345_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingContract.Stake[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Stake)345_storage)dyn_storage"
							},
							"t_struct(Stake)345_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.Stake",
								"members": [
									{
										"astId": 342,
										"contract": "stack_contract.sol:StakingContract",
										"label": "stakedAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 344,
										"contract": "stack_contract.sol:StakingContract",
										"label": "withdrawDate",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 321,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 320,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								320
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 224,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 233,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 290,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 290,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 290,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 290,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 290,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 290,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 291,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								224,
								233
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 297,
												"id": 300,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 320,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 307,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 306,
												"id": 309,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 320,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 320,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"stack_contract.sol": {
				"ast": {
					"absolutePath": "stack_contract.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"IERC20": [
							290
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						],
						"StakingContract": [
							542
						]
					},
					"id": 543,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 543,
							"sourceUnit": 291,
							"src": "57:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 543,
							"sourceUnit": 213,
							"src": "114:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 543,
							"sourceUnit": 148,
							"src": "177:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 326,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"260:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "260:15:4"
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "260:15:4"
								},
								{
									"baseName": {
										"id": 328,
										"name": "Ownable",
										"nameLocations": [
											"277:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "277:7:4"
									},
									"id": 329,
									"nodeType": "InheritanceSpecifier",
									"src": "277:7:4"
								}
							],
							"canonicalName": "StakingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 542,
							"linearizedBaseContracts": [
								542,
								147,
								320,
								212
							],
							"name": "StakingContract",
							"nameLocation": "241:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 332,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "306:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 542,
									"src": "292:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$290",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 331,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 330,
											"name": "IERC20",
											"nameLocations": [
												"292:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 290,
											"src": "292:6:4"
										},
										"referencedDeclaration": 290,
										"src": "292:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$290",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 334,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "340:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 542,
									"src": "325:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 333,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "325:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "90816302",
									"id": 340,
									"mutability": "mutable",
									"name": "userStaking",
									"nameLocation": "397:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 542,
									"src": "362:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$345_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct StakingContract.Stake[])"
									},
									"typeName": {
										"id": 339,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 335,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "370:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "362:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$345_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct StakingContract.Stake[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 337,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 336,
													"name": "Stake",
													"nameLocations": [
														"381:5:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 345,
													"src": "381:5:4"
												},
												"referencedDeclaration": 345,
												"src": "381:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$345_storage_ptr",
													"typeString": "struct StakingContract.Stake"
												}
											},
											"id": 338,
											"nodeType": "ArrayTypeName",
											"src": "381:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr",
												"typeString": "struct StakingContract.Stake[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.Stake",
									"id": 345,
									"members": [
										{
											"constant": false,
											"id": 342,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "450:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 345,
											"src": "442:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 341,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "442:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 344,
											"mutability": "mutable",
											"name": "withdrawDate",
											"nameLocation": "484:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 345,
											"src": "476:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 343,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "476:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "426:5:4",
									"nodeType": "StructDefinition",
									"scope": 542,
									"src": "419:89:4",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 351,
									"name": "Staked",
									"nameLocation": "524:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "547:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "531:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "561:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "553:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:38:4"
									},
									"src": "518:51:4"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 357,
									"name": "Withdrawn",
									"nameLocation": "580:9:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "606:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "590:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "620:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "612:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "589:38:4"
									},
									"src": "574:54:4"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "692:45:4",
										"statements": [
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 367,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "702:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 368,
														"name": "_stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "717:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"src": "702:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "702:28:4"
											}
										]
									},
									"id": 372,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 363,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "680:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "684:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "680:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 365,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 362,
												"name": "Ownable",
												"nameLocations": [
													"672:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "672:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "672:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "657:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "650:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$290",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 359,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 358,
														"name": "IERC20",
														"nameLocations": [
															"650:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 290,
														"src": "650:6:4"
													},
													"referencedDeclaration": 290,
													"src": "650:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "649:22:4"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "692:0:4"
									},
									"scope": 542,
									"src": "638:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "816:674:4",
										"statements": [
											{
												"assignments": [
													383
												],
												"declarations": [
													{
														"constant": false,
														"id": 383,
														"mutability": "mutable",
														"name": "newStack",
														"nameLocation": "1020:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 428,
														"src": "1007:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 382,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 381,
																"name": "Stake",
																"nameLocations": [
																	"1007:5:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 345,
																"src": "1007:5:4"
															},
															"referencedDeclaration": 345,
															"src": "1007:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 391,
												"initialValue": {
													"arguments": [
														{
															"id": 385,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "1037:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 386,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1045:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1051:9:4",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1045:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 388,
																"name": "period",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "1063:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1045:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 384,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "1031:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$345_storage_ptr_$",
															"typeString": "type(struct StakingContract.Stake storage pointer)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
														"typeString": "struct StakingContract.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1007:63:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 397,
															"name": "newStack",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "1253:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 392,
																"name": "userStaking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "1224:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$345_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
																}
															},
															"id": 395,
															"indexExpression": {
																"expression": {
																	"id": 393,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1236:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1240:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1236:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1224:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																"typeString": "struct StakingContract.Stake storage ref[] storage ref"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1248:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1224:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr_$_t_struct$_Stake_$345_storage_$returns$__$attached_to$_t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct StakingContract.Stake storage ref[] storage pointer,struct StakingContract.Stake storage ref)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1224:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1224:38:4"
											},
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1286:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 428,
														"src": "1281:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 400,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1281:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 404,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1322:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1326:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1322:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 408,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1342:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$542",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$542",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1334:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 406,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1334:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1334:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 410,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "1349:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 402,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1296:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1309:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 289,
														"src": "1296:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1296:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1281:75:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "1374:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1383:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1366:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1366:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "1366:35:4"
											},
											{
												"expression": {
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 418,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "1412:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 419,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "1427:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1412:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "1412:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 423,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1464:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1468:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1464:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 425,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "1476:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 422,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1457:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1457:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "EmitStatement",
												"src": "1452:31:4"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "nonReentrant",
												"nameLocations": [
													"803:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "803:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "803:12:4"
										}
									],
									"name": "stake",
									"nameLocation": "756:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "770:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "762:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "period",
												"nameLocation": "786:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "778:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:32:4"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:0:4"
									},
									"scope": 542,
									"src": "747:743:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "1552:47:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 436,
														"name": "userStaking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1569:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$345_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
														}
													},
													"id": 439,
													"indexExpression": {
														"expression": {
															"id": 437,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1581:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1585:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1581:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1569:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
														"typeString": "struct StakingContract.Stake storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 435,
												"id": 440,
												"nodeType": "Return",
												"src": "1562:30:4"
											}
										]
									},
									"functionSelector": "fc0e3d90",
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStake",
									"nameLocation": "1505:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1513:2:4"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "1536:14:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct StakingContract.Stake[]"
												},
												"typeName": {
													"baseType": {
														"id": 432,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 431,
															"name": "Stake",
															"nameLocations": [
																"1536:5:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 345,
															"src": "1536:5:4"
														},
														"referencedDeclaration": 345,
														"src": "1536:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$345_storage_ptr",
															"typeString": "struct StakingContract.Stake"
														}
													},
													"id": 433,
													"nodeType": "ArrayTypeName",
													"src": "1536:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr",
														"typeString": "struct StakingContract.Stake[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1535:16:4"
									},
									"scope": 542,
									"src": "1496:103:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "1659:35:4",
										"statements": [
											{
												"expression": {
													"id": 447,
													"name": "totalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "1676:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 446,
												"id": 448,
												"nodeType": "Return",
												"src": "1669:18:4"
											}
										]
									},
									"functionSelector": "7bc74225",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalStake",
									"nameLocation": "1614:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1627:2:4"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "1650:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:9:4"
									},
									"scope": 542,
									"src": "1605:89:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "1746:760:4",
										"statements": [
											{
												"assignments": [
													459
												],
												"declarations": [
													{
														"constant": false,
														"id": 459,
														"mutability": "mutable",
														"name": "userStack",
														"nameLocation": "1771:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "1756:24:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct StakingContract.Stake[]"
														},
														"typeName": {
															"baseType": {
																"id": 457,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 456,
																	"name": "Stake",
																	"nameLocations": [
																		"1756:5:4"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 345,
																	"src": "1756:5:4"
																},
																"referencedDeclaration": 345,
																"src": "1756:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$345_storage_ptr",
																	"typeString": "struct StakingContract.Stake"
																}
															},
															"id": 458,
															"nodeType": "ArrayTypeName",
															"src": "1756:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage_ptr",
																"typeString": "struct StakingContract.Stake[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"baseExpression": {
														"id": 460,
														"name": "userStaking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1783:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$345_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
														}
													},
													"id": 463,
													"indexExpression": {
														"expression": {
															"id": 461,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1795:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1799:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1795:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1783:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
														"typeString": "struct StakingContract.Stake storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1756:50:4"
											},
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "unstackAmount",
														"nameLocation": "1978:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "1970:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1970:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 468,
												"initialValue": {
													"hexValue": "30",
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1994:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1970:25:4"
											},
											{
												"body": {
													"id": 514,
													"nodeType": "Block",
													"src": "2050:224:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 480,
																				"name": "userStack",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 459,
																				"src": "2068:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct StakingContract.Stake memory[] memory"
																				}
																			},
																			"id": 482,
																			"indexExpression": {
																				"id": 481,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 470,
																				"src": "2078:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2068:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																				"typeString": "struct StakingContract.Stake memory"
																			}
																		},
																		"id": 483,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2081:12:4",
																		"memberName": "withdrawDate",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 344,
																		"src": "2068:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2096:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2068:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 486,
																				"name": "userStack",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 459,
																				"src": "2101:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct StakingContract.Stake memory[] memory"
																				}
																			},
																			"id": 488,
																			"indexExpression": {
																				"id": 487,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 470,
																				"src": "2111:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2101:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																				"typeString": "struct StakingContract.Stake memory"
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2114:12:4",
																		"memberName": "stakedAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 342,
																		"src": "2101:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2129:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2101:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2068:62:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 513,
															"nodeType": "IfStatement",
															"src": "2064:200:4",
															"trueBody": {
																"id": 512,
																"nodeType": "Block",
																"src": "2131:133:4",
																"statements": [
																	{
																		"expression": {
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 493,
																				"name": "unstackAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 466,
																				"src": "2149:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 494,
																						"name": "userStack",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 459,
																						"src": "2166:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																							"typeString": "struct StakingContract.Stake memory[] memory"
																						}
																					},
																					"id": 496,
																					"indexExpression": {
																						"id": 495,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 470,
																						"src": "2176:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2166:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																						"typeString": "struct StakingContract.Stake memory"
																					}
																				},
																				"id": 497,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2179:12:4",
																				"memberName": "stakedAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 342,
																				"src": "2166:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2149:42:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 499,
																		"nodeType": "ExpressionStatement",
																		"src": "2149:42:4"
																	},
																	{
																		"expression": {
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 500,
																						"name": "userStaking",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 340,
																						"src": "2209:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$345_storage_$dyn_storage_$",
																							"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
																						}
																					},
																					"id": 504,
																					"indexExpression": {
																						"expression": {
																							"id": 501,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "2221:3:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 502,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2225:6:4",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "2221:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2209:23:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Stake_$345_storage_$dyn_storage",
																						"typeString": "struct StakingContract.Stake storage ref[] storage ref"
																					}
																				},
																				"id": 505,
																				"indexExpression": {
																					"id": 503,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 470,
																					"src": "2233:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2209:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$345_storage",
																					"typeString": "struct StakingContract.Stake storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 507,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2244:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					{
																						"hexValue": "30",
																						"id": 508,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2247:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 506,
																					"name": "Stake",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "2238:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_Stake_$345_storage_ptr_$",
																						"typeString": "type(struct StakingContract.Stake storage pointer)"
																					}
																				},
																				"id": 509,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2238:11:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$345_memory_ptr",
																					"typeString": "struct StakingContract.Stake memory"
																				}
																			},
																			"src": "2209:40:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$345_storage",
																				"typeString": "struct StakingContract.Stake storage ref"
																			}
																		},
																		"id": 511,
																		"nodeType": "ExpressionStatement",
																		"src": "2209:40:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 473,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "2023:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 474,
															"name": "userStack",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "2027:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$345_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct StakingContract.Stake memory[] memory"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2037:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2027:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2023:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 515,
												"initializationExpression": {
													"assignments": [
														470
													],
													"declarations": [
														{
															"constant": false,
															"id": 470,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2016:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 515,
															"src": "2011:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 469,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2011:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 472,
													"initialValue": {
														"hexValue": "30",
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2020:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2011:10:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2045:3:4",
														"subExpression": {
															"id": 477,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "2045:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 479,
													"nodeType": "ExpressionStatement",
													"src": "2045:3:4"
												},
												"nodeType": "ForStatement",
												"src": "2006:268:4"
											},
											{
												"assignments": [
													517
												],
												"declarations": [
													{
														"constant": false,
														"id": 517,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2297:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "2292:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 516,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2292:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 524,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 520,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2329:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2333:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2329:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "unstackAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "2341:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 518,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "2307:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2320:8:4",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "2307:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2307:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2292:63:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "2373:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2382:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2365:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2365:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "2365:35:4"
											},
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 530,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "2411:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 531,
														"name": "unstackAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "2426:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2411:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "2411:28:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 535,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2473:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2477:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2473:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "unstackAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "2485:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 534,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "2463:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2463:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "EmitStatement",
												"src": "2458:41:4"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 453,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 452,
												"name": "nonReentrant",
												"nameLocations": [
													"1733:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1733:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1733:12:4"
										}
									],
									"name": "withdraw",
									"nameLocation": "1713:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1721:2:4"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1746:0:4"
									},
									"scope": 542,
									"src": "1704:802:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 543,
							"src": "232:2277:4",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								351,
								357
							]
						}
					],
					"src": "32:2477:4"
				},
				"id": 4
			}
		}
	}
}