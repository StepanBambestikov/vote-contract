{
	"id": "1305102557c255a5fb0ee17edaa480fc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"stack_contract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ncontract StakingContract is ReentrancyGuard, Ownable {\n\n    IERC20 public stakingToken;\n\n    uint256 public totalStaked;\n    \n    mapping(address => Stake) public userStaking;\n    \n    struct Stake {\n        uint256 stakedAmount;    \n        uint256 withdrawDate;     \n    }\n    \n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    \n    constructor(IERC20 _stakingToken) Ownable(msg.sender) {\n        stakingToken = _stakingToken;\n    }\n    \n    function stake(uint256 amount, uint256 period) external nonReentrant {\n        require(\n            userStaking[msg.sender].stakedAmount == 0 && userStaking[msg.sender].withdrawDate == 0,\n            \"user already has stacking\"\n        );\n        \n        userStaking[msg.sender].stakedAmount = amount;\n        userStaking[msg.sender].withdrawDate = block.timestamp + period;\n        \n        bool success = stakingToken.transferFrom(msg.sender, address(this), amount);\n        require(success, \"Transfer failed\");\n\n        totalStaked += amount;\n        \n        emit Staked(msg.sender, amount);\n    }\n\n    function getStake() public view returns(uint256 stakedAmount, uint256 withdrawDate) {\n        Stake storage userStake = userStaking[msg.sender];\n        return (userStake.stakedAmount, userStake.withdrawDate);\n    }\n\n    function getTotalStake() public view returns(uint256) {\n        return totalStaked;\n    }\n    \n    function withdraw() external nonReentrant {\n        Stake memory userStack = userStaking[msg.sender];\n        require(userStack.stakedAmount > 0, \"Cannot withdraw 0\");\n        require(userStack.withdrawDate <= block.timestamp, \"Too early withdraw!\");\n        \n        bool success = stakingToken.transfer(msg.sender, userStack.stakedAmount);\n        require(success, \"Transfer failed\");\n\n        totalStaked -= userStack.stakedAmount;\n\n        userStaking[msg.sender] = Stake(0, 0);\n        \n        emit Withdrawn(msg.sender, userStack.stakedAmount);\n    }\n\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"stack_contract.sol": {
				"StakingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_stakingToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "withdrawDate",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "period",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userStaking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "withdrawDate",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"stack_contract.sol\":232:2233  contract StakingContract is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"stack_contract.sol\":636:735  constructor(IERC20 _stakingToken) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"stack_contract.sol\":678:688  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"stack_contract.sol\":715:728  _stakingToken */\n  dup1\n    /* \"stack_contract.sol\":700:712  stakingToken */\n  0x02\n  0x00\n    /* \"stack_contract.sol\":700:728  stakingToken = _stakingToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"stack_contract.sol\":636:735  constructor(IERC20 _stakingToken) Ownable(msg.sender) {... */\n  pop\n    /* \"stack_contract.sol\":232:2233  contract StakingContract is ReentrancyGuard, Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_22:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_34\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_21\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_23:\n    /* \"#utility.yul\":771:809   */\n  tag_36\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_22\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_37:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_24:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_39\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_23\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1396   */\ntag_3:\n    /* \"#utility.yul\":1101:1107   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  0x20\n    /* \"#utility.yul\":1138:1147   */\n  dup3\n    /* \"#utility.yul\":1129:1136   */\n  dup5\n    /* \"#utility.yul\":1125:1148   */\n  sub\n    /* \"#utility.yul\":1121:1153   */\n  slt\n    /* \"#utility.yul\":1118:1237   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1156:1235   */\n  tag_42\n  tag_18\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1118:1237   */\ntag_41:\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1301:1379   */\n  tag_43\n    /* \"#utility.yul\":1371:1378   */\n  dup5\n    /* \"#utility.yul\":1362:1368   */\n  dup3\n    /* \"#utility.yul\":1351:1360   */\n  dup6\n    /* \"#utility.yul\":1347:1369   */\n  add\n    /* \"#utility.yul\":1301:1379   */\n  tag_24\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1291:1379   */\n  swap2\n  pop\n    /* \"#utility.yul\":1247:1389   */\n  pop\n    /* \"#utility.yul\":1017:1396   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1402:1520   */\ntag_25:\n    /* \"#utility.yul\":1489:1513   */\n  tag_45\n    /* \"#utility.yul\":1507:1512   */\n  dup2\n    /* \"#utility.yul\":1489:1513   */\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1484:1487   */\n  dup3\n    /* \"#utility.yul\":1477:1514   */\n  mstore\n    /* \"#utility.yul\":1402:1520   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1526:1748   */\ntag_11:\n    /* \"#utility.yul\":1619:1623   */\n  0x00\n    /* \"#utility.yul\":1657:1659   */\n  0x20\n    /* \"#utility.yul\":1646:1655   */\n  dup3\n    /* \"#utility.yul\":1642:1660   */\n  add\n    /* \"#utility.yul\":1634:1660   */\n  swap1\n  pop\n    /* \"#utility.yul\":1670:1741   */\n  tag_47\n    /* \"#utility.yul\":1738:1739   */\n  0x00\n    /* \"#utility.yul\":1727:1736   */\n  dup4\n    /* \"#utility.yul\":1723:1740   */\n  add\n    /* \"#utility.yul\":1714:1720   */\n  dup5\n    /* \"#utility.yul\":1670:1741   */\n  tag_25\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1526:1748   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"stack_contract.sol\":232:2233  contract StakingContract is ReentrancyGuard, Ownable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"stack_contract.sol\":232:2233  contract StakingContract is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x821460f5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfc0e3d90\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7bc74225\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"stack_contract.sol\":1673:2230  function withdraw() external nonReentrant {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"stack_contract.sol\":292:318  IERC20 public stakingToken */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stack_contract.sol\":745:1347  function stake(uint256 amount, uint256 period) external nonReentrant {... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"stack_contract.sol\":1574:1663  function getTotalStake() public view returns(uint256) {... */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stack_contract.sol\":325:351  uint256 public totalStaked */\n    tag_8:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stack_contract.sol\":362:406  mapping(address => Stake) public userStaking */\n    tag_9:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap3\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"stack_contract.sol\":1353:1568  function getStake() public view returns(uint256 stakedAmount, uint256 withdrawDate) {... */\n    tag_12:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap3\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stack_contract.sol\":1673:2230  function withdraw() external nonReentrant {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_50\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_51\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_50:\n        /* \"stack_contract.sol\":1725:1747  Stake memory userStack */\n      0x00\n        /* \"stack_contract.sol\":1750:1761  userStaking */\n      0x04\n        /* \"stack_contract.sol\":1750:1773  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":1762:1772  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1750:1773  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":1725:1773  Stake memory userStack = userStaking[msg.sender] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"stack_contract.sol\":1816:1817  0 */\n      0x00\n        /* \"stack_contract.sol\":1791:1800  userStack */\n      dup2\n        /* \"stack_contract.sol\":1791:1813  userStack.stakedAmount */\n      0x00\n      add\n      mload\n        /* \"stack_contract.sol\":1791:1817  userStack.stakedAmount > 0 */\n      gt\n        /* \"stack_contract.sol\":1783:1839  require(userStack.stakedAmount > 0, \"Cannot withdraw 0\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"stack_contract.sol\":1883:1898  block.timestamp */\n      timestamp\n        /* \"stack_contract.sol\":1857:1866  userStack */\n      dup2\n        /* \"stack_contract.sol\":1857:1879  userStack.withdrawDate */\n      0x20\n      add\n      mload\n        /* \"stack_contract.sol\":1857:1898  userStack.withdrawDate <= block.timestamp */\n      gt\n      iszero\n        /* \"stack_contract.sol\":1849:1922  require(userStack.withdrawDate <= block.timestamp, \"Too early withdraw!\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"stack_contract.sol\":1941:1953  bool success */\n      0x00\n        /* \"stack_contract.sol\":1956:1968  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"stack_contract.sol\":1956:1977  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"stack_contract.sol\":1978:1988  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1990:1999  userStack */\n      dup5\n        /* \"stack_contract.sol\":1990:2012  userStack.stakedAmount */\n      0x00\n      add\n      mload\n        /* \"stack_contract.sol\":1956:2013  stakingToken.transfer(msg.sender, userStack.stakedAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"stack_contract.sol\":1941:2013  bool success = stakingToken.transfer(msg.sender, userStack.stakedAmount) */\n      swap1\n      pop\n        /* \"stack_contract.sol\":2031:2038  success */\n      dup1\n        /* \"stack_contract.sol\":2023:2058  require(success, \"Transfer failed\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"stack_contract.sol\":2084:2093  userStack */\n      dup2\n        /* \"stack_contract.sol\":2084:2106  userStack.stakedAmount */\n      0x00\n      add\n      mload\n        /* \"stack_contract.sol\":2069:2080  totalStaked */\n      0x03\n      0x00\n        /* \"stack_contract.sol\":2069:2106  totalStaked -= userStack.stakedAmount */\n      dup3\n      dup3\n      sload\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stack_contract.sol\":2143:2154  Stake(0, 0) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"stack_contract.sol\":2149:2150  0 */\n      0x00\n        /* \"stack_contract.sol\":2143:2154  Stake(0, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"stack_contract.sol\":2152:2153  0 */\n      0x00\n        /* \"stack_contract.sol\":2143:2154  Stake(0, 0) */\n      dup2\n      mstore\n      pop\n        /* \"stack_contract.sol\":2117:2128  userStaking */\n      0x04\n        /* \"stack_contract.sol\":2117:2140  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":2129:2139  msg.sender */\n      caller\n        /* \"stack_contract.sol\":2117:2140  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":2117:2154  userStaking[msg.sender] = Stake(0, 0) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"stack_contract.sol\":2188:2198  msg.sender */\n      caller\n        /* \"stack_contract.sol\":2178:2223  Withdrawn(msg.sender, userStack.stakedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"stack_contract.sol\":2200:2209  userStack */\n      dup4\n        /* \"stack_contract.sol\":2200:2222  userStack.stakedAmount */\n      0x00\n      add\n      mload\n        /* \"stack_contract.sol\":2178:2223  Withdrawn(msg.sender, userStack.stakedAmount) */\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"stack_contract.sol\":1715:2230  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_71\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_71:\n        /* \"stack_contract.sol\":1673:2230  function withdraw() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"stack_contract.sol\":292:318  IERC20 public stakingToken */\n    tag_19:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"stack_contract.sol\":745:1347  function stake(uint256 amount, uint256 period) external nonReentrant {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_80\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_51\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_80:\n        /* \"stack_contract.sol\":885:886  0 */\n      0x00\n        /* \"stack_contract.sol\":845:856  userStaking */\n      0x04\n        /* \"stack_contract.sol\":845:868  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":857:867  msg.sender */\n      caller\n        /* \"stack_contract.sol\":845:868  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":845:881  userStaking[msg.sender].stakedAmount */\n      0x00\n      add\n      sload\n        /* \"stack_contract.sol\":845:886  userStaking[msg.sender].stakedAmount == 0 */\n      eq\n        /* \"stack_contract.sol\":845:931  userStaking[msg.sender].stakedAmount == 0 && userStaking[msg.sender].withdrawDate == 0 */\n      dup1\n      iszero\n      tag_82\n      jumpi\n      pop\n        /* \"stack_contract.sol\":930:931  0 */\n      0x00\n        /* \"stack_contract.sol\":890:901  userStaking */\n      0x04\n        /* \"stack_contract.sol\":890:913  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":902:912  msg.sender */\n      caller\n        /* \"stack_contract.sol\":890:913  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":890:926  userStaking[msg.sender].withdrawDate */\n      0x01\n      add\n      sload\n        /* \"stack_contract.sol\":890:931  userStaking[msg.sender].withdrawDate == 0 */\n      eq\n        /* \"stack_contract.sol\":845:931  userStaking[msg.sender].stakedAmount == 0 && userStaking[msg.sender].withdrawDate == 0 */\n    tag_82:\n        /* \"stack_contract.sol\":824:982  require(... */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"stack_contract.sol\":1040:1046  amount */\n      dup2\n        /* \"stack_contract.sol\":1001:1012  userStaking */\n      0x04\n        /* \"stack_contract.sol\":1001:1024  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":1013:1023  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1001:1024  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":1001:1037  userStaking[msg.sender].stakedAmount */\n      0x00\n      add\n        /* \"stack_contract.sol\":1001:1046  userStaking[msg.sender].stakedAmount = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stack_contract.sol\":1113:1119  period */\n      dup1\n        /* \"stack_contract.sol\":1095:1110  block.timestamp */\n      timestamp\n        /* \"stack_contract.sol\":1095:1119  block.timestamp + period */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"stack_contract.sol\":1056:1067  userStaking */\n      0x04\n        /* \"stack_contract.sol\":1056:1079  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":1068:1078  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1056:1079  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":1056:1092  userStaking[msg.sender].withdrawDate */\n      0x01\n      add\n        /* \"stack_contract.sol\":1056:1119  userStaking[msg.sender].withdrawDate = block.timestamp + period */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stack_contract.sol\":1138:1150  bool success */\n      0x00\n        /* \"stack_contract.sol\":1153:1165  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"stack_contract.sol\":1153:1178  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"stack_contract.sol\":1179:1189  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1199:1203  this */\n      address\n        /* \"stack_contract.sol\":1206:1212  amount */\n      dup7\n        /* \"stack_contract.sol\":1153:1213  stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_92:\n        /* \"stack_contract.sol\":1138:1213  bool success = stakingToken.transferFrom(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"stack_contract.sol\":1231:1238  success */\n      dup1\n        /* \"stack_contract.sol\":1223:1258  require(success, \"Transfer failed\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_67\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"stack_contract.sol\":1284:1290  amount */\n      dup3\n        /* \"stack_contract.sol\":1269:1280  totalStaked */\n      0x03\n      0x00\n        /* \"stack_contract.sol\":1269:1290  totalStaked += amount */\n      dup3\n      dup3\n      sload\n      tag_95\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_95:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stack_contract.sol\":1321:1331  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1314:1340  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"stack_contract.sol\":1333:1339  amount */\n      dup5\n        /* \"stack_contract.sol\":1314:1340  Staked(msg.sender, amount) */\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"stack_contract.sol\":814:1347  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_97\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_97:\n        /* \"stack_contract.sol\":745:1347  function stake(uint256 amount, uint256 period) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"stack_contract.sol\":1574:1663  function getTotalStake() public view returns(uint256) {... */\n    tag_27:\n        /* \"stack_contract.sol\":1619:1626  uint256 */\n      0x00\n        /* \"stack_contract.sol\":1645:1656  totalStaked */\n      sload(0x03)\n        /* \"stack_contract.sol\":1638:1656  return totalStaked */\n      swap1\n      pop\n        /* \"stack_contract.sol\":1574:1663  function getTotalStake() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"stack_contract.sol\":325:351  uint256 public totalStaked */\n    tag_31:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"stack_contract.sol\":362:406  mapping(address => Stake) public userStaking */\n    tag_36:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"stack_contract.sol\":1353:1568  function getStake() public view returns(uint256 stakedAmount, uint256 withdrawDate) {... */\n    tag_47:\n        /* \"stack_contract.sol\":1393:1413  uint256 stakedAmount */\n      0x00\n        /* \"stack_contract.sol\":1415:1435  uint256 withdrawDate */\n      dup1\n        /* \"stack_contract.sol\":1447:1470  Stake storage userStake */\n      0x00\n        /* \"stack_contract.sol\":1473:1484  userStaking */\n      0x04\n        /* \"stack_contract.sol\":1473:1496  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":1485:1495  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1473:1496  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":1447:1496  Stake storage userStake = userStaking[msg.sender] */\n      swap1\n      pop\n        /* \"stack_contract.sol\":1514:1523  userStake */\n      dup1\n        /* \"stack_contract.sol\":1514:1536  userStake.stakedAmount */\n      0x00\n      add\n      sload\n        /* \"stack_contract.sol\":1538:1547  userStake */\n      dup2\n        /* \"stack_contract.sol\":1538:1560  userStake.withdrawDate */\n      0x01\n      add\n      sload\n        /* \"stack_contract.sol\":1506:1561  return (userStake.stakedAmount, userStake.withdrawDate) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"stack_contract.sol\":1353:1568  function getStake() public view returns(uint256 stakedAmount, uint256 withdrawDate) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_121:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_122:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_123:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_157\n        /* \"#utility.yul\":306:340   */\n      tag_158\n        /* \"#utility.yul\":315:339   */\n      tag_159\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_121\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":306:340   */\n      tag_122\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":288:341   */\n      tag_121\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_124:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_161\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_123\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:625   */\n    tag_125:\n        /* \"#utility.yul\":549:558   */\n      0x00\n        /* \"#utility.yul\":582:619   */\n      tag_163\n        /* \"#utility.yul\":613:618   */\n      dup3\n        /* \"#utility.yul\":582:619   */\n      tag_124\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":569:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:790   */\n    tag_126:\n        /* \"#utility.yul\":732:783   */\n      tag_165\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":732:783   */\n      tag_125\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":727:730   */\n      dup3\n        /* \"#utility.yul\":720:784   */\n      mstore\n        /* \"#utility.yul\":631:790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1046   */\n    tag_21:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":930:939   */\n      dup3\n        /* \"#utility.yul\":926:944   */\n      add\n        /* \"#utility.yul\":918:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1039   */\n      tag_167\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1025:1034   */\n      dup4\n        /* \"#utility.yul\":1021:1038   */\n      add\n        /* \"#utility.yul\":1012:1018   */\n      dup5\n        /* \"#utility.yul\":954:1039   */\n      tag_126\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":796:1046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1133:1250   */\n    tag_128:\n        /* \"#utility.yul\":1242:1243   */\n      0x00\n        /* \"#utility.yul\":1239:1240   */\n      dup1\n        /* \"#utility.yul\":1232:1244   */\n      revert\n        /* \"#utility.yul\":1379:1456   */\n    tag_130:\n        /* \"#utility.yul\":1416:1423   */\n      0x00\n        /* \"#utility.yul\":1445:1450   */\n      dup2\n        /* \"#utility.yul\":1434:1450   */\n      swap1\n      pop\n        /* \"#utility.yul\":1379:1456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1462:1584   */\n    tag_131:\n        /* \"#utility.yul\":1535:1559   */\n      tag_173\n        /* \"#utility.yul\":1553:1558   */\n      dup2\n        /* \"#utility.yul\":1535:1559   */\n      tag_130\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1528:1533   */\n      dup2\n        /* \"#utility.yul\":1525:1560   */\n      eq\n        /* \"#utility.yul\":1515:1578   */\n      tag_174\n      jumpi\n        /* \"#utility.yul\":1574:1575   */\n      0x00\n        /* \"#utility.yul\":1571:1572   */\n      dup1\n        /* \"#utility.yul\":1564:1576   */\n      revert\n        /* \"#utility.yul\":1515:1578   */\n    tag_174:\n        /* \"#utility.yul\":1462:1584   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1590:1729   */\n    tag_132:\n        /* \"#utility.yul\":1636:1641   */\n      0x00\n        /* \"#utility.yul\":1674:1680   */\n      dup2\n        /* \"#utility.yul\":1661:1681   */\n      calldataload\n        /* \"#utility.yul\":1652:1681   */\n      swap1\n      pop\n        /* \"#utility.yul\":1690:1723   */\n      tag_176\n        /* \"#utility.yul\":1717:1722   */\n      dup2\n        /* \"#utility.yul\":1690:1723   */\n      tag_131\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1590:1729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:2209   */\n    tag_24:\n        /* \"#utility.yul\":1803:1809   */\n      0x00\n        /* \"#utility.yul\":1811:1817   */\n      dup1\n        /* \"#utility.yul\":1860:1862   */\n      0x40\n        /* \"#utility.yul\":1848:1857   */\n      dup4\n        /* \"#utility.yul\":1839:1846   */\n      dup6\n        /* \"#utility.yul\":1835:1858   */\n      sub\n        /* \"#utility.yul\":1831:1863   */\n      slt\n        /* \"#utility.yul\":1828:1947   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":1866:1945   */\n      tag_179\n      tag_128\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1828:1947   */\n    tag_178:\n        /* \"#utility.yul\":1986:1987   */\n      0x00\n        /* \"#utility.yul\":2011:2064   */\n      tag_180\n        /* \"#utility.yul\":2056:2063   */\n      dup6\n        /* \"#utility.yul\":2047:2053   */\n      dup3\n        /* \"#utility.yul\":2036:2045   */\n      dup7\n        /* \"#utility.yul\":2032:2054   */\n      add\n        /* \"#utility.yul\":2011:2064   */\n      tag_132\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2001:2064   */\n      swap3\n      pop\n        /* \"#utility.yul\":1957:2074   */\n      pop\n        /* \"#utility.yul\":2113:2115   */\n      0x20\n        /* \"#utility.yul\":2139:2192   */\n      tag_181\n        /* \"#utility.yul\":2184:2191   */\n      dup6\n        /* \"#utility.yul\":2175:2181   */\n      dup3\n        /* \"#utility.yul\":2164:2173   */\n      dup7\n        /* \"#utility.yul\":2160:2182   */\n      add\n        /* \"#utility.yul\":2139:2192   */\n      tag_132\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2129:2192   */\n      swap2\n      pop\n        /* \"#utility.yul\":2084:2202   */\n      pop\n        /* \"#utility.yul\":1735:2209   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2215:2333   */\n    tag_133:\n        /* \"#utility.yul\":2302:2326   */\n      tag_183\n        /* \"#utility.yul\":2320:2325   */\n      dup2\n        /* \"#utility.yul\":2302:2326   */\n      tag_130\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2297:2300   */\n      dup3\n        /* \"#utility.yul\":2290:2327   */\n      mstore\n        /* \"#utility.yul\":2215:2333   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2339:2561   */\n    tag_29:\n        /* \"#utility.yul\":2432:2436   */\n      0x00\n        /* \"#utility.yul\":2470:2472   */\n      0x20\n        /* \"#utility.yul\":2459:2468   */\n      dup3\n        /* \"#utility.yul\":2455:2473   */\n      add\n        /* \"#utility.yul\":2447:2473   */\n      swap1\n      pop\n        /* \"#utility.yul\":2483:2554   */\n      tag_185\n        /* \"#utility.yul\":2551:2552   */\n      0x00\n        /* \"#utility.yul\":2540:2549   */\n      dup4\n        /* \"#utility.yul\":2536:2553   */\n      add\n        /* \"#utility.yul\":2527:2533   */\n      dup5\n        /* \"#utility.yul\":2483:2554   */\n      tag_133\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2339:2561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2663   */\n    tag_134:\n        /* \"#utility.yul\":2604:2611   */\n      0x00\n        /* \"#utility.yul\":2633:2657   */\n      tag_187\n        /* \"#utility.yul\":2651:2656   */\n      dup3\n        /* \"#utility.yul\":2633:2657   */\n      tag_121\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2622:2657   */\n      swap1\n      pop\n        /* \"#utility.yul\":2567:2663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2669:2791   */\n    tag_135:\n        /* \"#utility.yul\":2742:2766   */\n      tag_189\n        /* \"#utility.yul\":2760:2765   */\n      dup2\n        /* \"#utility.yul\":2742:2766   */\n      tag_134\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2735:2740   */\n      dup2\n        /* \"#utility.yul\":2732:2767   */\n      eq\n        /* \"#utility.yul\":2722:2785   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":2781:2782   */\n      0x00\n        /* \"#utility.yul\":2778:2779   */\n      dup1\n        /* \"#utility.yul\":2771:2783   */\n      revert\n        /* \"#utility.yul\":2722:2785   */\n    tag_190:\n        /* \"#utility.yul\":2669:2791   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2797:2936   */\n    tag_136:\n        /* \"#utility.yul\":2843:2848   */\n      0x00\n        /* \"#utility.yul\":2881:2887   */\n      dup2\n        /* \"#utility.yul\":2868:2888   */\n      calldataload\n        /* \"#utility.yul\":2859:2888   */\n      swap1\n      pop\n        /* \"#utility.yul\":2897:2930   */\n      tag_192\n        /* \"#utility.yul\":2924:2929   */\n      dup2\n        /* \"#utility.yul\":2897:2930   */\n      tag_135\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2797:2936   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2942:3271   */\n    tag_35:\n        /* \"#utility.yul\":3001:3007   */\n      0x00\n        /* \"#utility.yul\":3050:3052   */\n      0x20\n        /* \"#utility.yul\":3038:3047   */\n      dup3\n        /* \"#utility.yul\":3029:3036   */\n      dup5\n        /* \"#utility.yul\":3025:3048   */\n      sub\n        /* \"#utility.yul\":3021:3053   */\n      slt\n        /* \"#utility.yul\":3018:3137   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":3056:3135   */\n      tag_195\n      tag_128\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3018:3137   */\n    tag_194:\n        /* \"#utility.yul\":3176:3177   */\n      0x00\n        /* \"#utility.yul\":3201:3254   */\n      tag_196\n        /* \"#utility.yul\":3246:3253   */\n      dup5\n        /* \"#utility.yul\":3237:3243   */\n      dup3\n        /* \"#utility.yul\":3226:3235   */\n      dup6\n        /* \"#utility.yul\":3222:3244   */\n      add\n        /* \"#utility.yul\":3201:3254   */\n      tag_136\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3191:3254   */\n      swap2\n      pop\n        /* \"#utility.yul\":3147:3264   */\n      pop\n        /* \"#utility.yul\":2942:3271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3277:3609   */\n    tag_38:\n        /* \"#utility.yul\":3398:3402   */\n      0x00\n        /* \"#utility.yul\":3436:3438   */\n      0x40\n        /* \"#utility.yul\":3425:3434   */\n      dup3\n        /* \"#utility.yul\":3421:3439   */\n      add\n        /* \"#utility.yul\":3413:3439   */\n      swap1\n      pop\n        /* \"#utility.yul\":3449:3520   */\n      tag_198\n        /* \"#utility.yul\":3517:3518   */\n      0x00\n        /* \"#utility.yul\":3506:3515   */\n      dup4\n        /* \"#utility.yul\":3502:3519   */\n      add\n        /* \"#utility.yul\":3493:3499   */\n      dup6\n        /* \"#utility.yul\":3449:3520   */\n      tag_133\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3530:3602   */\n      tag_199\n        /* \"#utility.yul\":3598:3600   */\n      0x20\n        /* \"#utility.yul\":3587:3596   */\n      dup4\n        /* \"#utility.yul\":3583:3601   */\n      add\n        /* \"#utility.yul\":3574:3580   */\n      dup5\n        /* \"#utility.yul\":3530:3602   */\n      tag_133\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3277:3609   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3615:3733   */\n    tag_137:\n        /* \"#utility.yul\":3702:3726   */\n      tag_201\n        /* \"#utility.yul\":3720:3725   */\n      dup2\n        /* \"#utility.yul\":3702:3726   */\n      tag_134\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3697:3700   */\n      dup3\n        /* \"#utility.yul\":3690:3727   */\n      mstore\n        /* \"#utility.yul\":3615:3733   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3739:3961   */\n    tag_42:\n        /* \"#utility.yul\":3832:3836   */\n      0x00\n        /* \"#utility.yul\":3870:3872   */\n      0x20\n        /* \"#utility.yul\":3859:3868   */\n      dup3\n        /* \"#utility.yul\":3855:3873   */\n      add\n        /* \"#utility.yul\":3847:3873   */\n      swap1\n      pop\n        /* \"#utility.yul\":3883:3954   */\n      tag_203\n        /* \"#utility.yul\":3951:3952   */\n      0x00\n        /* \"#utility.yul\":3940:3949   */\n      dup4\n        /* \"#utility.yul\":3936:3953   */\n      add\n        /* \"#utility.yul\":3927:3933   */\n      dup5\n        /* \"#utility.yul\":3883:3954   */\n      tag_137\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3739:3961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3967:4136   */\n    tag_138:\n        /* \"#utility.yul\":4051:4062   */\n      0x00\n        /* \"#utility.yul\":4085:4091   */\n      dup3\n        /* \"#utility.yul\":4080:4083   */\n      dup3\n        /* \"#utility.yul\":4073:4092   */\n      mstore\n        /* \"#utility.yul\":4125:4129   */\n      0x20\n        /* \"#utility.yul\":4120:4123   */\n      dup3\n        /* \"#utility.yul\":4116:4130   */\n      add\n        /* \"#utility.yul\":4101:4130   */\n      swap1\n      pop\n        /* \"#utility.yul\":3967:4136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4142:4309   */\n    tag_139:\n        /* \"#utility.yul\":4282:4301   */\n      0x43616e6e6f742077697468647261772030000000000000000000000000000000\n        /* \"#utility.yul\":4278:4279   */\n      0x00\n        /* \"#utility.yul\":4270:4276   */\n      dup3\n        /* \"#utility.yul\":4266:4280   */\n      add\n        /* \"#utility.yul\":4259:4302   */\n      mstore\n        /* \"#utility.yul\":4142:4309   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4315:4681   */\n    tag_140:\n        /* \"#utility.yul\":4457:4460   */\n      0x00\n        /* \"#utility.yul\":4478:4545   */\n      tag_207\n        /* \"#utility.yul\":4542:4544   */\n      0x11\n        /* \"#utility.yul\":4537:4540   */\n      dup4\n        /* \"#utility.yul\":4478:4545   */\n      tag_138\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4471:4545   */\n      swap2\n      pop\n        /* \"#utility.yul\":4554:4647   */\n      tag_208\n        /* \"#utility.yul\":4643:4646   */\n      dup3\n        /* \"#utility.yul\":4554:4647   */\n      tag_139\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4672:4674   */\n      0x20\n        /* \"#utility.yul\":4667:4670   */\n      dup3\n        /* \"#utility.yul\":4663:4675   */\n      add\n        /* \"#utility.yul\":4656:4675   */\n      swap1\n      pop\n        /* \"#utility.yul\":4315:4681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4687:5106   */\n    tag_55:\n        /* \"#utility.yul\":4853:4857   */\n      0x00\n        /* \"#utility.yul\":4891:4893   */\n      0x20\n        /* \"#utility.yul\":4880:4889   */\n      dup3\n        /* \"#utility.yul\":4876:4894   */\n      add\n        /* \"#utility.yul\":4868:4894   */\n      swap1\n      pop\n        /* \"#utility.yul\":4940:4949   */\n      dup2\n        /* \"#utility.yul\":4934:4938   */\n      dup2\n        /* \"#utility.yul\":4930:4950   */\n      sub\n        /* \"#utility.yul\":4926:4927   */\n      0x00\n        /* \"#utility.yul\":4915:4924   */\n      dup4\n        /* \"#utility.yul\":4911:4928   */\n      add\n        /* \"#utility.yul\":4904:4951   */\n      mstore\n        /* \"#utility.yul\":4968:5099   */\n      tag_210\n        /* \"#utility.yul\":5094:5098   */\n      dup2\n        /* \"#utility.yul\":4968:5099   */\n      tag_140\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4960:5099   */\n      swap1\n      pop\n        /* \"#utility.yul\":4687:5106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5112:5281   */\n    tag_141:\n        /* \"#utility.yul\":5252:5273   */\n      0x546f6f206561726c792077697468647261772100000000000000000000000000\n        /* \"#utility.yul\":5248:5249   */\n      0x00\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5236:5250   */\n      add\n        /* \"#utility.yul\":5229:5274   */\n      mstore\n        /* \"#utility.yul\":5112:5281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5287:5653   */\n    tag_142:\n        /* \"#utility.yul\":5429:5432   */\n      0x00\n        /* \"#utility.yul\":5450:5517   */\n      tag_213\n        /* \"#utility.yul\":5514:5516   */\n      0x13\n        /* \"#utility.yul\":5509:5512   */\n      dup4\n        /* \"#utility.yul\":5450:5517   */\n      tag_138\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5443:5517   */\n      swap2\n      pop\n        /* \"#utility.yul\":5526:5619   */\n      tag_214\n        /* \"#utility.yul\":5615:5618   */\n      dup3\n        /* \"#utility.yul\":5526:5619   */\n      tag_141\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5644:5646   */\n      0x20\n        /* \"#utility.yul\":5639:5642   */\n      dup3\n        /* \"#utility.yul\":5635:5647   */\n      add\n        /* \"#utility.yul\":5628:5647   */\n      swap1\n      pop\n        /* \"#utility.yul\":5287:5653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5659:6078   */\n    tag_58:\n        /* \"#utility.yul\":5825:5829   */\n      0x00\n        /* \"#utility.yul\":5863:5865   */\n      0x20\n        /* \"#utility.yul\":5852:5861   */\n      dup3\n        /* \"#utility.yul\":5848:5866   */\n      add\n        /* \"#utility.yul\":5840:5866   */\n      swap1\n      pop\n        /* \"#utility.yul\":5912:5921   */\n      dup2\n        /* \"#utility.yul\":5906:5910   */\n      dup2\n        /* \"#utility.yul\":5902:5922   */\n      sub\n        /* \"#utility.yul\":5898:5899   */\n      0x00\n        /* \"#utility.yul\":5887:5896   */\n      dup4\n        /* \"#utility.yul\":5883:5900   */\n      add\n        /* \"#utility.yul\":5876:5923   */\n      mstore\n        /* \"#utility.yul\":5940:6071   */\n      tag_216\n        /* \"#utility.yul\":6066:6070   */\n      dup2\n        /* \"#utility.yul\":5940:6071   */\n      tag_142\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5932:6071   */\n      swap1\n      pop\n        /* \"#utility.yul\":5659:6078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6084:6416   */\n    tag_60:\n        /* \"#utility.yul\":6205:6209   */\n      0x00\n        /* \"#utility.yul\":6243:6245   */\n      0x40\n        /* \"#utility.yul\":6232:6241   */\n      dup3\n        /* \"#utility.yul\":6228:6246   */\n      add\n        /* \"#utility.yul\":6220:6246   */\n      swap1\n      pop\n        /* \"#utility.yul\":6256:6327   */\n      tag_218\n        /* \"#utility.yul\":6324:6325   */\n      0x00\n        /* \"#utility.yul\":6313:6322   */\n      dup4\n        /* \"#utility.yul\":6309:6326   */\n      add\n        /* \"#utility.yul\":6300:6306   */\n      dup6\n        /* \"#utility.yul\":6256:6327   */\n      tag_137\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6337:6409   */\n      tag_219\n        /* \"#utility.yul\":6405:6407   */\n      0x20\n        /* \"#utility.yul\":6394:6403   */\n      dup4\n        /* \"#utility.yul\":6390:6408   */\n      add\n        /* \"#utility.yul\":6381:6387   */\n      dup5\n        /* \"#utility.yul\":6337:6409   */\n      tag_133\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6084:6416   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6422:6512   */\n    tag_143:\n        /* \"#utility.yul\":6456:6463   */\n      0x00\n        /* \"#utility.yul\":6499:6504   */\n      dup2\n        /* \"#utility.yul\":6492:6505   */\n      iszero\n        /* \"#utility.yul\":6485:6506   */\n      iszero\n        /* \"#utility.yul\":6474:6506   */\n      swap1\n      pop\n        /* \"#utility.yul\":6422:6512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6518:6634   */\n    tag_144:\n        /* \"#utility.yul\":6588:6609   */\n      tag_222\n        /* \"#utility.yul\":6603:6608   */\n      dup2\n        /* \"#utility.yul\":6588:6609   */\n      tag_143\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6581:6586   */\n      dup2\n        /* \"#utility.yul\":6578:6610   */\n      eq\n        /* \"#utility.yul\":6568:6628   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":6624:6625   */\n      0x00\n        /* \"#utility.yul\":6621:6622   */\n      dup1\n        /* \"#utility.yul\":6614:6626   */\n      revert\n        /* \"#utility.yul\":6568:6628   */\n    tag_223:\n        /* \"#utility.yul\":6518:6634   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6640:6777   */\n    tag_145:\n        /* \"#utility.yul\":6694:6699   */\n      0x00\n        /* \"#utility.yul\":6725:6731   */\n      dup2\n        /* \"#utility.yul\":6719:6732   */\n      mload\n        /* \"#utility.yul\":6710:6732   */\n      swap1\n      pop\n        /* \"#utility.yul\":6741:6771   */\n      tag_225\n        /* \"#utility.yul\":6765:6770   */\n      dup2\n        /* \"#utility.yul\":6741:6771   */\n      tag_144\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6640:6777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6783:7128   */\n    tag_64:\n        /* \"#utility.yul\":6850:6856   */\n      0x00\n        /* \"#utility.yul\":6899:6901   */\n      0x20\n        /* \"#utility.yul\":6887:6896   */\n      dup3\n        /* \"#utility.yul\":6878:6885   */\n      dup5\n        /* \"#utility.yul\":6874:6897   */\n      sub\n        /* \"#utility.yul\":6870:6902   */\n      slt\n        /* \"#utility.yul\":6867:6986   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":6905:6984   */\n      tag_228\n      tag_128\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6867:6986   */\n    tag_227:\n        /* \"#utility.yul\":7025:7026   */\n      0x00\n        /* \"#utility.yul\":7050:7111   */\n      tag_229\n        /* \"#utility.yul\":7103:7110   */\n      dup5\n        /* \"#utility.yul\":7094:7100   */\n      dup3\n        /* \"#utility.yul\":7083:7092   */\n      dup6\n        /* \"#utility.yul\":7079:7101   */\n      add\n        /* \"#utility.yul\":7050:7111   */\n      tag_145\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":7040:7111   */\n      swap2\n      pop\n        /* \"#utility.yul\":6996:7121   */\n      pop\n        /* \"#utility.yul\":6783:7128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7134:7299   */\n    tag_146:\n        /* \"#utility.yul\":7274:7291   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":7270:7271   */\n      0x00\n        /* \"#utility.yul\":7262:7268   */\n      dup3\n        /* \"#utility.yul\":7258:7272   */\n      add\n        /* \"#utility.yul\":7251:7292   */\n      mstore\n        /* \"#utility.yul\":7134:7299   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7305:7671   */\n    tag_147:\n        /* \"#utility.yul\":7447:7450   */\n      0x00\n        /* \"#utility.yul\":7468:7535   */\n      tag_232\n        /* \"#utility.yul\":7532:7534   */\n      0x0f\n        /* \"#utility.yul\":7527:7530   */\n      dup4\n        /* \"#utility.yul\":7468:7535   */\n      tag_138\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":7461:7535   */\n      swap2\n      pop\n        /* \"#utility.yul\":7544:7637   */\n      tag_233\n        /* \"#utility.yul\":7633:7636   */\n      dup3\n        /* \"#utility.yul\":7544:7637   */\n      tag_146\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":7662:7664   */\n      0x20\n        /* \"#utility.yul\":7657:7660   */\n      dup3\n        /* \"#utility.yul\":7653:7665   */\n      add\n        /* \"#utility.yul\":7646:7665   */\n      swap1\n      pop\n        /* \"#utility.yul\":7305:7671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7677:8096   */\n    tag_67:\n        /* \"#utility.yul\":7843:7847   */\n      0x00\n        /* \"#utility.yul\":7881:7883   */\n      0x20\n        /* \"#utility.yul\":7870:7879   */\n      dup3\n        /* \"#utility.yul\":7866:7884   */\n      add\n        /* \"#utility.yul\":7858:7884   */\n      swap1\n      pop\n        /* \"#utility.yul\":7930:7939   */\n      dup2\n        /* \"#utility.yul\":7924:7928   */\n      dup2\n        /* \"#utility.yul\":7920:7940   */\n      sub\n        /* \"#utility.yul\":7916:7917   */\n      0x00\n        /* \"#utility.yul\":7905:7914   */\n      dup4\n        /* \"#utility.yul\":7901:7918   */\n      add\n        /* \"#utility.yul\":7894:7941   */\n      mstore\n        /* \"#utility.yul\":7958:8089   */\n      tag_235\n        /* \"#utility.yul\":8084:8088   */\n      dup2\n        /* \"#utility.yul\":7958:8089   */\n      tag_147\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7950:8089   */\n      swap1\n      pop\n        /* \"#utility.yul\":7677:8096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8102:8282   */\n    tag_148:\n        /* \"#utility.yul\":8150:8227   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8147:8148   */\n      0x00\n        /* \"#utility.yul\":8140:8228   */\n      mstore\n        /* \"#utility.yul\":8247:8251   */\n      0x11\n        /* \"#utility.yul\":8244:8245   */\n      0x04\n        /* \"#utility.yul\":8237:8252   */\n      mstore\n        /* \"#utility.yul\":8271:8275   */\n      0x24\n        /* \"#utility.yul\":8268:8269   */\n      0x00\n        /* \"#utility.yul\":8261:8276   */\n      revert\n        /* \"#utility.yul\":8288:8482   */\n    tag_69:\n        /* \"#utility.yul\":8328:8332   */\n      0x00\n        /* \"#utility.yul\":8348:8368   */\n      tag_238\n        /* \"#utility.yul\":8366:8367   */\n      dup3\n        /* \"#utility.yul\":8348:8368   */\n      tag_130\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":8343:8368   */\n      swap2\n      pop\n        /* \"#utility.yul\":8382:8402   */\n      tag_239\n        /* \"#utility.yul\":8400:8401   */\n      dup4\n        /* \"#utility.yul\":8382:8402   */\n      tag_130\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8377:8402   */\n      swap3\n      pop\n        /* \"#utility.yul\":8426:8427   */\n      dup3\n        /* \"#utility.yul\":8423:8424   */\n      dup3\n        /* \"#utility.yul\":8419:8428   */\n      sub\n        /* \"#utility.yul\":8411:8428   */\n      swap1\n      pop\n        /* \"#utility.yul\":8450:8451   */\n      dup2\n        /* \"#utility.yul\":8444:8448   */\n      dup2\n        /* \"#utility.yul\":8441:8452   */\n      gt\n        /* \"#utility.yul\":8438:8475   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":8455:8473   */\n      tag_241\n      tag_148\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":8438:8475   */\n    tag_240:\n        /* \"#utility.yul\":8288:8482   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8488:8663   */\n    tag_149:\n        /* \"#utility.yul\":8628:8655   */\n      0x7573657220616c72656164792068617320737461636b696e6700000000000000\n        /* \"#utility.yul\":8624:8625   */\n      0x00\n        /* \"#utility.yul\":8616:8622   */\n      dup3\n        /* \"#utility.yul\":8612:8626   */\n      add\n        /* \"#utility.yul\":8605:8656   */\n      mstore\n        /* \"#utility.yul\":8488:8663   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8669:9035   */\n    tag_150:\n        /* \"#utility.yul\":8811:8814   */\n      0x00\n        /* \"#utility.yul\":8832:8899   */\n      tag_244\n        /* \"#utility.yul\":8896:8898   */\n      0x19\n        /* \"#utility.yul\":8891:8894   */\n      dup4\n        /* \"#utility.yul\":8832:8899   */\n      tag_138\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8825:8899   */\n      swap2\n      pop\n        /* \"#utility.yul\":8908:9001   */\n      tag_245\n        /* \"#utility.yul\":8997:9000   */\n      dup3\n        /* \"#utility.yul\":8908:9001   */\n      tag_149\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":9026:9028   */\n      0x20\n        /* \"#utility.yul\":9021:9024   */\n      dup3\n        /* \"#utility.yul\":9017:9029   */\n      add\n        /* \"#utility.yul\":9010:9029   */\n      swap1\n      pop\n        /* \"#utility.yul\":8669:9035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9041:9460   */\n    tag_85:\n        /* \"#utility.yul\":9207:9211   */\n      0x00\n        /* \"#utility.yul\":9245:9247   */\n      0x20\n        /* \"#utility.yul\":9234:9243   */\n      dup3\n        /* \"#utility.yul\":9230:9248   */\n      add\n        /* \"#utility.yul\":9222:9248   */\n      swap1\n      pop\n        /* \"#utility.yul\":9294:9303   */\n      dup2\n        /* \"#utility.yul\":9288:9292   */\n      dup2\n        /* \"#utility.yul\":9284:9304   */\n      sub\n        /* \"#utility.yul\":9280:9281   */\n      0x00\n        /* \"#utility.yul\":9269:9278   */\n      dup4\n        /* \"#utility.yul\":9265:9282   */\n      add\n        /* \"#utility.yul\":9258:9305   */\n      mstore\n        /* \"#utility.yul\":9322:9453   */\n      tag_247\n        /* \"#utility.yul\":9448:9452   */\n      dup2\n        /* \"#utility.yul\":9322:9453   */\n      tag_150\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":9314:9453   */\n      swap1\n      pop\n        /* \"#utility.yul\":9041:9460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9466:9657   */\n    tag_87:\n        /* \"#utility.yul\":9506:9509   */\n      0x00\n        /* \"#utility.yul\":9525:9545   */\n      tag_249\n        /* \"#utility.yul\":9543:9544   */\n      dup3\n        /* \"#utility.yul\":9525:9545   */\n      tag_130\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":9520:9545   */\n      swap2\n      pop\n        /* \"#utility.yul\":9559:9579   */\n      tag_250\n        /* \"#utility.yul\":9577:9578   */\n      dup4\n        /* \"#utility.yul\":9559:9579   */\n      tag_130\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":9554:9579   */\n      swap3\n      pop\n        /* \"#utility.yul\":9602:9603   */\n      dup3\n        /* \"#utility.yul\":9599:9600   */\n      dup3\n        /* \"#utility.yul\":9595:9604   */\n      add\n        /* \"#utility.yul\":9588:9604   */\n      swap1\n      pop\n        /* \"#utility.yul\":9623:9626   */\n      dup1\n        /* \"#utility.yul\":9620:9621   */\n      dup3\n        /* \"#utility.yul\":9617:9627   */\n      gt\n        /* \"#utility.yul\":9614:9650   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":9630:9648   */\n      tag_252\n      tag_148\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":9614:9650   */\n    tag_251:\n        /* \"#utility.yul\":9466:9657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9663:10105   */\n    tag_89:\n        /* \"#utility.yul\":9812:9816   */\n      0x00\n        /* \"#utility.yul\":9850:9852   */\n      0x60\n        /* \"#utility.yul\":9839:9848   */\n      dup3\n        /* \"#utility.yul\":9835:9853   */\n      add\n        /* \"#utility.yul\":9827:9853   */\n      swap1\n      pop\n        /* \"#utility.yul\":9863:9934   */\n      tag_254\n        /* \"#utility.yul\":9931:9932   */\n      0x00\n        /* \"#utility.yul\":9920:9929   */\n      dup4\n        /* \"#utility.yul\":9916:9933   */\n      add\n        /* \"#utility.yul\":9907:9913   */\n      dup7\n        /* \"#utility.yul\":9863:9934   */\n      tag_137\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":9944:10016   */\n      tag_255\n        /* \"#utility.yul\":10012:10014   */\n      0x20\n        /* \"#utility.yul\":10001:10010   */\n      dup4\n        /* \"#utility.yul\":9997:10015   */\n      add\n        /* \"#utility.yul\":9988:9994   */\n      dup6\n        /* \"#utility.yul\":9944:10016   */\n      tag_137\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":10026:10098   */\n      tag_256\n        /* \"#utility.yul\":10094:10096   */\n      0x40\n        /* \"#utility.yul\":10083:10092   */\n      dup4\n        /* \"#utility.yul\":10079:10097   */\n      add\n        /* \"#utility.yul\":10070:10076   */\n      dup5\n        /* \"#utility.yul\":10026:10098   */\n      tag_133\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":9663:10105   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10111:10292   */\n    tag_151:\n        /* \"#utility.yul\":10251:10284   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10247:10248   */\n      0x00\n        /* \"#utility.yul\":10239:10245   */\n      dup3\n        /* \"#utility.yul\":10235:10249   */\n      add\n        /* \"#utility.yul\":10228:10285   */\n      mstore\n        /* \"#utility.yul\":10111:10292   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10298:10664   */\n    tag_152:\n        /* \"#utility.yul\":10440:10443   */\n      0x00\n        /* \"#utility.yul\":10461:10528   */\n      tag_259\n        /* \"#utility.yul\":10525:10527   */\n      0x1f\n        /* \"#utility.yul\":10520:10523   */\n      dup4\n        /* \"#utility.yul\":10461:10528   */\n      tag_138\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":10454:10528   */\n      swap2\n      pop\n        /* \"#utility.yul\":10537:10630   */\n      tag_260\n        /* \"#utility.yul\":10626:10629   */\n      dup3\n        /* \"#utility.yul\":10537:10630   */\n      tag_151\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":10655:10657   */\n      0x20\n        /* \"#utility.yul\":10650:10653   */\n      dup3\n        /* \"#utility.yul\":10646:10658   */\n      add\n        /* \"#utility.yul\":10639:10658   */\n      swap1\n      pop\n        /* \"#utility.yul\":10298:10664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10670:11089   */\n    tag_110:\n        /* \"#utility.yul\":10836:10840   */\n      0x00\n        /* \"#utility.yul\":10874:10876   */\n      0x20\n        /* \"#utility.yul\":10863:10872   */\n      dup3\n        /* \"#utility.yul\":10859:10877   */\n      add\n        /* \"#utility.yul\":10851:10877   */\n      swap1\n      pop\n        /* \"#utility.yul\":10923:10932   */\n      dup2\n        /* \"#utility.yul\":10917:10921   */\n      dup2\n        /* \"#utility.yul\":10913:10933   */\n      sub\n        /* \"#utility.yul\":10909:10910   */\n      0x00\n        /* \"#utility.yul\":10898:10907   */\n      dup4\n        /* \"#utility.yul\":10894:10911   */\n      add\n        /* \"#utility.yul\":10887:10934   */\n      mstore\n        /* \"#utility.yul\":10951:11082   */\n      tag_262\n        /* \"#utility.yul\":11077:11081   */\n      dup2\n        /* \"#utility.yul\":10951:11082   */\n      tag_152\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":10943:11082   */\n      swap1\n      pop\n        /* \"#utility.yul\":10670:11089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b2e0a8ab31664acee5026ba6508050a9ee2d7747a04be281fbdfc437788aadc464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_371": {
									"entryPoint": null,
									"id": 371,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 255,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$290_fromMemory": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$290_fromMemory": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$290": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$290": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1751:5",
										"nodeType": "YulBlock",
										"src": "0:1751:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "627:51:5",
													"nodeType": "YulBlock",
													"src": "627:51:5",
													"statements": [
														{
															"nativeSrc": "637:35:5",
															"nodeType": "YulAssignment",
															"src": "637:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:5"
																},
																"nativeSrc": "648:24:5",
																"nodeType": "YulFunctionCall",
																"src": "648:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$290",
												"nativeSrc": "568:110:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:5",
														"nodeType": "YulTypedName",
														"src": "609:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:5",
														"nodeType": "YulTypedName",
														"src": "619:7:5",
														"type": ""
													}
												],
												"src": "568:110:5"
											},
											{
												"body": {
													"nativeSrc": "741:93:5",
													"nodeType": "YulBlock",
													"src": "741:93:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:5",
																"nodeType": "YulBlock",
																"src": "812:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:5",
																					"nodeType": "YulLiteral",
																					"src": "821:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:5",
																					"nodeType": "YulLiteral",
																					"src": "824:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:5"
																			},
																			"nativeSrc": "814:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:5"
																		},
																		"nativeSrc": "814:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$290",
																					"nativeSrc": "771:31:5",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:5"
																				},
																				"nativeSrc": "771:38:5",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:5"
																		},
																		"nativeSrc": "761:49:5",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:5"
																},
																"nativeSrc": "754:57:5",
																"nodeType": "YulFunctionCall",
																"src": "754:57:5"
															},
															"nativeSrc": "751:77:5",
															"nodeType": "YulIf",
															"src": "751:77:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$290",
												"nativeSrc": "684:150:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:5",
														"nodeType": "YulTypedName",
														"src": "734:5:5",
														"type": ""
													}
												],
												"src": "684:150:5"
											},
											{
												"body": {
													"nativeSrc": "917:94:5",
													"nodeType": "YulBlock",
													"src": "917:94:5",
													"statements": [
														{
															"nativeSrc": "927:22:5",
															"nodeType": "YulAssignment",
															"src": "927:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:5"
																},
																"nativeSrc": "936:13:5",
																"nodeType": "YulFunctionCall",
																"src": "936:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$290",
																	"nativeSrc": "958:40:5",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:5"
																},
																"nativeSrc": "958:47:5",
																"nodeType": "YulFunctionCall",
																"src": "958:47:5"
															},
															"nativeSrc": "958:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$290_fromMemory",
												"nativeSrc": "840:171:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:5",
														"nodeType": "YulTypedName",
														"src": "895:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:5",
														"nodeType": "YulTypedName",
														"src": "903:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:5",
														"nodeType": "YulTypedName",
														"src": "911:5:5",
														"type": ""
													}
												],
												"src": "840:171:5"
											},
											{
												"body": {
													"nativeSrc": "1108:288:5",
													"nodeType": "YulBlock",
													"src": "1108:288:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:5",
																"nodeType": "YulBlock",
																"src": "1154:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:5"
																			},
																			"nativeSrc": "1156:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:5"
																		},
																		"nativeSrc": "1156:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:5"
																		},
																		"nativeSrc": "1125:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:5"
																},
																"nativeSrc": "1121:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:5"
															},
															"nativeSrc": "1118:119:5",
															"nodeType": "YulIf",
															"src": "1118:119:5"
														},
														{
															"nativeSrc": "1247:142:5",
															"nodeType": "YulBlock",
															"src": "1247:142:5",
															"statements": [
																{
																	"nativeSrc": "1262:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:88:5",
																	"nodeType": "YulAssignment",
																	"src": "1291:88:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1351:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1351:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1362:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1362:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1347:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1347:3:5"
																				},
																				"nativeSrc": "1347:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1347:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$290_fromMemory",
																			"nativeSrc": "1301:45:5",
																			"nodeType": "YulIdentifier",
																			"src": "1301:45:5"
																		},
																		"nativeSrc": "1301:78:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:78:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$290_fromMemory",
												"nativeSrc": "1017:379:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:5",
														"nodeType": "YulTypedName",
														"src": "1078:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:5",
														"nodeType": "YulTypedName",
														"src": "1089:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:5",
														"nodeType": "YulTypedName",
														"src": "1101:6:5",
														"type": ""
													}
												],
												"src": "1017:379:5"
											},
											{
												"body": {
													"nativeSrc": "1467:53:5",
													"nodeType": "YulBlock",
													"src": "1467:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1484:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1484:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1507:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1507:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1489:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1489:17:5"
																		},
																		"nativeSrc": "1489:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1489:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1477:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:5"
																},
																"nativeSrc": "1477:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1477:37:5"
															},
															"nativeSrc": "1477:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1477:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1402:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1455:5:5",
														"nodeType": "YulTypedName",
														"src": "1455:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1462:3:5",
														"nodeType": "YulTypedName",
														"src": "1462:3:5",
														"type": ""
													}
												],
												"src": "1402:118:5"
											},
											{
												"body": {
													"nativeSrc": "1624:124:5",
													"nodeType": "YulBlock",
													"src": "1624:124:5",
													"statements": [
														{
															"nativeSrc": "1634:26:5",
															"nodeType": "YulAssignment",
															"src": "1634:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1646:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1646:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1657:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1642:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1642:3:5"
																},
																"nativeSrc": "1642:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1642:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1634:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1634:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1714:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1714:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1727:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1727:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1738:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1738:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1723:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1723:3:5"
																		},
																		"nativeSrc": "1723:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1723:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1670:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1670:43:5"
																},
																"nativeSrc": "1670:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1670:71:5"
															},
															"nativeSrc": "1670:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1670:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1526:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1596:9:5",
														"nodeType": "YulTypedName",
														"src": "1596:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1608:6:5",
														"nodeType": "YulTypedName",
														"src": "1608:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1619:4:5",
														"nodeType": "YulTypedName",
														"src": "1619:4:5",
														"type": ""
													}
												],
												"src": "1526:222:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$290(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$290(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$290(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$290_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$290(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$290_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$290_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161124438038061124483398181016040528101906100319190610231565b3360015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a9575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a0919061026b565b60405180910390fd5b6100b8816100ff60201b60201c565b508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610284565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101ef826101c6565b9050919050565b5f610200826101e5565b9050919050565b610210816101f6565b811461021a575f80fd5b50565b5f8151905061022b81610207565b92915050565b5f60208284031215610246576102456101c2565b5b5f6102538482850161021d565b91505092915050565b610265816101e5565b82525050565b5f60208201905061027e5f83018461025c565b92915050565b610fb3806102915f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c8063817b1cd211610064578063817b1cd21461010c578063821460f51461012a5780638da5cb5b1461015b578063f2fde38b14610179578063fc0e3d90146101955761009c565b80633ccfd60b146100a0578063715018a6146100aa57806372f702f3146100b45780637b0472f0146100d25780637bc74225146100ee575b5f80fd5b6100a86101b4565b005b6100b2610467565b005b6100bc61047a565b6040516100c99190610aab565b60405180910390f35b6100ec60048036038101906100e79190610afb565b61049f565b005b6100f661075b565b6040516101039190610b48565b60405180910390f35b610114610764565b6040516101219190610b48565b60405180910390f35b610144600480360381019061013f9190610b9c565b61076a565b604051610152929190610bc7565b60405180910390f35b61016361078a565b6040516101709190610bfd565b60405180910390f35b610193600480360381019061018e9190610b9c565b6107b2565b005b61019d610836565b6040516101ab929190610bc7565b60405180910390f35b6101bc61088a565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f820154815260200160018201548152505090505f815f01511161025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610c70565b60405180910390fd5b42816020015111156102a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029d90610cd8565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33845f01516040518363ffffffff1660e01b8152600401610306929190610cf6565b6020604051808303815f875af1158015610322573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103469190610d52565b905080610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037f90610dc7565b60405180910390fd5b815f015160035f82825461039c9190610e12565b9250508190555060405180604001604052805f81526020015f81525060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0155602082015181600101559050503373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5835f01516040516104539190610b48565b60405180910390a250506104656108d7565b565b61046f6108e0565b6104785f610967565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104a761088a565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015414801561053457505f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010154145b610573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056a90610e8f565b60405180910390fd5b8160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f018190555080426105c39190610ead565b60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161066693929190610ee0565b6020604051808303815f875af1158015610682573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106a69190610d52565b9050806106e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106df90610dc7565b60405180910390fd5b8260035f8282546106f99190610ead565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d846040516107469190610b48565b60405180910390a2506107576108d7565b5050565b5f600354905090565b60035481565b6004602052805f5260405f205f91509050805f0154908060010154905082565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107ba6108e0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361082a575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108219190610bfd565b60405180910390fd5b61083381610967565b50565b5f805f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050805f0154816001015492509250509091565b60025f54036108ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c590610f5f565b60405180910390fd5b60025f81905550565b60015f81905550565b6108e8610a2a565b73ffffffffffffffffffffffffffffffffffffffff1661090661078a565b73ffffffffffffffffffffffffffffffffffffffff161461096557610929610a2a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161095c9190610bfd565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610a73610a6e610a6984610a31565b610a50565b610a31565b9050919050565b5f610a8482610a59565b9050919050565b5f610a9582610a7a565b9050919050565b610aa581610a8b565b82525050565b5f602082019050610abe5f830184610a9c565b92915050565b5f80fd5b5f819050919050565b610ada81610ac8565b8114610ae4575f80fd5b50565b5f81359050610af581610ad1565b92915050565b5f8060408385031215610b1157610b10610ac4565b5b5f610b1e85828601610ae7565b9250506020610b2f85828601610ae7565b9150509250929050565b610b4281610ac8565b82525050565b5f602082019050610b5b5f830184610b39565b92915050565b5f610b6b82610a31565b9050919050565b610b7b81610b61565b8114610b85575f80fd5b50565b5f81359050610b9681610b72565b92915050565b5f60208284031215610bb157610bb0610ac4565b5b5f610bbe84828501610b88565b91505092915050565b5f604082019050610bda5f830185610b39565b610be76020830184610b39565b9392505050565b610bf781610b61565b82525050565b5f602082019050610c105f830184610bee565b92915050565b5f82825260208201905092915050565b7f43616e6e6f7420776974686472617720300000000000000000000000000000005f82015250565b5f610c5a601183610c16565b9150610c6582610c26565b602082019050919050565b5f6020820190508181035f830152610c8781610c4e565b9050919050565b7f546f6f206561726c7920776974686472617721000000000000000000000000005f82015250565b5f610cc2601383610c16565b9150610ccd82610c8e565b602082019050919050565b5f6020820190508181035f830152610cef81610cb6565b9050919050565b5f604082019050610d095f830185610bee565b610d166020830184610b39565b9392505050565b5f8115159050919050565b610d3181610d1d565b8114610d3b575f80fd5b50565b5f81519050610d4c81610d28565b92915050565b5f60208284031215610d6757610d66610ac4565b5b5f610d7484828501610d3e565b91505092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f610db1600f83610c16565b9150610dbc82610d7d565b602082019050919050565b5f6020820190508181035f830152610dde81610da5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e1c82610ac8565b9150610e2783610ac8565b9250828203905081811115610e3f57610e3e610de5565b5b92915050565b7f7573657220616c72656164792068617320737461636b696e67000000000000005f82015250565b5f610e79601983610c16565b9150610e8482610e45565b602082019050919050565b5f6020820190508181035f830152610ea681610e6d565b9050919050565b5f610eb782610ac8565b9150610ec283610ac8565b9250828201905080821115610eda57610ed9610de5565b5b92915050565b5f606082019050610ef35f830186610bee565b610f006020830185610bee565b610f0d6040830184610b39565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610f49601f83610c16565b9150610f5482610f15565b602082019050919050565b5f6020820190508181035f830152610f7681610f3d565b905091905056fea2646970667358221220b2e0a8ab31664acee5026ba6508050a9ee2d7747a04be281fbdfc437788aadc464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1244 CODESIZE SUB DUP1 PUSH2 0x1244 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x231 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x26B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0xFF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x284 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF DUP3 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x200 DUP3 PUSH2 0x1E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x210 DUP2 PUSH2 0x1F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x22B DUP2 PUSH2 0x207 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x246 JUMPI PUSH2 0x245 PUSH2 0x1C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x253 DUP5 DUP3 DUP6 ADD PUSH2 0x21D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x265 DUP2 PUSH2 0x1E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27E PUSH0 DUP4 ADD DUP5 PUSH2 0x25C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFB3 DUP1 PUSH2 0x291 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x821460F5 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xFC0E3D90 EQ PUSH2 0x195 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x7BC74225 EQ PUSH2 0xEE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x1B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2 PUSH2 0x467 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBC PUSH2 0x47A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xAFB JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF6 PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP3 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x78A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19D PUSH2 0x836 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP3 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x88A JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD GT PUSH2 0x25F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29D SWAP1 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH0 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP3 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x322 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 ADD MLOAD PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0xE12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x453 SWAP2 SWAP1 PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x465 PUSH2 0x8D7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x46F PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x478 PUSH0 PUSH2 0x967 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x88A JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x534 JUMPI POP PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST PUSH2 0x573 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56A SWAP1 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP1 TIMESTAMP PUSH2 0x5C3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x682 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x757 PUSH2 0x8D7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7BA PUSH2 0x8E0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP2 SWAP1 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x833 DUP2 PUSH2 0x967 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C5 SWAP1 PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x8E8 PUSH2 0xA2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x906 PUSH2 0x78A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x965 JUMPI PUSH2 0x929 PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95C SWAP2 SWAP1 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA73 PUSH2 0xA6E PUSH2 0xA69 DUP5 PUSH2 0xA31 JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST PUSH2 0xA31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA84 DUP3 PUSH2 0xA59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA95 DUP3 PUSH2 0xA7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA5 DUP2 PUSH2 0xA8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xABE PUSH0 DUP4 ADD DUP5 PUSH2 0xA9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xADA DUP2 PUSH2 0xAC8 JUMP JUMPDEST DUP2 EQ PUSH2 0xAE4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF5 DUP2 PUSH2 0xAD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB11 JUMPI PUSH2 0xB10 PUSH2 0xAC4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB1E DUP6 DUP3 DUP7 ADD PUSH2 0xAE7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB2F DUP6 DUP3 DUP7 ADD PUSH2 0xAE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB42 DUP2 PUSH2 0xAC8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB5B PUSH0 DUP4 ADD DUP5 PUSH2 0xB39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB6B DUP3 PUSH2 0xA31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7B DUP2 PUSH2 0xB61 JUMP JUMPDEST DUP2 EQ PUSH2 0xB85 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB96 DUP2 PUSH2 0xB72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB1 JUMPI PUSH2 0xBB0 PUSH2 0xAC4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBBE DUP5 DUP3 DUP6 ADD PUSH2 0xB88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBDA PUSH0 DUP4 ADD DUP6 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xBE7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB39 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBF7 DUP2 PUSH2 0xB61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC10 PUSH0 DUP4 ADD DUP5 PUSH2 0xBEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC5A PUSH1 0x11 DUP4 PUSH2 0xC16 JUMP JUMPDEST SWAP2 POP PUSH2 0xC65 DUP3 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC87 DUP2 PUSH2 0xC4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6F206561726C792077697468647261772100000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCC2 PUSH1 0x13 DUP4 PUSH2 0xC16 JUMP JUMPDEST SWAP2 POP PUSH2 0xCCD DUP3 PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCEF DUP2 PUSH2 0xCB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD09 PUSH0 DUP4 ADD DUP6 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xD16 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB39 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD31 DUP2 PUSH2 0xD1D JUMP JUMPDEST DUP2 EQ PUSH2 0xD3B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD4C DUP2 PUSH2 0xD28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD67 JUMPI PUSH2 0xD66 PUSH2 0xAC4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD74 DUP5 DUP3 DUP6 ADD PUSH2 0xD3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDB1 PUSH1 0xF DUP4 PUSH2 0xC16 JUMP JUMPDEST SWAP2 POP PUSH2 0xDBC DUP3 PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDDE DUP2 PUSH2 0xDA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE1C DUP3 PUSH2 0xAC8 JUMP JUMPDEST SWAP2 POP PUSH2 0xE27 DUP4 PUSH2 0xAC8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE3F JUMPI PUSH2 0xE3E PUSH2 0xDE5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7573657220616C72656164792068617320737461636B696E6700000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE79 PUSH1 0x19 DUP4 PUSH2 0xC16 JUMP JUMPDEST SWAP2 POP PUSH2 0xE84 DUP3 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEA6 DUP2 PUSH2 0xE6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEB7 DUP3 PUSH2 0xAC8 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC2 DUP4 PUSH2 0xAC8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEDA JUMPI PUSH2 0xED9 PUSH2 0xDE5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEF3 PUSH0 DUP4 ADD DUP7 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xF00 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xF0D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB39 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF49 PUSH1 0x1F DUP4 PUSH2 0xC16 JUMP JUMPDEST SWAP2 POP PUSH2 0xF54 DUP3 PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF76 DUP2 PUSH2 0xF3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xE0 0xA8 0xAB BALANCE PUSH7 0x4ACEE5026BA650 DUP1 POP 0xA9 0xEE 0x2D PUSH24 0x47A04BE281FBDFC437788AADC464736F6C634300081A0033 ",
							"sourceMap": "232:2001:4:-:0;;;636:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;678:10;1716:1:1;1821:7;:22;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;715:13:4::1;700:12;;:28;;;;;;;;;;;;;;;;;;636:99:::0;232:2001;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:379::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:78;1371:7;1362:6;1351:9;1347:22;1301:78;:::i;:::-;1291:88;;1247:142;1017:379;;;;:::o;1402:118::-;1489:24;1507:5;1489:24;:::i;:::-;1484:3;1477:37;1402:118;;:::o;1526:222::-;1619:4;1657:2;1646:9;1642:18;1634:26;;1670:71;1738:1;1727:9;1723:17;1714:6;1670:71;:::i;:::-;1526:222;;;;:::o;232:2001:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2272,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_302": {
									"entryPoint": 2602,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 2263,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 2186,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2407,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getStake_469": {
									"entryPoint": 2102,
									"id": 469,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@getTotalStake_477": {
									"entryPoint": 1883,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1930,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1127,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_447": {
									"entryPoint": 1183,
									"id": 447,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakingToken_332": {
									"entryPoint": 1146,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_334": {
									"entryPoint": 1892,
									"id": 334,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1970,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userStaking_339": {
									"entryPoint": 1898,
									"id": 339,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_545": {
									"entryPoint": 436,
									"id": 545,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack": {
									"entryPoint": 2716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3808,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3318,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed": {
									"entryPoint": 2731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3015,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$290_to_t_address": {
									"entryPoint": 2699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2756,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 3453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0": {
									"entryPoint": 3110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0": {
									"entryPoint": 3653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 3861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5": {
									"entryPoint": 3214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11092:5",
										"nodeType": "YulBlock",
										"src": "0:11092:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:5",
													"nodeType": "YulBlock",
													"src": "52:81:5",
													"statements": [
														{
															"nativeSrc": "62:65:5",
															"nodeType": "YulAssignment",
															"src": "62:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:5",
																		"nodeType": "YulLiteral",
																		"src": "84:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:5"
																},
																"nativeSrc": "73:54:5",
																"nodeType": "YulFunctionCall",
																"src": "73:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:5",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:5",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:126:5"
											},
											{
												"body": {
													"nativeSrc": "171:28:5",
													"nodeType": "YulBlock",
													"src": "171:28:5",
													"statements": [
														{
															"nativeSrc": "181:12:5",
															"nodeType": "YulAssignment",
															"src": "181:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:5",
																"nodeType": "YulIdentifier",
																"src": "188:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:5",
														"nodeType": "YulTypedName",
														"src": "157:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:5",
														"nodeType": "YulTypedName",
														"src": "167:3:5",
														"type": ""
													}
												],
												"src": "139:60:5"
											},
											{
												"body": {
													"nativeSrc": "265:82:5",
													"nodeType": "YulBlock",
													"src": "265:82:5",
													"statements": [
														{
															"nativeSrc": "275:66:5",
															"nodeType": "YulAssignment",
															"src": "275:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:5"
																				},
																				"nativeSrc": "315:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:5"
																		},
																		"nativeSrc": "306:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:5"
																},
																"nativeSrc": "288:53:5",
																"nodeType": "YulFunctionCall",
																"src": "288:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:5",
														"nodeType": "YulTypedName",
														"src": "245:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:5",
														"nodeType": "YulTypedName",
														"src": "255:9:5",
														"type": ""
													}
												],
												"src": "205:142:5"
											},
											{
												"body": {
													"nativeSrc": "413:66:5",
													"nodeType": "YulBlock",
													"src": "413:66:5",
													"statements": [
														{
															"nativeSrc": "423:50:5",
															"nodeType": "YulAssignment",
															"src": "423:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:5"
																},
																"nativeSrc": "436:37:5",
																"nodeType": "YulFunctionCall",
																"src": "436:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:5",
														"nodeType": "YulTypedName",
														"src": "393:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:5",
														"nodeType": "YulTypedName",
														"src": "403:9:5",
														"type": ""
													}
												],
												"src": "353:126:5"
											},
											{
												"body": {
													"nativeSrc": "559:66:5",
													"nodeType": "YulBlock",
													"src": "559:66:5",
													"statements": [
														{
															"nativeSrc": "569:50:5",
															"nodeType": "YulAssignment",
															"src": "569:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "613:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "582:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "582:30:5"
																},
																"nativeSrc": "582:37:5",
																"nodeType": "YulFunctionCall",
																"src": "582:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "569:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "569:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$290_to_t_address",
												"nativeSrc": "485:140:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "539:5:5",
														"nodeType": "YulTypedName",
														"src": "539:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "549:9:5",
														"nodeType": "YulTypedName",
														"src": "549:9:5",
														"type": ""
													}
												],
												"src": "485:140:5"
											},
											{
												"body": {
													"nativeSrc": "710:80:5",
													"nodeType": "YulBlock",
													"src": "710:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "727:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$290_to_t_address",
																			"nativeSrc": "732:44:5",
																			"nodeType": "YulIdentifier",
																			"src": "732:44:5"
																		},
																		"nativeSrc": "732:51:5",
																		"nodeType": "YulFunctionCall",
																		"src": "732:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "720:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:5"
																},
																"nativeSrc": "720:64:5",
																"nodeType": "YulFunctionCall",
																"src": "720:64:5"
															},
															"nativeSrc": "720:64:5",
															"nodeType": "YulExpressionStatement",
															"src": "720:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
												"nativeSrc": "631:159:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "698:5:5",
														"nodeType": "YulTypedName",
														"src": "698:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "705:3:5",
														"nodeType": "YulTypedName",
														"src": "705:3:5",
														"type": ""
													}
												],
												"src": "631:159:5"
											},
											{
												"body": {
													"nativeSrc": "908:138:5",
													"nodeType": "YulBlock",
													"src": "908:138:5",
													"statements": [
														{
															"nativeSrc": "918:26:5",
															"nodeType": "YulAssignment",
															"src": "918:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "930:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:5",
																		"nodeType": "YulLiteral",
																		"src": "941:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "926:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:5"
																},
																"nativeSrc": "926:18:5",
																"nodeType": "YulFunctionCall",
																"src": "926:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "918:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1012:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1025:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1036:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1021:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:5"
																		},
																		"nativeSrc": "1021:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1021:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
																	"nativeSrc": "954:57:5",
																	"nodeType": "YulIdentifier",
																	"src": "954:57:5"
																},
																"nativeSrc": "954:85:5",
																"nodeType": "YulFunctionCall",
																"src": "954:85:5"
															},
															"nativeSrc": "954:85:5",
															"nodeType": "YulExpressionStatement",
															"src": "954:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed",
												"nativeSrc": "796:250:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "880:9:5",
														"nodeType": "YulTypedName",
														"src": "880:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "892:6:5",
														"nodeType": "YulTypedName",
														"src": "892:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "903:4:5",
														"nodeType": "YulTypedName",
														"src": "903:4:5",
														"type": ""
													}
												],
												"src": "796:250:5"
											},
											{
												"body": {
													"nativeSrc": "1092:35:5",
													"nodeType": "YulBlock",
													"src": "1092:35:5",
													"statements": [
														{
															"nativeSrc": "1102:19:5",
															"nodeType": "YulAssignment",
															"src": "1102:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1118:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1118:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1112:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1112:5:5"
																},
																"nativeSrc": "1112:9:5",
																"nodeType": "YulFunctionCall",
																"src": "1112:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1102:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1052:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1085:6:5",
														"nodeType": "YulTypedName",
														"src": "1085:6:5",
														"type": ""
													}
												],
												"src": "1052:75:5"
											},
											{
												"body": {
													"nativeSrc": "1222:28:5",
													"nodeType": "YulBlock",
													"src": "1222:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1239:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1239:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1242:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1242:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1232:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1232:6:5"
																},
																"nativeSrc": "1232:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1232:12:5"
															},
															"nativeSrc": "1232:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1232:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1133:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1133:117:5"
											},
											{
												"body": {
													"nativeSrc": "1345:28:5",
													"nodeType": "YulBlock",
													"src": "1345:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1362:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1362:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1355:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1355:6:5"
																},
																"nativeSrc": "1355:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1355:12:5"
															},
															"nativeSrc": "1355:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1355:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1256:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1256:117:5"
											},
											{
												"body": {
													"nativeSrc": "1424:32:5",
													"nodeType": "YulBlock",
													"src": "1424:32:5",
													"statements": [
														{
															"nativeSrc": "1434:16:5",
															"nodeType": "YulAssignment",
															"src": "1434:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1445:5:5",
																"nodeType": "YulIdentifier",
																"src": "1445:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1434:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1434:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1379:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1406:5:5",
														"nodeType": "YulTypedName",
														"src": "1406:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1416:7:5",
														"nodeType": "YulTypedName",
														"src": "1416:7:5",
														"type": ""
													}
												],
												"src": "1379:77:5"
											},
											{
												"body": {
													"nativeSrc": "1505:79:5",
													"nodeType": "YulBlock",
													"src": "1505:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1562:16:5",
																"nodeType": "YulBlock",
																"src": "1562:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1571:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1571:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1574:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1574:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1564:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1564:6:5"
																			},
																			"nativeSrc": "1564:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1564:12:5"
																		},
																		"nativeSrc": "1564:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1564:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1528:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1528:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1553:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1553:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1535:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1535:17:5"
																				},
																				"nativeSrc": "1535:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1535:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1525:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1525:2:5"
																		},
																		"nativeSrc": "1525:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1525:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1518:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:5"
																},
																"nativeSrc": "1518:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1518:43:5"
															},
															"nativeSrc": "1515:63:5",
															"nodeType": "YulIf",
															"src": "1515:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1462:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1498:5:5",
														"nodeType": "YulTypedName",
														"src": "1498:5:5",
														"type": ""
													}
												],
												"src": "1462:122:5"
											},
											{
												"body": {
													"nativeSrc": "1642:87:5",
													"nodeType": "YulBlock",
													"src": "1642:87:5",
													"statements": [
														{
															"nativeSrc": "1652:29:5",
															"nodeType": "YulAssignment",
															"src": "1652:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1674:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1674:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1661:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1661:12:5"
																},
																"nativeSrc": "1661:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1661:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1652:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1652:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1717:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1717:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1690:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1690:26:5"
																},
																"nativeSrc": "1690:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1690:33:5"
															},
															"nativeSrc": "1690:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1690:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1590:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1620:6:5",
														"nodeType": "YulTypedName",
														"src": "1620:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1628:3:5",
														"nodeType": "YulTypedName",
														"src": "1628:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1636:5:5",
														"nodeType": "YulTypedName",
														"src": "1636:5:5",
														"type": ""
													}
												],
												"src": "1590:139:5"
											},
											{
												"body": {
													"nativeSrc": "1818:391:5",
													"nodeType": "YulBlock",
													"src": "1818:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1864:83:5",
																"nodeType": "YulBlock",
																"src": "1864:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1866:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1866:77:5"
																			},
																			"nativeSrc": "1866:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1866:79:5"
																		},
																		"nativeSrc": "1866:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1866:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1839:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1839:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1848:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1848:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1835:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:5"
																		},
																		"nativeSrc": "1835:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1835:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1860:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1860:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1831:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1831:3:5"
																},
																"nativeSrc": "1831:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1831:32:5"
															},
															"nativeSrc": "1828:119:5",
															"nodeType": "YulIf",
															"src": "1828:119:5"
														},
														{
															"nativeSrc": "1957:117:5",
															"nodeType": "YulBlock",
															"src": "1957:117:5",
															"statements": [
																{
																	"nativeSrc": "1972:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1972:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1986:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1986:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1976:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1976:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2001:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2001:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2036:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2036:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2047:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2047:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2032:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2032:3:5"
																				},
																				"nativeSrc": "2032:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2032:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2056:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2056:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2011:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2011:20:5"
																		},
																		"nativeSrc": "2011:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2011:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2001:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2001:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2084:118:5",
															"nodeType": "YulBlock",
															"src": "2084:118:5",
															"statements": [
																{
																	"nativeSrc": "2099:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2099:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2113:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2113:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2103:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2103:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2129:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2129:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2164:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2164:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2175:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2175:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2160:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2160:3:5"
																				},
																				"nativeSrc": "2160:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2160:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2184:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2184:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2139:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2139:20:5"
																		},
																		"nativeSrc": "2139:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2139:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2129:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2129:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1735:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1780:9:5",
														"nodeType": "YulTypedName",
														"src": "1780:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1791:7:5",
														"nodeType": "YulTypedName",
														"src": "1791:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1803:6:5",
														"nodeType": "YulTypedName",
														"src": "1803:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1811:6:5",
														"nodeType": "YulTypedName",
														"src": "1811:6:5",
														"type": ""
													}
												],
												"src": "1735:474:5"
											},
											{
												"body": {
													"nativeSrc": "2280:53:5",
													"nodeType": "YulBlock",
													"src": "2280:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2297:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2297:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2320:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2320:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2302:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2302:17:5"
																		},
																		"nativeSrc": "2302:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2290:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2290:6:5"
																},
																"nativeSrc": "2290:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2290:37:5"
															},
															"nativeSrc": "2290:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2290:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2215:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2268:5:5",
														"nodeType": "YulTypedName",
														"src": "2268:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2275:3:5",
														"nodeType": "YulTypedName",
														"src": "2275:3:5",
														"type": ""
													}
												],
												"src": "2215:118:5"
											},
											{
												"body": {
													"nativeSrc": "2437:124:5",
													"nodeType": "YulBlock",
													"src": "2437:124:5",
													"statements": [
														{
															"nativeSrc": "2447:26:5",
															"nodeType": "YulAssignment",
															"src": "2447:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2459:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2459:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2470:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2470:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2455:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2455:3:5"
																},
																"nativeSrc": "2455:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2455:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2447:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2447:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2527:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2527:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2540:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2540:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2551:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2551:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2536:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2536:3:5"
																		},
																		"nativeSrc": "2536:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2536:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2483:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2483:43:5"
																},
																"nativeSrc": "2483:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2483:71:5"
															},
															"nativeSrc": "2483:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2483:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2339:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2409:9:5",
														"nodeType": "YulTypedName",
														"src": "2409:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2421:6:5",
														"nodeType": "YulTypedName",
														"src": "2421:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2432:4:5",
														"nodeType": "YulTypedName",
														"src": "2432:4:5",
														"type": ""
													}
												],
												"src": "2339:222:5"
											},
											{
												"body": {
													"nativeSrc": "2612:51:5",
													"nodeType": "YulBlock",
													"src": "2612:51:5",
													"statements": [
														{
															"nativeSrc": "2622:35:5",
															"nodeType": "YulAssignment",
															"src": "2622:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2651:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2651:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2633:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2633:17:5"
																},
																"nativeSrc": "2633:24:5",
																"nodeType": "YulFunctionCall",
																"src": "2633:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2622:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2622:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2567:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2594:5:5",
														"nodeType": "YulTypedName",
														"src": "2594:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2604:7:5",
														"nodeType": "YulTypedName",
														"src": "2604:7:5",
														"type": ""
													}
												],
												"src": "2567:96:5"
											},
											{
												"body": {
													"nativeSrc": "2712:79:5",
													"nodeType": "YulBlock",
													"src": "2712:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2769:16:5",
																"nodeType": "YulBlock",
																"src": "2769:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2778:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2778:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2781:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2781:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2771:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2771:6:5"
																			},
																			"nativeSrc": "2771:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2771:12:5"
																		},
																		"nativeSrc": "2771:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2771:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2735:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2735:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2760:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2760:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2742:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2742:17:5"
																				},
																				"nativeSrc": "2742:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2742:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2732:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2732:2:5"
																		},
																		"nativeSrc": "2732:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2732:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2725:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2725:6:5"
																},
																"nativeSrc": "2725:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2725:43:5"
															},
															"nativeSrc": "2722:63:5",
															"nodeType": "YulIf",
															"src": "2722:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2669:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2705:5:5",
														"nodeType": "YulTypedName",
														"src": "2705:5:5",
														"type": ""
													}
												],
												"src": "2669:122:5"
											},
											{
												"body": {
													"nativeSrc": "2849:87:5",
													"nodeType": "YulBlock",
													"src": "2849:87:5",
													"statements": [
														{
															"nativeSrc": "2859:29:5",
															"nodeType": "YulAssignment",
															"src": "2859:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2881:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2881:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2868:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2868:12:5"
																},
																"nativeSrc": "2868:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2868:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2859:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2859:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2924:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2924:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2897:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2897:26:5"
																},
																"nativeSrc": "2897:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2897:33:5"
															},
															"nativeSrc": "2897:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2897:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2797:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2827:6:5",
														"nodeType": "YulTypedName",
														"src": "2827:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2835:3:5",
														"nodeType": "YulTypedName",
														"src": "2835:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2843:5:5",
														"nodeType": "YulTypedName",
														"src": "2843:5:5",
														"type": ""
													}
												],
												"src": "2797:139:5"
											},
											{
												"body": {
													"nativeSrc": "3008:263:5",
													"nodeType": "YulBlock",
													"src": "3008:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3054:83:5",
																"nodeType": "YulBlock",
																"src": "3054:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3056:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3056:77:5"
																			},
																			"nativeSrc": "3056:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3056:79:5"
																		},
																		"nativeSrc": "3056:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3056:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3029:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3029:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3038:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3038:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3025:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3025:3:5"
																		},
																		"nativeSrc": "3025:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3025:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3050:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3050:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3021:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3021:3:5"
																},
																"nativeSrc": "3021:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3021:32:5"
															},
															"nativeSrc": "3018:119:5",
															"nodeType": "YulIf",
															"src": "3018:119:5"
														},
														{
															"nativeSrc": "3147:117:5",
															"nodeType": "YulBlock",
															"src": "3147:117:5",
															"statements": [
																{
																	"nativeSrc": "3162:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3162:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3176:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3176:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3166:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3166:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3191:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3191:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3226:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3226:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3237:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3237:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3222:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3222:3:5"
																				},
																				"nativeSrc": "3222:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3222:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3246:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3246:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3201:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3201:20:5"
																		},
																		"nativeSrc": "3201:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3201:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3191:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3191:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2942:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2978:9:5",
														"nodeType": "YulTypedName",
														"src": "2978:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2989:7:5",
														"nodeType": "YulTypedName",
														"src": "2989:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3001:6:5",
														"nodeType": "YulTypedName",
														"src": "3001:6:5",
														"type": ""
													}
												],
												"src": "2942:329:5"
											},
											{
												"body": {
													"nativeSrc": "3403:206:5",
													"nodeType": "YulBlock",
													"src": "3403:206:5",
													"statements": [
														{
															"nativeSrc": "3413:26:5",
															"nodeType": "YulAssignment",
															"src": "3413:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3425:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3425:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3436:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3436:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3421:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3421:3:5"
																},
																"nativeSrc": "3421:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3421:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3413:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3413:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3493:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3493:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3506:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3506:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3517:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3517:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3502:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3502:3:5"
																		},
																		"nativeSrc": "3502:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3502:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3449:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3449:43:5"
																},
																"nativeSrc": "3449:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3449:71:5"
															},
															"nativeSrc": "3449:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3449:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3574:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3574:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3587:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3587:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3598:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3598:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3583:3:5"
																		},
																		"nativeSrc": "3583:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3583:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3530:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3530:43:5"
																},
																"nativeSrc": "3530:72:5",
																"nodeType": "YulFunctionCall",
																"src": "3530:72:5"
															},
															"nativeSrc": "3530:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "3530:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3277:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3367:9:5",
														"nodeType": "YulTypedName",
														"src": "3367:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3379:6:5",
														"nodeType": "YulTypedName",
														"src": "3379:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3387:6:5",
														"nodeType": "YulTypedName",
														"src": "3387:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3398:4:5",
														"nodeType": "YulTypedName",
														"src": "3398:4:5",
														"type": ""
													}
												],
												"src": "3277:332:5"
											},
											{
												"body": {
													"nativeSrc": "3680:53:5",
													"nodeType": "YulBlock",
													"src": "3680:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3697:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3697:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3720:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3720:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3702:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3702:17:5"
																		},
																		"nativeSrc": "3702:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3702:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3690:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3690:6:5"
																},
																"nativeSrc": "3690:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3690:37:5"
															},
															"nativeSrc": "3690:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3690:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3615:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3668:5:5",
														"nodeType": "YulTypedName",
														"src": "3668:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3675:3:5",
														"nodeType": "YulTypedName",
														"src": "3675:3:5",
														"type": ""
													}
												],
												"src": "3615:118:5"
											},
											{
												"body": {
													"nativeSrc": "3837:124:5",
													"nodeType": "YulBlock",
													"src": "3837:124:5",
													"statements": [
														{
															"nativeSrc": "3847:26:5",
															"nodeType": "YulAssignment",
															"src": "3847:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3859:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3859:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3870:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3870:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3855:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3855:3:5"
																},
																"nativeSrc": "3855:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3855:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3847:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3847:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3927:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3927:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3940:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3940:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3951:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3951:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3936:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3936:3:5"
																		},
																		"nativeSrc": "3936:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3936:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3883:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3883:43:5"
																},
																"nativeSrc": "3883:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3883:71:5"
															},
															"nativeSrc": "3883:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3883:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3739:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3809:9:5",
														"nodeType": "YulTypedName",
														"src": "3809:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3821:6:5",
														"nodeType": "YulTypedName",
														"src": "3821:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3832:4:5",
														"nodeType": "YulTypedName",
														"src": "3832:4:5",
														"type": ""
													}
												],
												"src": "3739:222:5"
											},
											{
												"body": {
													"nativeSrc": "4063:73:5",
													"nodeType": "YulBlock",
													"src": "4063:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4080:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4080:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4085:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4085:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4073:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4073:6:5"
																},
																"nativeSrc": "4073:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4073:19:5"
															},
															"nativeSrc": "4073:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "4073:19:5"
														},
														{
															"nativeSrc": "4101:29:5",
															"nodeType": "YulAssignment",
															"src": "4101:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4120:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4120:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4125:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4125:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4116:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4116:3:5"
																},
																"nativeSrc": "4116:14:5",
																"nodeType": "YulFunctionCall",
																"src": "4116:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4101:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "4101:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3967:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4035:3:5",
														"nodeType": "YulTypedName",
														"src": "4035:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4040:6:5",
														"nodeType": "YulTypedName",
														"src": "4040:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4051:11:5",
														"nodeType": "YulTypedName",
														"src": "4051:11:5",
														"type": ""
													}
												],
												"src": "3967:169:5"
											},
											{
												"body": {
													"nativeSrc": "4248:61:5",
													"nodeType": "YulBlock",
													"src": "4248:61:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4270:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4270:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4278:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4278:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4266:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4266:3:5"
																		},
																		"nativeSrc": "4266:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4266:14:5"
																	},
																	{
																		"hexValue": "43616e6e6f742077697468647261772030",
																		"kind": "string",
																		"nativeSrc": "4282:19:5",
																		"nodeType": "YulLiteral",
																		"src": "4282:19:5",
																		"type": "",
																		"value": "Cannot withdraw 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4259:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4259:6:5"
																},
																"nativeSrc": "4259:43:5",
																"nodeType": "YulFunctionCall",
																"src": "4259:43:5"
															},
															"nativeSrc": "4259:43:5",
															"nodeType": "YulExpressionStatement",
															"src": "4259:43:5"
														}
													]
												},
												"name": "store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
												"nativeSrc": "4142:167:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4240:6:5",
														"nodeType": "YulTypedName",
														"src": "4240:6:5",
														"type": ""
													}
												],
												"src": "4142:167:5"
											},
											{
												"body": {
													"nativeSrc": "4461:220:5",
													"nodeType": "YulBlock",
													"src": "4461:220:5",
													"statements": [
														{
															"nativeSrc": "4471:74:5",
															"nodeType": "YulAssignment",
															"src": "4471:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4537:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4537:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4542:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4542:2:5",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4478:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "4478:58:5"
																},
																"nativeSrc": "4478:67:5",
																"nodeType": "YulFunctionCall",
																"src": "4478:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4471:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4471:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4643:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4643:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																	"nativeSrc": "4554:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "4554:88:5"
																},
																"nativeSrc": "4554:93:5",
																"nodeType": "YulFunctionCall",
																"src": "4554:93:5"
															},
															"nativeSrc": "4554:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "4554:93:5"
														},
														{
															"nativeSrc": "4656:19:5",
															"nodeType": "YulAssignment",
															"src": "4656:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4667:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4667:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4672:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4672:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4663:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4663:3:5"
																},
																"nativeSrc": "4663:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4663:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4656:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4656:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4315:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4449:3:5",
														"nodeType": "YulTypedName",
														"src": "4449:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4457:3:5",
														"nodeType": "YulTypedName",
														"src": "4457:3:5",
														"type": ""
													}
												],
												"src": "4315:366:5"
											},
											{
												"body": {
													"nativeSrc": "4858:248:5",
													"nodeType": "YulBlock",
													"src": "4858:248:5",
													"statements": [
														{
															"nativeSrc": "4868:26:5",
															"nodeType": "YulAssignment",
															"src": "4868:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4880:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4880:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4891:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4891:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4876:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4876:3:5"
																},
																"nativeSrc": "4876:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4876:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4868:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4868:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4915:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4915:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4926:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4926:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4911:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4911:3:5"
																		},
																		"nativeSrc": "4911:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4911:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4934:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "4934:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4940:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4940:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4930:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4930:3:5"
																		},
																		"nativeSrc": "4930:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4930:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4904:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4904:6:5"
																},
																"nativeSrc": "4904:47:5",
																"nodeType": "YulFunctionCall",
																"src": "4904:47:5"
															},
															"nativeSrc": "4904:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "4904:47:5"
														},
														{
															"nativeSrc": "4960:139:5",
															"nodeType": "YulAssignment",
															"src": "4960:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5094:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5094:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4968:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "4968:124:5"
																},
																"nativeSrc": "4968:131:5",
																"nodeType": "YulFunctionCall",
																"src": "4968:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4960:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4687:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4838:9:5",
														"nodeType": "YulTypedName",
														"src": "4838:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4853:4:5",
														"nodeType": "YulTypedName",
														"src": "4853:4:5",
														"type": ""
													}
												],
												"src": "4687:419:5"
											},
											{
												"body": {
													"nativeSrc": "5218:63:5",
													"nodeType": "YulBlock",
													"src": "5218:63:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5240:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5240:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5248:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5248:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5236:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5236:3:5"
																		},
																		"nativeSrc": "5236:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5236:14:5"
																	},
																	{
																		"hexValue": "546f6f206561726c7920776974686472617721",
																		"kind": "string",
																		"nativeSrc": "5252:21:5",
																		"nodeType": "YulLiteral",
																		"src": "5252:21:5",
																		"type": "",
																		"value": "Too early withdraw!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5229:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5229:6:5"
																},
																"nativeSrc": "5229:45:5",
																"nodeType": "YulFunctionCall",
																"src": "5229:45:5"
															},
															"nativeSrc": "5229:45:5",
															"nodeType": "YulExpressionStatement",
															"src": "5229:45:5"
														}
													]
												},
												"name": "store_literal_in_memory_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5",
												"nativeSrc": "5112:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5210:6:5",
														"nodeType": "YulTypedName",
														"src": "5210:6:5",
														"type": ""
													}
												],
												"src": "5112:169:5"
											},
											{
												"body": {
													"nativeSrc": "5433:220:5",
													"nodeType": "YulBlock",
													"src": "5433:220:5",
													"statements": [
														{
															"nativeSrc": "5443:74:5",
															"nodeType": "YulAssignment",
															"src": "5443:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5509:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5509:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5514:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5514:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5450:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "5450:58:5"
																},
																"nativeSrc": "5450:67:5",
																"nodeType": "YulFunctionCall",
																"src": "5450:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5443:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5443:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5615:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5615:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5",
																	"nativeSrc": "5526:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "5526:88:5"
																},
																"nativeSrc": "5526:93:5",
																"nodeType": "YulFunctionCall",
																"src": "5526:93:5"
															},
															"nativeSrc": "5526:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "5526:93:5"
														},
														{
															"nativeSrc": "5628:19:5",
															"nodeType": "YulAssignment",
															"src": "5628:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5639:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5639:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5644:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5644:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5635:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5635:3:5"
																},
																"nativeSrc": "5635:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5635:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5628:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5628:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5287:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5421:3:5",
														"nodeType": "YulTypedName",
														"src": "5421:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5429:3:5",
														"nodeType": "YulTypedName",
														"src": "5429:3:5",
														"type": ""
													}
												],
												"src": "5287:366:5"
											},
											{
												"body": {
													"nativeSrc": "5830:248:5",
													"nodeType": "YulBlock",
													"src": "5830:248:5",
													"statements": [
														{
															"nativeSrc": "5840:26:5",
															"nodeType": "YulAssignment",
															"src": "5840:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5852:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5852:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5863:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5863:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5848:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5848:3:5"
																},
																"nativeSrc": "5848:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5848:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5840:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5840:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5887:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5887:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5898:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5898:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5883:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5883:3:5"
																		},
																		"nativeSrc": "5883:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5883:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5906:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "5906:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5912:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5912:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5902:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5902:3:5"
																		},
																		"nativeSrc": "5902:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5902:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5876:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5876:6:5"
																},
																"nativeSrc": "5876:47:5",
																"nodeType": "YulFunctionCall",
																"src": "5876:47:5"
															},
															"nativeSrc": "5876:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "5876:47:5"
														},
														{
															"nativeSrc": "5932:139:5",
															"nodeType": "YulAssignment",
															"src": "5932:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6066:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6066:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5940:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "5940:124:5"
																},
																"nativeSrc": "5940:131:5",
																"nodeType": "YulFunctionCall",
																"src": "5940:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5932:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5932:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5659:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5810:9:5",
														"nodeType": "YulTypedName",
														"src": "5810:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5825:4:5",
														"nodeType": "YulTypedName",
														"src": "5825:4:5",
														"type": ""
													}
												],
												"src": "5659:419:5"
											},
											{
												"body": {
													"nativeSrc": "6210:206:5",
													"nodeType": "YulBlock",
													"src": "6210:206:5",
													"statements": [
														{
															"nativeSrc": "6220:26:5",
															"nodeType": "YulAssignment",
															"src": "6220:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6232:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6232:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6243:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6243:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6228:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6228:3:5"
																},
																"nativeSrc": "6228:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6228:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6220:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6220:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6300:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6300:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6313:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6313:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6324:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6324:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6309:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6309:3:5"
																		},
																		"nativeSrc": "6309:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6309:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6256:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6256:43:5"
																},
																"nativeSrc": "6256:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6256:71:5"
															},
															"nativeSrc": "6256:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6256:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6381:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6381:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6394:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6394:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6405:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6405:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6390:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6390:3:5"
																		},
																		"nativeSrc": "6390:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6390:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6337:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6337:43:5"
																},
																"nativeSrc": "6337:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6337:72:5"
															},
															"nativeSrc": "6337:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6337:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6084:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6174:9:5",
														"nodeType": "YulTypedName",
														"src": "6174:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6186:6:5",
														"nodeType": "YulTypedName",
														"src": "6186:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6194:6:5",
														"nodeType": "YulTypedName",
														"src": "6194:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6205:4:5",
														"nodeType": "YulTypedName",
														"src": "6205:4:5",
														"type": ""
													}
												],
												"src": "6084:332:5"
											},
											{
												"body": {
													"nativeSrc": "6464:48:5",
													"nodeType": "YulBlock",
													"src": "6464:48:5",
													"statements": [
														{
															"nativeSrc": "6474:32:5",
															"nodeType": "YulAssignment",
															"src": "6474:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6499:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6499:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6492:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "6492:6:5"
																		},
																		"nativeSrc": "6492:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6492:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6485:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6485:6:5"
																},
																"nativeSrc": "6485:21:5",
																"nodeType": "YulFunctionCall",
																"src": "6485:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6474:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "6474:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6422:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6446:5:5",
														"nodeType": "YulTypedName",
														"src": "6446:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6456:7:5",
														"nodeType": "YulTypedName",
														"src": "6456:7:5",
														"type": ""
													}
												],
												"src": "6422:90:5"
											},
											{
												"body": {
													"nativeSrc": "6558:76:5",
													"nodeType": "YulBlock",
													"src": "6558:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6612:16:5",
																"nodeType": "YulBlock",
																"src": "6612:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6621:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6621:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6624:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6624:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6614:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6614:6:5"
																			},
																			"nativeSrc": "6614:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6614:12:5"
																		},
																		"nativeSrc": "6614:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6614:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6581:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6581:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6603:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "6603:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6588:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "6588:14:5"
																				},
																				"nativeSrc": "6588:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6588:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6578:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "6578:2:5"
																		},
																		"nativeSrc": "6578:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6578:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6571:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6571:6:5"
																},
																"nativeSrc": "6571:40:5",
																"nodeType": "YulFunctionCall",
																"src": "6571:40:5"
															},
															"nativeSrc": "6568:60:5",
															"nodeType": "YulIf",
															"src": "6568:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6518:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6551:5:5",
														"nodeType": "YulTypedName",
														"src": "6551:5:5",
														"type": ""
													}
												],
												"src": "6518:116:5"
											},
											{
												"body": {
													"nativeSrc": "6700:77:5",
													"nodeType": "YulBlock",
													"src": "6700:77:5",
													"statements": [
														{
															"nativeSrc": "6710:22:5",
															"nodeType": "YulAssignment",
															"src": "6710:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6725:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6725:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6719:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6719:5:5"
																},
																"nativeSrc": "6719:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6719:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6710:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6710:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6765:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6765:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6741:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "6741:23:5"
																},
																"nativeSrc": "6741:30:5",
																"nodeType": "YulFunctionCall",
																"src": "6741:30:5"
															},
															"nativeSrc": "6741:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "6741:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6640:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6678:6:5",
														"nodeType": "YulTypedName",
														"src": "6678:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6686:3:5",
														"nodeType": "YulTypedName",
														"src": "6686:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6694:5:5",
														"nodeType": "YulTypedName",
														"src": "6694:5:5",
														"type": ""
													}
												],
												"src": "6640:137:5"
											},
											{
												"body": {
													"nativeSrc": "6857:271:5",
													"nodeType": "YulBlock",
													"src": "6857:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6903:83:5",
																"nodeType": "YulBlock",
																"src": "6903:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6905:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "6905:77:5"
																			},
																			"nativeSrc": "6905:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6905:79:5"
																		},
																		"nativeSrc": "6905:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6905:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6878:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6878:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6887:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6887:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6874:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6874:3:5"
																		},
																		"nativeSrc": "6874:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6874:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6899:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6899:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6870:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6870:3:5"
																},
																"nativeSrc": "6870:32:5",
																"nodeType": "YulFunctionCall",
																"src": "6870:32:5"
															},
															"nativeSrc": "6867:119:5",
															"nodeType": "YulIf",
															"src": "6867:119:5"
														},
														{
															"nativeSrc": "6996:125:5",
															"nodeType": "YulBlock",
															"src": "6996:125:5",
															"statements": [
																{
																	"nativeSrc": "7011:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7011:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7025:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7025:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7015:6:5",
																			"nodeType": "YulTypedName",
																			"src": "7015:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7040:71:5",
																	"nodeType": "YulAssignment",
																	"src": "7040:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7083:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "7083:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7094:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "7094:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7079:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7079:3:5"
																				},
																				"nativeSrc": "7079:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7079:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7103:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7103:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7050:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "7050:28:5"
																		},
																		"nativeSrc": "7050:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7050:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7040:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "7040:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6783:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6827:9:5",
														"nodeType": "YulTypedName",
														"src": "6827:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6838:7:5",
														"nodeType": "YulTypedName",
														"src": "6838:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6850:6:5",
														"nodeType": "YulTypedName",
														"src": "6850:6:5",
														"type": ""
													}
												],
												"src": "6783:345:5"
											},
											{
												"body": {
													"nativeSrc": "7240:59:5",
													"nodeType": "YulBlock",
													"src": "7240:59:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7262:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7262:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7270:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7270:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7258:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7258:3:5"
																		},
																		"nativeSrc": "7258:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7258:14:5"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "7274:17:5",
																		"nodeType": "YulLiteral",
																		"src": "7274:17:5",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7251:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7251:6:5"
																},
																"nativeSrc": "7251:41:5",
																"nodeType": "YulFunctionCall",
																"src": "7251:41:5"
															},
															"nativeSrc": "7251:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "7251:41:5"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "7134:165:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7232:6:5",
														"nodeType": "YulTypedName",
														"src": "7232:6:5",
														"type": ""
													}
												],
												"src": "7134:165:5"
											},
											{
												"body": {
													"nativeSrc": "7451:220:5",
													"nodeType": "YulBlock",
													"src": "7451:220:5",
													"statements": [
														{
															"nativeSrc": "7461:74:5",
															"nodeType": "YulAssignment",
															"src": "7461:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7527:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7527:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7532:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7532:2:5",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7468:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "7468:58:5"
																},
																"nativeSrc": "7468:67:5",
																"nodeType": "YulFunctionCall",
																"src": "7468:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7461:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7461:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7633:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7633:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "7544:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "7544:88:5"
																},
																"nativeSrc": "7544:93:5",
																"nodeType": "YulFunctionCall",
																"src": "7544:93:5"
															},
															"nativeSrc": "7544:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "7544:93:5"
														},
														{
															"nativeSrc": "7646:19:5",
															"nodeType": "YulAssignment",
															"src": "7646:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7657:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7657:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7662:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7662:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7653:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7653:3:5"
																},
																"nativeSrc": "7653:12:5",
																"nodeType": "YulFunctionCall",
																"src": "7653:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7646:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7646:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7305:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7439:3:5",
														"nodeType": "YulTypedName",
														"src": "7439:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7447:3:5",
														"nodeType": "YulTypedName",
														"src": "7447:3:5",
														"type": ""
													}
												],
												"src": "7305:366:5"
											},
											{
												"body": {
													"nativeSrc": "7848:248:5",
													"nodeType": "YulBlock",
													"src": "7848:248:5",
													"statements": [
														{
															"nativeSrc": "7858:26:5",
															"nodeType": "YulAssignment",
															"src": "7858:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7870:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7870:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7881:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7881:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7866:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7866:3:5"
																},
																"nativeSrc": "7866:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7866:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7858:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7858:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7905:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7905:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7916:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7916:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7901:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7901:3:5"
																		},
																		"nativeSrc": "7901:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7901:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7924:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7924:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7930:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7930:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7920:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7920:3:5"
																		},
																		"nativeSrc": "7920:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7920:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7894:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7894:6:5"
																},
																"nativeSrc": "7894:47:5",
																"nodeType": "YulFunctionCall",
																"src": "7894:47:5"
															},
															"nativeSrc": "7894:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "7894:47:5"
														},
														{
															"nativeSrc": "7950:139:5",
															"nodeType": "YulAssignment",
															"src": "7950:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8084:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8084:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7958:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "7958:124:5"
																},
																"nativeSrc": "7958:131:5",
																"nodeType": "YulFunctionCall",
																"src": "7958:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7950:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7950:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7677:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7828:9:5",
														"nodeType": "YulTypedName",
														"src": "7828:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7843:4:5",
														"nodeType": "YulTypedName",
														"src": "7843:4:5",
														"type": ""
													}
												],
												"src": "7677:419:5"
											},
											{
												"body": {
													"nativeSrc": "8130:152:5",
													"nodeType": "YulBlock",
													"src": "8130:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8147:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8147:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8150:77:5",
																		"nodeType": "YulLiteral",
																		"src": "8150:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8140:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8140:6:5"
																},
																"nativeSrc": "8140:88:5",
																"nodeType": "YulFunctionCall",
																"src": "8140:88:5"
															},
															"nativeSrc": "8140:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "8140:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8244:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8244:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8247:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8247:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8237:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8237:6:5"
																},
																"nativeSrc": "8237:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8237:15:5"
															},
															"nativeSrc": "8237:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8237:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8268:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8268:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8271:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8271:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8261:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8261:6:5"
																},
																"nativeSrc": "8261:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8261:15:5"
															},
															"nativeSrc": "8261:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8261:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8102:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "8102:180:5"
											},
											{
												"body": {
													"nativeSrc": "8333:149:5",
													"nodeType": "YulBlock",
													"src": "8333:149:5",
													"statements": [
														{
															"nativeSrc": "8343:25:5",
															"nodeType": "YulAssignment",
															"src": "8343:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8366:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8366:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8348:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8348:17:5"
																},
																"nativeSrc": "8348:20:5",
																"nodeType": "YulFunctionCall",
																"src": "8348:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8343:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8343:1:5"
																}
															]
														},
														{
															"nativeSrc": "8377:25:5",
															"nodeType": "YulAssignment",
															"src": "8377:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8400:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8400:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8382:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8382:17:5"
																},
																"nativeSrc": "8382:20:5",
																"nodeType": "YulFunctionCall",
																"src": "8382:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8377:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8377:1:5"
																}
															]
														},
														{
															"nativeSrc": "8411:17:5",
															"nodeType": "YulAssignment",
															"src": "8411:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8423:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8423:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8426:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8426:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8419:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8419:3:5"
																},
																"nativeSrc": "8419:9:5",
																"nodeType": "YulFunctionCall",
																"src": "8419:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8411:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8411:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8453:22:5",
																"nodeType": "YulBlock",
																"src": "8453:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8455:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "8455:16:5"
																			},
																			"nativeSrc": "8455:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8455:18:5"
																		},
																		"nativeSrc": "8455:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8455:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8444:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8444:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8450:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8450:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8441:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "8441:2:5"
																},
																"nativeSrc": "8441:11:5",
																"nodeType": "YulFunctionCall",
																"src": "8441:11:5"
															},
															"nativeSrc": "8438:37:5",
															"nodeType": "YulIf",
															"src": "8438:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8288:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8319:1:5",
														"nodeType": "YulTypedName",
														"src": "8319:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8322:1:5",
														"nodeType": "YulTypedName",
														"src": "8322:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8328:4:5",
														"nodeType": "YulTypedName",
														"src": "8328:4:5",
														"type": ""
													}
												],
												"src": "8288:194:5"
											},
											{
												"body": {
													"nativeSrc": "8594:69:5",
													"nodeType": "YulBlock",
													"src": "8594:69:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8616:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8616:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8624:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8624:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8612:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8612:3:5"
																		},
																		"nativeSrc": "8612:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8612:14:5"
																	},
																	{
																		"hexValue": "7573657220616c72656164792068617320737461636b696e67",
																		"kind": "string",
																		"nativeSrc": "8628:27:5",
																		"nodeType": "YulLiteral",
																		"src": "8628:27:5",
																		"type": "",
																		"value": "user already has stacking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8605:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8605:6:5"
																},
																"nativeSrc": "8605:51:5",
																"nodeType": "YulFunctionCall",
																"src": "8605:51:5"
															},
															"nativeSrc": "8605:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "8605:51:5"
														}
													]
												},
												"name": "store_literal_in_memory_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0",
												"nativeSrc": "8488:175:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8586:6:5",
														"nodeType": "YulTypedName",
														"src": "8586:6:5",
														"type": ""
													}
												],
												"src": "8488:175:5"
											},
											{
												"body": {
													"nativeSrc": "8815:220:5",
													"nodeType": "YulBlock",
													"src": "8815:220:5",
													"statements": [
														{
															"nativeSrc": "8825:74:5",
															"nodeType": "YulAssignment",
															"src": "8825:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8891:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8891:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8896:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8896:2:5",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8832:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "8832:58:5"
																},
																"nativeSrc": "8832:67:5",
																"nodeType": "YulFunctionCall",
																"src": "8832:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8825:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8825:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8997:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8997:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0",
																	"nativeSrc": "8908:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "8908:88:5"
																},
																"nativeSrc": "8908:93:5",
																"nodeType": "YulFunctionCall",
																"src": "8908:93:5"
															},
															"nativeSrc": "8908:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "8908:93:5"
														},
														{
															"nativeSrc": "9010:19:5",
															"nodeType": "YulAssignment",
															"src": "9010:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9021:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9021:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9026:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9026:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9017:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9017:3:5"
																},
																"nativeSrc": "9017:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9017:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9010:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9010:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8669:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8803:3:5",
														"nodeType": "YulTypedName",
														"src": "8803:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8811:3:5",
														"nodeType": "YulTypedName",
														"src": "8811:3:5",
														"type": ""
													}
												],
												"src": "8669:366:5"
											},
											{
												"body": {
													"nativeSrc": "9212:248:5",
													"nodeType": "YulBlock",
													"src": "9212:248:5",
													"statements": [
														{
															"nativeSrc": "9222:26:5",
															"nodeType": "YulAssignment",
															"src": "9222:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9234:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9234:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9245:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9245:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9230:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9230:3:5"
																},
																"nativeSrc": "9230:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9230:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9222:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9222:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9269:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9269:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9280:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9280:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9265:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9265:3:5"
																		},
																		"nativeSrc": "9265:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9265:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9288:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9288:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9294:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9294:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9284:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9284:3:5"
																		},
																		"nativeSrc": "9284:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9284:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9258:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9258:6:5"
																},
																"nativeSrc": "9258:47:5",
																"nodeType": "YulFunctionCall",
																"src": "9258:47:5"
															},
															"nativeSrc": "9258:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "9258:47:5"
														},
														{
															"nativeSrc": "9314:139:5",
															"nodeType": "YulAssignment",
															"src": "9314:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9448:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9448:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9322:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "9322:124:5"
																},
																"nativeSrc": "9322:131:5",
																"nodeType": "YulFunctionCall",
																"src": "9322:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9314:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9314:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9041:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9192:9:5",
														"nodeType": "YulTypedName",
														"src": "9192:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9207:4:5",
														"nodeType": "YulTypedName",
														"src": "9207:4:5",
														"type": ""
													}
												],
												"src": "9041:419:5"
											},
											{
												"body": {
													"nativeSrc": "9510:147:5",
													"nodeType": "YulBlock",
													"src": "9510:147:5",
													"statements": [
														{
															"nativeSrc": "9520:25:5",
															"nodeType": "YulAssignment",
															"src": "9520:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9543:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9543:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9525:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9525:17:5"
																},
																"nativeSrc": "9525:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9525:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9520:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "9520:1:5"
																}
															]
														},
														{
															"nativeSrc": "9554:25:5",
															"nodeType": "YulAssignment",
															"src": "9554:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9577:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9577:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9559:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9559:17:5"
																},
																"nativeSrc": "9559:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9559:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9554:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "9554:1:5"
																}
															]
														},
														{
															"nativeSrc": "9588:16:5",
															"nodeType": "YulAssignment",
															"src": "9588:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9599:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9599:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9602:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9602:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9595:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9595:3:5"
																},
																"nativeSrc": "9595:9:5",
																"nodeType": "YulFunctionCall",
																"src": "9595:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9588:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9588:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9628:22:5",
																"nodeType": "YulBlock",
																"src": "9628:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9630:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "9630:16:5"
																			},
																			"nativeSrc": "9630:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9630:18:5"
																		},
																		"nativeSrc": "9630:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9630:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9620:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9620:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9623:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9623:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9617:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "9617:2:5"
																},
																"nativeSrc": "9617:10:5",
																"nodeType": "YulFunctionCall",
																"src": "9617:10:5"
															},
															"nativeSrc": "9614:36:5",
															"nodeType": "YulIf",
															"src": "9614:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9466:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9497:1:5",
														"nodeType": "YulTypedName",
														"src": "9497:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9500:1:5",
														"nodeType": "YulTypedName",
														"src": "9500:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9506:3:5",
														"nodeType": "YulTypedName",
														"src": "9506:3:5",
														"type": ""
													}
												],
												"src": "9466:191:5"
											},
											{
												"body": {
													"nativeSrc": "9817:288:5",
													"nodeType": "YulBlock",
													"src": "9817:288:5",
													"statements": [
														{
															"nativeSrc": "9827:26:5",
															"nodeType": "YulAssignment",
															"src": "9827:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9839:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9839:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9850:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9850:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9835:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9835:3:5"
																},
																"nativeSrc": "9835:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9835:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9827:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9827:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9907:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9907:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9920:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9920:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9931:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9931:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9916:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9916:3:5"
																		},
																		"nativeSrc": "9916:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9916:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9863:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9863:43:5"
																},
																"nativeSrc": "9863:71:5",
																"nodeType": "YulFunctionCall",
																"src": "9863:71:5"
															},
															"nativeSrc": "9863:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "9863:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9988:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9988:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10001:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10001:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10012:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10012:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9997:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9997:3:5"
																		},
																		"nativeSrc": "9997:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9997:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9944:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9944:43:5"
																},
																"nativeSrc": "9944:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9944:72:5"
															},
															"nativeSrc": "9944:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9944:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10070:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10070:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10083:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10083:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10094:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10094:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10079:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10079:3:5"
																		},
																		"nativeSrc": "10079:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10079:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10026:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10026:43:5"
																},
																"nativeSrc": "10026:72:5",
																"nodeType": "YulFunctionCall",
																"src": "10026:72:5"
															},
															"nativeSrc": "10026:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "10026:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9663:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9773:9:5",
														"nodeType": "YulTypedName",
														"src": "9773:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9785:6:5",
														"nodeType": "YulTypedName",
														"src": "9785:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9793:6:5",
														"nodeType": "YulTypedName",
														"src": "9793:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9801:6:5",
														"nodeType": "YulTypedName",
														"src": "9801:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9812:4:5",
														"nodeType": "YulTypedName",
														"src": "9812:4:5",
														"type": ""
													}
												],
												"src": "9663:442:5"
											},
											{
												"body": {
													"nativeSrc": "10217:75:5",
													"nodeType": "YulBlock",
													"src": "10217:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10239:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10239:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10247:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10247:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10235:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10235:3:5"
																		},
																		"nativeSrc": "10235:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10235:14:5"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "10251:33:5",
																		"nodeType": "YulLiteral",
																		"src": "10251:33:5",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10228:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10228:6:5"
																},
																"nativeSrc": "10228:57:5",
																"nodeType": "YulFunctionCall",
																"src": "10228:57:5"
															},
															"nativeSrc": "10228:57:5",
															"nodeType": "YulExpressionStatement",
															"src": "10228:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "10111:181:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10209:6:5",
														"nodeType": "YulTypedName",
														"src": "10209:6:5",
														"type": ""
													}
												],
												"src": "10111:181:5"
											},
											{
												"body": {
													"nativeSrc": "10444:220:5",
													"nodeType": "YulBlock",
													"src": "10444:220:5",
													"statements": [
														{
															"nativeSrc": "10454:74:5",
															"nodeType": "YulAssignment",
															"src": "10454:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10520:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10520:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10525:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10525:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10461:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "10461:58:5"
																},
																"nativeSrc": "10461:67:5",
																"nodeType": "YulFunctionCall",
																"src": "10461:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10454:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10454:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10626:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10626:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "10537:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "10537:88:5"
																},
																"nativeSrc": "10537:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10537:93:5"
															},
															"nativeSrc": "10537:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "10537:93:5"
														},
														{
															"nativeSrc": "10639:19:5",
															"nodeType": "YulAssignment",
															"src": "10639:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10650:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10650:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10655:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10655:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10646:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10646:3:5"
																},
																"nativeSrc": "10646:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10646:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10639:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10639:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10298:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10432:3:5",
														"nodeType": "YulTypedName",
														"src": "10432:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10440:3:5",
														"nodeType": "YulTypedName",
														"src": "10440:3:5",
														"type": ""
													}
												],
												"src": "10298:366:5"
											},
											{
												"body": {
													"nativeSrc": "10841:248:5",
													"nodeType": "YulBlock",
													"src": "10841:248:5",
													"statements": [
														{
															"nativeSrc": "10851:26:5",
															"nodeType": "YulAssignment",
															"src": "10851:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10863:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10863:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10874:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10874:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10859:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10859:3:5"
																},
																"nativeSrc": "10859:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10859:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10851:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10851:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10898:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10898:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10909:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10909:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10894:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10894:3:5"
																		},
																		"nativeSrc": "10894:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10894:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10917:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10917:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10923:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10923:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10913:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10913:3:5"
																		},
																		"nativeSrc": "10913:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10913:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10887:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10887:6:5"
																},
																"nativeSrc": "10887:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10887:47:5"
															},
															"nativeSrc": "10887:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10887:47:5"
														},
														{
															"nativeSrc": "10943:139:5",
															"nodeType": "YulAssignment",
															"src": "10943:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11077:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "11077:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10951:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10951:124:5"
																},
																"nativeSrc": "10951:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10951:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10943:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10943:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10670:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10821:9:5",
														"nodeType": "YulTypedName",
														"src": "10821:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10836:4:5",
														"nodeType": "YulTypedName",
														"src": "10836:4:5",
														"type": ""
													}
												],
												"src": "10670:419:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$290_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$290_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot withdraw 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Too early withdraw!\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0(memPtr) {\n\n        mstore(add(memPtr, 0), \"user already has stacking\")\n\n    }\n\n    function abi_encode_t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x821460F5 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xFC0E3D90 EQ PUSH2 0x195 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x7BC74225 EQ PUSH2 0xEE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x1B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2 PUSH2 0x467 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBC PUSH2 0x47A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xAFB JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF6 PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP3 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x78A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19D PUSH2 0x836 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP3 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x88A JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD GT PUSH2 0x25F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29D SWAP1 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH0 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP3 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x322 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 ADD MLOAD PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0xE12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x453 SWAP2 SWAP1 PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x465 PUSH2 0x8D7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x46F PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x478 PUSH0 PUSH2 0x967 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x88A JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x534 JUMPI POP PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST PUSH2 0x573 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56A SWAP1 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP1 TIMESTAMP PUSH2 0x5C3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x682 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x757 PUSH2 0x8D7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7BA PUSH2 0x8E0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP2 SWAP1 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x833 DUP2 PUSH2 0x967 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C5 SWAP1 PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x8E8 PUSH2 0xA2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x906 PUSH2 0x78A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x965 JUMPI PUSH2 0x929 PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95C SWAP2 SWAP1 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA73 PUSH2 0xA6E PUSH2 0xA69 DUP5 PUSH2 0xA31 JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST PUSH2 0xA31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA84 DUP3 PUSH2 0xA59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA95 DUP3 PUSH2 0xA7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA5 DUP2 PUSH2 0xA8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xABE PUSH0 DUP4 ADD DUP5 PUSH2 0xA9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xADA DUP2 PUSH2 0xAC8 JUMP JUMPDEST DUP2 EQ PUSH2 0xAE4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF5 DUP2 PUSH2 0xAD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB11 JUMPI PUSH2 0xB10 PUSH2 0xAC4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB1E DUP6 DUP3 DUP7 ADD PUSH2 0xAE7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB2F DUP6 DUP3 DUP7 ADD PUSH2 0xAE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB42 DUP2 PUSH2 0xAC8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB5B PUSH0 DUP4 ADD DUP5 PUSH2 0xB39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB6B DUP3 PUSH2 0xA31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7B DUP2 PUSH2 0xB61 JUMP JUMPDEST DUP2 EQ PUSH2 0xB85 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB96 DUP2 PUSH2 0xB72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB1 JUMPI PUSH2 0xBB0 PUSH2 0xAC4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBBE DUP5 DUP3 DUP6 ADD PUSH2 0xB88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBDA PUSH0 DUP4 ADD DUP6 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xBE7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB39 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBF7 DUP2 PUSH2 0xB61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC10 PUSH0 DUP4 ADD DUP5 PUSH2 0xBEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC5A PUSH1 0x11 DUP4 PUSH2 0xC16 JUMP JUMPDEST SWAP2 POP PUSH2 0xC65 DUP3 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC87 DUP2 PUSH2 0xC4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6F206561726C792077697468647261772100000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCC2 PUSH1 0x13 DUP4 PUSH2 0xC16 JUMP JUMPDEST SWAP2 POP PUSH2 0xCCD DUP3 PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCEF DUP2 PUSH2 0xCB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD09 PUSH0 DUP4 ADD DUP6 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xD16 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB39 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD31 DUP2 PUSH2 0xD1D JUMP JUMPDEST DUP2 EQ PUSH2 0xD3B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD4C DUP2 PUSH2 0xD28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD67 JUMPI PUSH2 0xD66 PUSH2 0xAC4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD74 DUP5 DUP3 DUP6 ADD PUSH2 0xD3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDB1 PUSH1 0xF DUP4 PUSH2 0xC16 JUMP JUMPDEST SWAP2 POP PUSH2 0xDBC DUP3 PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDDE DUP2 PUSH2 0xDA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE1C DUP3 PUSH2 0xAC8 JUMP JUMPDEST SWAP2 POP PUSH2 0xE27 DUP4 PUSH2 0xAC8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE3F JUMPI PUSH2 0xE3E PUSH2 0xDE5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7573657220616C72656164792068617320737461636B696E6700000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE79 PUSH1 0x19 DUP4 PUSH2 0xC16 JUMP JUMPDEST SWAP2 POP PUSH2 0xE84 DUP3 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEA6 DUP2 PUSH2 0xE6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEB7 DUP3 PUSH2 0xAC8 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC2 DUP4 PUSH2 0xAC8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEDA JUMPI PUSH2 0xED9 PUSH2 0xDE5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEF3 PUSH0 DUP4 ADD DUP7 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xF00 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xF0D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB39 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF49 PUSH1 0x1F DUP4 PUSH2 0xC16 JUMP JUMPDEST SWAP2 POP PUSH2 0xF54 DUP3 PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF76 DUP2 PUSH2 0xF3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xE0 0xA8 0xAB BALANCE PUSH7 0x4ACEE5026BA650 DUP1 POP 0xA9 0xEE 0x2D PUSH24 0x47A04BE281FBDFC437788AADC464736F6C634300081A0033 ",
							"sourceMap": "232:2001:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1673:557;;;:::i;:::-;;2293:101:0;;;:::i;:::-;;292:26:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;745:602;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1574:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;325:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;362:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1353::4;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1673:557;2261:21:1;:19;:21::i;:::-;1725:22:4::1;1750:11;:23;1762:10;1750:23;;;;;;;;;;;;;;;1725:48;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1816:1;1791:9;:22;;;:26;1783:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1883:15;1857:9;:22;;;:41;;1849:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1941:12;1956;;;;;;;;;;;:21;;;1978:10;1990:9;:22;;;1956:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1941:72;;2031:7;2023:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;2084:9;:22;;;2069:11;;:37;;;;;;;:::i;:::-;;;;;;;;2143:11;;;;;;;;2149:1;2143:11;;;;2152:1;2143:11;;::::0;2117::::1;:23;2129:10;2117:23;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;2188:10;2178:45;;;2200:9;:22;;;2178:45;;;;;;:::i;:::-;;;;;;;;1715:515;;2303:20:1::0;:18;:20::i;:::-;1673:557:4:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;292:26:4:-;;;;;;;;;;;;;:::o;745:602::-;2261:21:1;:19;:21::i;:::-;885:1:4::1;845:11;:23;857:10;845:23;;;;;;;;;;;;;;;:36;;;:41;:86;;;;;930:1;890:11;:23;902:10;890:23;;;;;;;;;;;;;;;:36;;;:41;845:86;824:158;;;;;;;;;;;;:::i;:::-;;;;;;;;;1040:6;1001:11;:23;1013:10;1001:23;;;;;;;;;;;;;;;:36;;:45;;;;1113:6;1095:15;:24;;;;:::i;:::-;1056:11;:23;1068:10;1056:23;;;;;;;;;;;;;;;:36;;:63;;;;1138:12;1153;;;;;;;;;;;:25;;;1179:10;1199:4;1206:6;1153:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1138:75;;1231:7;1223:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;1284:6;1269:11;;:21;;;;;;;:::i;:::-;;;;;;;;1321:10;1314:26;;;1333:6;1314:26;;;;;;:::i;:::-;;;;;;;;814:533;2303:20:1::0;:18;:20::i;:::-;745:602:4;;:::o;1574:89::-;1619:7;1645:11;;1638:18;;1574:89;:::o;325:26::-;;;;:::o;362:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2543:215::-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1353::4:-;1393:20;1415;1447:23;1473:11;:23;1485:10;1473:23;;;;;;;;;;;;;;;1447:49;;1514:9;:22;;;1538:9;:22;;;1506:55;;;;;1353:215;;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;7:126:5:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1133:117::-;1242:1;1239;1232:12;1379:77;1416:7;1445:5;1434:16;;1379:77;;;:::o;1462:122::-;1535:24;1553:5;1535:24;:::i;:::-;1528:5;1525:35;1515:63;;1574:1;1571;1564:12;1515:63;1462:122;:::o;1590:139::-;1636:5;1674:6;1661:20;1652:29;;1690:33;1717:5;1690:33;:::i;:::-;1590:139;;;;:::o;1735:474::-;1803:6;1811;1860:2;1848:9;1839:7;1835:23;1831:32;1828:119;;;1866:79;;:::i;:::-;1828:119;1986:1;2011:53;2056:7;2047:6;2036:9;2032:22;2011:53;:::i;:::-;2001:63;;1957:117;2113:2;2139:53;2184:7;2175:6;2164:9;2160:22;2139:53;:::i;:::-;2129:63;;2084:118;1735:474;;;;;:::o;2215:118::-;2302:24;2320:5;2302:24;:::i;:::-;2297:3;2290:37;2215:118;;:::o;2339:222::-;2432:4;2470:2;2459:9;2455:18;2447:26;;2483:71;2551:1;2540:9;2536:17;2527:6;2483:71;:::i;:::-;2339:222;;;;:::o;2567:96::-;2604:7;2633:24;2651:5;2633:24;:::i;:::-;2622:35;;2567:96;;;:::o;2669:122::-;2742:24;2760:5;2742:24;:::i;:::-;2735:5;2732:35;2722:63;;2781:1;2778;2771:12;2722:63;2669:122;:::o;2797:139::-;2843:5;2881:6;2868:20;2859:29;;2897:33;2924:5;2897:33;:::i;:::-;2797:139;;;;:::o;2942:329::-;3001:6;3050:2;3038:9;3029:7;3025:23;3021:32;3018:119;;;3056:79;;:::i;:::-;3018:119;3176:1;3201:53;3246:7;3237:6;3226:9;3222:22;3201:53;:::i;:::-;3191:63;;3147:117;2942:329;;;;:::o;3277:332::-;3398:4;3436:2;3425:9;3421:18;3413:26;;3449:71;3517:1;3506:9;3502:17;3493:6;3449:71;:::i;:::-;3530:72;3598:2;3587:9;3583:18;3574:6;3530:72;:::i;:::-;3277:332;;;;;:::o;3615:118::-;3702:24;3720:5;3702:24;:::i;:::-;3697:3;3690:37;3615:118;;:::o;3739:222::-;3832:4;3870:2;3859:9;3855:18;3847:26;;3883:71;3951:1;3940:9;3936:17;3927:6;3883:71;:::i;:::-;3739:222;;;;:::o;3967:169::-;4051:11;4085:6;4080:3;4073:19;4125:4;4120:3;4116:14;4101:29;;3967:169;;;;:::o;4142:167::-;4282:19;4278:1;4270:6;4266:14;4259:43;4142:167;:::o;4315:366::-;4457:3;4478:67;4542:2;4537:3;4478:67;:::i;:::-;4471:74;;4554:93;4643:3;4554:93;:::i;:::-;4672:2;4667:3;4663:12;4656:19;;4315:366;;;:::o;4687:419::-;4853:4;4891:2;4880:9;4876:18;4868:26;;4940:9;4934:4;4930:20;4926:1;4915:9;4911:17;4904:47;4968:131;5094:4;4968:131;:::i;:::-;4960:139;;4687:419;;;:::o;5112:169::-;5252:21;5248:1;5240:6;5236:14;5229:45;5112:169;:::o;5287:366::-;5429:3;5450:67;5514:2;5509:3;5450:67;:::i;:::-;5443:74;;5526:93;5615:3;5526:93;:::i;:::-;5644:2;5639:3;5635:12;5628:19;;5287:366;;;:::o;5659:419::-;5825:4;5863:2;5852:9;5848:18;5840:26;;5912:9;5906:4;5902:20;5898:1;5887:9;5883:17;5876:47;5940:131;6066:4;5940:131;:::i;:::-;5932:139;;5659:419;;;:::o;6084:332::-;6205:4;6243:2;6232:9;6228:18;6220:26;;6256:71;6324:1;6313:9;6309:17;6300:6;6256:71;:::i;:::-;6337:72;6405:2;6394:9;6390:18;6381:6;6337:72;:::i;:::-;6084:332;;;;;:::o;6422:90::-;6456:7;6499:5;6492:13;6485:21;6474:32;;6422:90;;;:::o;6518:116::-;6588:21;6603:5;6588:21;:::i;:::-;6581:5;6578:32;6568:60;;6624:1;6621;6614:12;6568:60;6518:116;:::o;6640:137::-;6694:5;6725:6;6719:13;6710:22;;6741:30;6765:5;6741:30;:::i;:::-;6640:137;;;;:::o;6783:345::-;6850:6;6899:2;6887:9;6878:7;6874:23;6870:32;6867:119;;;6905:79;;:::i;:::-;6867:119;7025:1;7050:61;7103:7;7094:6;7083:9;7079:22;7050:61;:::i;:::-;7040:71;;6996:125;6783:345;;;;:::o;7134:165::-;7274:17;7270:1;7262:6;7258:14;7251:41;7134:165;:::o;7305:366::-;7447:3;7468:67;7532:2;7527:3;7468:67;:::i;:::-;7461:74;;7544:93;7633:3;7544:93;:::i;:::-;7662:2;7657:3;7653:12;7646:19;;7305:366;;;:::o;7677:419::-;7843:4;7881:2;7870:9;7866:18;7858:26;;7930:9;7924:4;7920:20;7916:1;7905:9;7901:17;7894:47;7958:131;8084:4;7958:131;:::i;:::-;7950:139;;7677:419;;;:::o;8102:180::-;8150:77;8147:1;8140:88;8247:4;8244:1;8237:15;8271:4;8268:1;8261:15;8288:194;8328:4;8348:20;8366:1;8348:20;:::i;:::-;8343:25;;8382:20;8400:1;8382:20;:::i;:::-;8377:25;;8426:1;8423;8419:9;8411:17;;8450:1;8444:4;8441:11;8438:37;;;8455:18;;:::i;:::-;8438:37;8288:194;;;;:::o;8488:175::-;8628:27;8624:1;8616:6;8612:14;8605:51;8488:175;:::o;8669:366::-;8811:3;8832:67;8896:2;8891:3;8832:67;:::i;:::-;8825:74;;8908:93;8997:3;8908:93;:::i;:::-;9026:2;9021:3;9017:12;9010:19;;8669:366;;;:::o;9041:419::-;9207:4;9245:2;9234:9;9230:18;9222:26;;9294:9;9288:4;9284:20;9280:1;9269:9;9265:17;9258:47;9322:131;9448:4;9322:131;:::i;:::-;9314:139;;9041:419;;;:::o;9466:191::-;9506:3;9525:20;9543:1;9525:20;:::i;:::-;9520:25;;9559:20;9577:1;9559:20;:::i;:::-;9554:25;;9602:1;9599;9595:9;9588:16;;9623:3;9620:1;9617:10;9614:36;;;9630:18;;:::i;:::-;9614:36;9466:191;;;;:::o;9663:442::-;9812:4;9850:2;9839:9;9835:18;9827:26;;9863:71;9931:1;9920:9;9916:17;9907:6;9863:71;:::i;:::-;9944:72;10012:2;10001:9;9997:18;9988:6;9944:72;:::i;:::-;10026;10094:2;10083:9;10079:18;10070:6;10026:72;:::i;:::-;9663:442;;;;;;:::o;10111:181::-;10251:33;10247:1;10239:6;10235:14;10228:57;10111:181;:::o;10298:366::-;10440:3;10461:67;10525:2;10520:3;10461:67;:::i;:::-;10454:74;;10537:93;10626:3;10537:93;:::i;:::-;10655:2;10650:3;10646:12;10639:19;;10298:366;;;:::o;10670:419::-;10836:4;10874:2;10863:9;10859:18;10851:26;;10923:9;10917:4;10913:20;10909:1;10898:9;10894:17;10887:47;10951:131;11077:4;10951:131;:::i;:::-;10943:139;;10670:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "803800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getStake()": "infinite",
								"getTotalStake()": "2521",
								"owner()": "2559",
								"renounceOwnership()": "infinite",
								"stake(uint256,uint256)": "infinite",
								"stakingToken()": "infinite",
								"totalStaked()": "2425",
								"transferOwnership(address)": "infinite",
								"userStaking(address)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 232,
									"end": 2233,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 232,
									"end": 2233,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 232,
									"end": 2233,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 636,
									"end": 735,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 636,
									"end": 735,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 636,
									"end": 735,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 636,
									"end": 735,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 636,
									"end": 735,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 636,
									"end": 735,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 636,
									"end": 735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 636,
									"end": 735,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 678,
									"end": 688,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 715,
									"end": 728,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 700,
									"end": 712,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 700,
									"end": 712,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 700,
									"end": 728,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 636,
									"end": 735,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 232,
									"end": 2233,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 232,
									"end": 2233,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1138,
									"end": 1147,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1129,
									"end": 1136,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1121,
									"end": 1153,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1156,
									"end": 1235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1362,
									"end": 1368,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1360,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1347,
									"end": 1369,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1301,
									"end": 1379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1247,
									"end": 1389,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1507,
									"end": 1512,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1489,
									"end": 1513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1487,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1477,
									"end": 1514,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1520,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1619,
									"end": 1623,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1657,
									"end": 1659,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1646,
									"end": 1655,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1660,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1660,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1738,
									"end": 1739,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1727,
									"end": 1736,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1723,
									"end": 1740,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1714,
									"end": 1720,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1670,
									"end": 1741,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 232,
									"end": 2233,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 232,
									"end": 2233,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 232,
									"end": 2233,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 2233,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 232,
									"end": 2233,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 2233,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 2233,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 232,
									"end": 2233,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 2233,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2e0a8ab31664acee5026ba6508050a9ee2d7747a04be281fbdfc437788aadc464736f6c634300081a0033",
									".code": [
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "817B1CD2"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "817B1CD2"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "821460F5"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "FC0E3D90"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "3CCFD60B"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "72F702F3"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "7B0472F0"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "7BC74225"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 2233,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 2230,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1673,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1673,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1673,
											"end": 2230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 2230,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1673,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 2230,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 292,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 745,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 745,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1574,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1574,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 325,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 325,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 362,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 362,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 362,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1353,
											"end": 1568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1353,
											"end": 1568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 2230,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1673,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1750,
											"end": 1773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1772,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1750,
											"end": 1773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1750,
											"end": 1773,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1750,
											"end": 1773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1750,
											"end": 1773,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1750,
											"end": 1773,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1750,
											"end": 1773,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1750,
											"end": 1773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1750,
											"end": 1773,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1750,
											"end": 1773,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1750,
											"end": 1773,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1750,
											"end": 1773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1750,
											"end": 1773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1773,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1813,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1813,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1817,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1783,
											"end": 1839,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1783,
											"end": 1839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1883,
											"end": 1898,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1866,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1898,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1898,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1849,
											"end": 1922,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1849,
											"end": 1922,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1956,
											"end": 1968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1968,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1956,
											"end": 1968,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1968,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1956,
											"end": 1968,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1956,
											"end": 1977,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1978,
											"end": 1988,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 1999,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2012,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1956,
											"end": 2013,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 2013,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1956,
											"end": 2013,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1956,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 2013,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 2013,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2031,
											"end": 2038,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2023,
											"end": 2058,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2023,
											"end": 2058,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2093,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2106,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2106,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2069,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2069,
											"end": 2106,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2154,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2154,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2154,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2154,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2154,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2154,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2154,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2154,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2117,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2139,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2117,
											"end": 2140,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2117,
											"end": 2140,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2140,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2140,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2117,
											"end": 2140,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2140,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2140,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2117,
											"end": 2140,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2140,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2154,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2198,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 2200,
											"end": 2209,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2222,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2222,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2178,
											"end": 2223,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2223,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1715,
											"end": 2230,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1715,
											"end": 2230,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 292,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 292,
											"end": 318,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 292,
											"end": 318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 867,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 868,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 845,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 881,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 881,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 845,
											"end": 931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 931,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 845,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 845,
											"end": 931,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 845,
											"end": 931,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 930,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 912,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 913,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 890,
											"end": 926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 890,
											"end": 926,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 890,
											"end": 926,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 890,
											"end": 931,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 845,
											"end": 931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 845,
											"end": 931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 824,
											"end": 982,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 824,
											"end": 982,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1046,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1013,
											"end": 1023,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1024,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1046,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1046,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1046,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1046,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1119,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1095,
											"end": 1110,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1095,
											"end": 1119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1095,
											"end": 1119,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1095,
											"end": 1119,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1095,
											"end": 1119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1095,
											"end": 1119,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1095,
											"end": 1119,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1095,
											"end": 1119,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1078,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1079,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1056,
											"end": 1092,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1119,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1119,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1119,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1119,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1153,
											"end": 1165,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1153,
											"end": 1178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1179,
											"end": 1189,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1199,
											"end": 1203,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1206,
											"end": 1212,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1153,
											"end": 1213,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1153,
											"end": 1213,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1153,
											"end": 1213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1223,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1223,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1290,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1269,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1269,
											"end": 1290,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1290,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 1331,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 1333,
											"end": 1339,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1314,
											"end": 1340,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1340,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 814,
											"end": 1347,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 1347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1656,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1645,
											"end": 1656,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 325,
											"end": 351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 362,
											"end": 406,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 362,
											"end": 406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1393,
											"end": 1413,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1435,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1470,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1484,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1495,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1536,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1536,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1536,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1560,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1538,
											"end": 1560,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1560,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1561,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1561,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 485,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 582,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 582,
											"end": 619,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 569,
											"end": 619,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 569,
											"end": 619,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 631,
											"end": 790,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 631,
											"end": 790,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 732,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 732,
											"end": 783,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 732,
											"end": 783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 720,
											"end": 784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 631,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 918,
											"end": 944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 918,
											"end": 944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 954,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1240,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1434,
											"end": 1450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1434,
											"end": 1450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1553,
											"end": 1558,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1535,
											"end": 1559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1533,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1560,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1576,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1681,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1690,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1809,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1817,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1860,
											"end": 1862,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 1857,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1858,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1863,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1866,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1866,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1945,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1866,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 1987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2056,
											"end": 2063,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2053,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2054,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2011,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 2074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2113,
											"end": 2115,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2184,
											"end": 2191,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2164,
											"end": 2173,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2182,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2139,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2192,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2139,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2192,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2202,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 2209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2320,
											"end": 2325,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2302,
											"end": 2326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2300,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2290,
											"end": 2327,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2472,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2468,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2549,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2536,
											"end": 2553,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2533,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2483,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2633,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2657,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2791,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2669,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2760,
											"end": 2765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2742,
											"end": 2766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2735,
											"end": 2740,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2732,
											"end": 2767,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2722,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2722,
											"end": 2785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2783,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2722,
											"end": 2785,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2722,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2936,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2797,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 2888,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 2888,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2924,
											"end": 2929,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2897,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 2930,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2897,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2936,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2936,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 3271,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2942,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3007,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3052,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3038,
											"end": 3047,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3029,
											"end": 3036,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3048,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3053,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3137,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3018,
											"end": 3137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3056,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3056,
											"end": 3135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3135,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3056,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3137,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3018,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3176,
											"end": 3177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3246,
											"end": 3253,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3226,
											"end": 3235,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3201,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3201,
											"end": 3254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3201,
											"end": 3254,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3201,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3191,
											"end": 3254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3191,
											"end": 3254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 3271,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 3271,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 3271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 3271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 3271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3609,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3277,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3398,
											"end": 3402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3421,
											"end": 3439,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3517,
											"end": 3518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3515,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3502,
											"end": 3519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3449,
											"end": 3520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3520,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3449,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3598,
											"end": 3600,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3587,
											"end": 3596,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3580,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3530,
											"end": 3602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3602,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3530,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3609,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3609,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3733,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3615,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3720,
											"end": 3725,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3702,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3726,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3702,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3697,
											"end": 3700,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3690,
											"end": 3727,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3961,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3739,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3832,
											"end": 3836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3872,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3859,
											"end": 3868,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 3873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 3873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3883,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3951,
											"end": 3952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3949,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3933,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3883,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3883,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3883,
											"end": 3954,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3883,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3961,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3961,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 4136,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3967,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4051,
											"end": 4062,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4091,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4083,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4073,
											"end": 4092,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4129,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4120,
											"end": 4123,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 4136,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 4136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 4136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 4136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4309,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4142,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4282,
											"end": 4301,
											"name": "PUSH",
											"source": 5,
											"value": "43616E6E6F742077697468647261772030000000000000000000000000000000"
										},
										{
											"begin": 4278,
											"end": 4279,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4276,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4266,
											"end": 4280,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4259,
											"end": 4302,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4309,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4315,
											"end": 4681,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4315,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4457,
											"end": 4460,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4542,
											"end": 4544,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4537,
											"end": 4540,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4478,
											"end": 4545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4545,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4478,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4545,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4545,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 4643,
											"end": 4646,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4554,
											"end": 4647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4647,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 4554,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4672,
											"end": 4674,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4667,
											"end": 4670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4663,
											"end": 4675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4656,
											"end": 4675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4656,
											"end": 4675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4315,
											"end": 4681,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4315,
											"end": 4681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4315,
											"end": 4681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4315,
											"end": 4681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 5106,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4687,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 4857,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4893,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4880,
											"end": 4889,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4868,
											"end": 4894,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4868,
											"end": 4894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4940,
											"end": 4949,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4934,
											"end": 4938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4950,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4926,
											"end": 4927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4915,
											"end": 4924,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4911,
											"end": 4928,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 4951,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 5094,
											"end": 5098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4968,
											"end": 5099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 5099,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4968,
											"end": 5099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 5099,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 5099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 5106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 5106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 5106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 5106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5281,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5112,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5273,
											"name": "PUSH",
											"source": 5,
											"value": "546F6F206561726C792077697468647261772100000000000000000000000000"
										},
										{
											"begin": 5248,
											"end": 5249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5250,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5229,
											"end": 5274,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5287,
											"end": 5653,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5287,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5429,
											"end": 5432,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 5514,
											"end": 5516,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 5509,
											"end": 5512,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5450,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5450,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5450,
											"end": 5517,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 5450,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5443,
											"end": 5517,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5443,
											"end": 5517,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 5615,
											"end": 5618,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5526,
											"end": 5619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5619,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 5526,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5644,
											"end": 5646,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5639,
											"end": 5642,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5647,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5287,
											"end": 5653,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5287,
											"end": 5653,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5287,
											"end": 5653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5287,
											"end": 5653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5659,
											"end": 6078,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 5659,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5825,
											"end": 5829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5852,
											"end": 5861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5848,
											"end": 5866,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5840,
											"end": 5866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5840,
											"end": 5866,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5906,
											"end": 5910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5902,
											"end": 5922,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5898,
											"end": 5899,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5887,
											"end": 5896,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5883,
											"end": 5900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 5923,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 6066,
											"end": 6070,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5940,
											"end": 6071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6071,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 5940,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5932,
											"end": 6071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5932,
											"end": 6071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5659,
											"end": 6078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5659,
											"end": 6078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5659,
											"end": 6078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5659,
											"end": 6078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6084,
											"end": 6416,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6084,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6205,
											"end": 6209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6243,
											"end": 6245,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6232,
											"end": 6241,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6256,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 6324,
											"end": 6325,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6313,
											"end": 6322,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6309,
											"end": 6326,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6300,
											"end": 6306,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6256,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 6256,
											"end": 6327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6256,
											"end": 6327,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 6256,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 6405,
											"end": 6407,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6394,
											"end": 6403,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6381,
											"end": 6387,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 6337,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6409,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 6337,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6084,
											"end": 6416,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6084,
											"end": 6416,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6084,
											"end": 6416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6084,
											"end": 6416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6084,
											"end": 6416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6084,
											"end": 6416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6512,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 6422,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6456,
											"end": 6463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6504,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6492,
											"end": 6505,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6485,
											"end": 6506,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6474,
											"end": 6506,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6474,
											"end": 6506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6512,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6512,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6634,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 6518,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 6588,
											"end": 6609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6609,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 6588,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6581,
											"end": 6586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6578,
											"end": 6610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6568,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 6568,
											"end": 6628,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6624,
											"end": 6625,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6621,
											"end": 6622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6626,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6568,
											"end": 6628,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 6568,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6634,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6777,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6640,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6694,
											"end": 6699,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6725,
											"end": 6731,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6719,
											"end": 6732,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6741,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 6765,
											"end": 6770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6741,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 6741,
											"end": 6771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6741,
											"end": 6771,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 6741,
											"end": 6771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6777,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6777,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6777,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6777,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6783,
											"end": 7128,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6783,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6850,
											"end": 6856,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6899,
											"end": 6901,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6887,
											"end": 6896,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6878,
											"end": 6885,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6874,
											"end": 6897,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6902,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6867,
											"end": 6986,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6867,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 6867,
											"end": 6986,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6905,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 6905,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 6905,
											"end": 6984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6905,
											"end": 6984,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 6905,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6867,
											"end": 6986,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 6867,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 7103,
											"end": 7110,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7100,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7092,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7079,
											"end": 7101,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7050,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7050,
											"end": 7111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7050,
											"end": 7111,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 7050,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7040,
											"end": 7111,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7040,
											"end": 7111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6996,
											"end": 7121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6783,
											"end": 7128,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6783,
											"end": 7128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6783,
											"end": 7128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6783,
											"end": 7128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6783,
											"end": 7128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7134,
											"end": 7299,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 7134,
											"end": 7299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7274,
											"end": 7291,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 7270,
											"end": 7271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7262,
											"end": 7268,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7258,
											"end": 7272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7251,
											"end": 7292,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7134,
											"end": 7299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7134,
											"end": 7299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7671,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 7305,
											"end": 7671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7447,
											"end": 7450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7468,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 7532,
											"end": 7534,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 7527,
											"end": 7530,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7468,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 7468,
											"end": 7535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7468,
											"end": 7535,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 7468,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7461,
											"end": 7535,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7461,
											"end": 7535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7544,
											"end": 7637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 7633,
											"end": 7636,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7544,
											"end": 7637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 7544,
											"end": 7637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7544,
											"end": 7637,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 7544,
											"end": 7637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7662,
											"end": 7664,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7657,
											"end": 7660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7653,
											"end": 7665,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7665,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7665,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7671,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7677,
											"end": 8096,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 7677,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7843,
											"end": 7847,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7881,
											"end": 7883,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7870,
											"end": 7879,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7866,
											"end": 7884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7858,
											"end": 7884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7858,
											"end": 7884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7930,
											"end": 7939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7924,
											"end": 7928,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7916,
											"end": 7917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7905,
											"end": 7914,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7901,
											"end": 7918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7894,
											"end": 7941,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7958,
											"end": 8089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 8084,
											"end": 8088,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7958,
											"end": 8089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 7958,
											"end": 8089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7958,
											"end": 8089,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 7958,
											"end": 8089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 8089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 8089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7677,
											"end": 8096,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7677,
											"end": 8096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7677,
											"end": 8096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7677,
											"end": 8096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8102,
											"end": 8282,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 8102,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8150,
											"end": 8227,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8147,
											"end": 8148,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8140,
											"end": 8228,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8247,
											"end": 8251,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8244,
											"end": 8245,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8237,
											"end": 8252,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8271,
											"end": 8275,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8268,
											"end": 8269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8261,
											"end": 8276,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8288,
											"end": 8482,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 8288,
											"end": 8482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8348,
											"end": 8368,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 8366,
											"end": 8367,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8348,
											"end": 8368,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 8348,
											"end": 8368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8348,
											"end": 8368,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 8348,
											"end": 8368,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8343,
											"end": 8368,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8343,
											"end": 8368,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8382,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 8400,
											"end": 8401,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8382,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 8382,
											"end": 8402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8382,
											"end": 8402,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 8382,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8402,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8402,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8426,
											"end": 8427,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8423,
											"end": 8424,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8419,
											"end": 8428,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8411,
											"end": 8428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8411,
											"end": 8428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8451,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8444,
											"end": 8448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8441,
											"end": 8452,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8438,
											"end": 8475,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8438,
											"end": 8475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 8438,
											"end": 8475,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8455,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 8455,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 8455,
											"end": 8473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8455,
											"end": 8473,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 8455,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8438,
											"end": 8475,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 8438,
											"end": 8475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8288,
											"end": 8482,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8288,
											"end": 8482,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8288,
											"end": 8482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8288,
											"end": 8482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8288,
											"end": 8482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8488,
											"end": 8663,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 8488,
											"end": 8663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8628,
											"end": 8655,
											"name": "PUSH",
											"source": 5,
											"value": "7573657220616C72656164792068617320737461636B696E6700000000000000"
										},
										{
											"begin": 8624,
											"end": 8625,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8622,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8612,
											"end": 8626,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8605,
											"end": 8656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8488,
											"end": 8663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8488,
											"end": 8663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 9035,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 8669,
											"end": 9035,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8811,
											"end": 8814,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8832,
											"end": 8899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 8896,
											"end": 8898,
											"name": "PUSH",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 8891,
											"end": 8894,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8832,
											"end": 8899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 8832,
											"end": 8899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8832,
											"end": 8899,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 8832,
											"end": 8899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8825,
											"end": 8899,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8825,
											"end": 8899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8908,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 8997,
											"end": 9000,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8908,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 8908,
											"end": 9001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8908,
											"end": 9001,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 8908,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9026,
											"end": 9028,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9021,
											"end": 9024,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9017,
											"end": 9029,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9010,
											"end": 9029,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9010,
											"end": 9029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 9035,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 9035,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 9035,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 9035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9041,
											"end": 9460,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 9041,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9207,
											"end": 9211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9245,
											"end": 9247,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9234,
											"end": 9243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9230,
											"end": 9248,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9222,
											"end": 9248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9222,
											"end": 9248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9294,
											"end": 9303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9288,
											"end": 9292,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9284,
											"end": 9304,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9280,
											"end": 9281,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9269,
											"end": 9278,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9265,
											"end": 9282,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9305,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9322,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9322,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 9322,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9322,
											"end": 9453,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 9322,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9453,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9453,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9041,
											"end": 9460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9041,
											"end": 9460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9041,
											"end": 9460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9041,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9466,
											"end": 9657,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 9466,
											"end": 9657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9525,
											"end": 9545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 9543,
											"end": 9544,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9525,
											"end": 9545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 9525,
											"end": 9545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9525,
											"end": 9545,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 9525,
											"end": 9545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9520,
											"end": 9545,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9520,
											"end": 9545,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 9577,
											"end": 9578,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 9559,
											"end": 9579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9579,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 9559,
											"end": 9579,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9579,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9579,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9602,
											"end": 9603,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9599,
											"end": 9600,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9595,
											"end": 9604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9588,
											"end": 9604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9588,
											"end": 9604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9623,
											"end": 9626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9620,
											"end": 9621,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9617,
											"end": 9627,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9614,
											"end": 9650,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9614,
											"end": 9650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 9614,
											"end": 9650,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 9630,
											"end": 9648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9614,
											"end": 9650,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 9614,
											"end": 9650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9466,
											"end": 9657,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9466,
											"end": 9657,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9466,
											"end": 9657,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9466,
											"end": 9657,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9466,
											"end": 9657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9663,
											"end": 10105,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 9663,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9812,
											"end": 9816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9850,
											"end": 9852,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 9839,
											"end": 9848,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9835,
											"end": 9853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9827,
											"end": 9853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9827,
											"end": 9853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9863,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 9931,
											"end": 9932,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9929,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9916,
											"end": 9933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9913,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9863,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 9863,
											"end": 9934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9863,
											"end": 9934,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 9863,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9944,
											"end": 10016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 10012,
											"end": 10014,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10001,
											"end": 10010,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9997,
											"end": 10015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9988,
											"end": 9994,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9944,
											"end": 10016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 9944,
											"end": 10016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9944,
											"end": 10016,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 9944,
											"end": 10016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10026,
											"end": 10098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 10094,
											"end": 10096,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10083,
											"end": 10092,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10079,
											"end": 10097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10070,
											"end": 10076,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10026,
											"end": 10098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 10026,
											"end": 10098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10026,
											"end": 10098,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 10026,
											"end": 10098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9663,
											"end": 10105,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9663,
											"end": 10105,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9663,
											"end": 10105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9663,
											"end": 10105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9663,
											"end": 10105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9663,
											"end": 10105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9663,
											"end": 10105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10111,
											"end": 10292,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 10111,
											"end": 10292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10251,
											"end": 10284,
											"name": "PUSH",
											"source": 5,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10247,
											"end": 10248,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10239,
											"end": 10245,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10235,
											"end": 10249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10228,
											"end": 10285,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10111,
											"end": 10292,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10111,
											"end": 10292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10298,
											"end": 10664,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 10298,
											"end": 10664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10440,
											"end": 10443,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10461,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 10525,
											"end": 10527,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10520,
											"end": 10523,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10461,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 10461,
											"end": 10528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10461,
											"end": 10528,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 10461,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10454,
											"end": 10528,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10454,
											"end": 10528,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10537,
											"end": 10630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 10626,
											"end": 10629,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10537,
											"end": 10630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 10537,
											"end": 10630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10537,
											"end": 10630,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 10537,
											"end": 10630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10655,
											"end": 10657,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10650,
											"end": 10653,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10646,
											"end": 10658,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10639,
											"end": 10658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10639,
											"end": 10658,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10298,
											"end": 10664,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10298,
											"end": 10664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10298,
											"end": 10664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10298,
											"end": 10664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10670,
											"end": 11089,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 10670,
											"end": 11089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10836,
											"end": 10840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10874,
											"end": 10876,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10863,
											"end": 10872,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10859,
											"end": 10877,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10851,
											"end": 10877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10851,
											"end": 10877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10923,
											"end": 10932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10917,
											"end": 10921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10913,
											"end": 10933,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10909,
											"end": 10910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10898,
											"end": 10907,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10894,
											"end": 10911,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10887,
											"end": 10934,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10951,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 11077,
											"end": 11081,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10951,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 10951,
											"end": 11082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10951,
											"end": 11082,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 10951,
											"end": 11082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10943,
											"end": 11082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10943,
											"end": 11082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10670,
											"end": 11089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10670,
											"end": 11089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10670,
											"end": 11089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10670,
											"end": 11089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"stack_contract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getStake()": "fc0e3d90",
							"getTotalStake()": "7bc74225",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stake(uint256,uint256)": "7b0472f0",
							"stakingToken()": "72f702f3",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"userStaking(address)": "821460f5",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawDate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawDate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"stack_contract.sol\":\"StakingContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"stack_contract.sol\":{\"keccak256\":\"0xbddb3504f227c619416f2204814f6c291ed8e96755d312242685996092f01bc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://338904fdb2f6cada0a23e7a7d9f5228a58c4570b195413ea08466f3f2ac6fb16\",\"dweb:/ipfs/QmRK29X5REFQPc5S28CdJQKMTGmuCosh6AAvPYAFYVoiCo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "stack_contract.sol:StakingContract",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "stack_contract.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 332,
								"contract": "stack_contract.sol:StakingContract",
								"label": "stakingToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)290"
							},
							{
								"astId": 334,
								"contract": "stack_contract.sol:StakingContract",
								"label": "totalStaked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 339,
								"contract": "stack_contract.sol:StakingContract",
								"label": "userStaking",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(Stake)344_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)290": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stake)344_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingContract.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)344_storage"
							},
							"t_struct(Stake)344_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.Stake",
								"members": [
									{
										"astId": 341,
										"contract": "stack_contract.sol:StakingContract",
										"label": "stakedAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 343,
										"contract": "stack_contract.sol:StakingContract",
										"label": "withdrawDate",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 321,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 320,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								320
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 224,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 233,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 290,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 290,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 290,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 290,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 290,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 290,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 291,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								224,
								233
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 297,
												"id": 300,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 320,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 307,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 306,
												"id": 309,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 320,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 320,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"stack_contract.sol": {
				"ast": {
					"absolutePath": "stack_contract.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"IERC20": [
							290
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						],
						"StakingContract": [
							546
						]
					},
					"id": 547,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 547,
							"sourceUnit": 291,
							"src": "57:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 547,
							"sourceUnit": 213,
							"src": "114:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 547,
							"sourceUnit": 148,
							"src": "177:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 326,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"260:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "260:15:4"
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "260:15:4"
								},
								{
									"baseName": {
										"id": 328,
										"name": "Ownable",
										"nameLocations": [
											"277:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "277:7:4"
									},
									"id": 329,
									"nodeType": "InheritanceSpecifier",
									"src": "277:7:4"
								}
							],
							"canonicalName": "StakingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 546,
							"linearizedBaseContracts": [
								546,
								147,
								320,
								212
							],
							"name": "StakingContract",
							"nameLocation": "241:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 332,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "306:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 546,
									"src": "292:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$290",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 331,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 330,
											"name": "IERC20",
											"nameLocations": [
												"292:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 290,
											"src": "292:6:4"
										},
										"referencedDeclaration": 290,
										"src": "292:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$290",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 334,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "340:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 546,
									"src": "325:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 333,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "325:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "821460f5",
									"id": 339,
									"mutability": "mutable",
									"name": "userStaking",
									"nameLocation": "395:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 546,
									"src": "362:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
										"typeString": "mapping(address => struct StakingContract.Stake)"
									},
									"typeName": {
										"id": 338,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 335,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "370:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "362:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
											"typeString": "mapping(address => struct StakingContract.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 337,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 336,
												"name": "Stake",
												"nameLocations": [
													"381:5:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 344,
												"src": "381:5:4"
											},
											"referencedDeclaration": 344,
											"src": "381:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$344_storage_ptr",
												"typeString": "struct StakingContract.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.Stake",
									"id": 344,
									"members": [
										{
											"constant": false,
											"id": 341,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "448:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 344,
											"src": "440:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 340,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "440:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 343,
											"mutability": "mutable",
											"name": "withdrawDate",
											"nameLocation": "482:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 344,
											"src": "474:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 342,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "474:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "424:5:4",
									"nodeType": "StructDefinition",
									"scope": 546,
									"src": "417:89:4",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 350,
									"name": "Staked",
									"nameLocation": "522:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "545:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "529:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "559:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "551:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:38:4"
									},
									"src": "516:51:4"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 356,
									"name": "Withdrawn",
									"nameLocation": "578:9:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "604:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "588:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "618:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "610:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "610:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:38:4"
									},
									"src": "572:54:4"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "690:45:4",
										"statements": [
											{
												"expression": {
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 366,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "700:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 367,
														"name": "_stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "715:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"src": "700:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "700:28:4"
											}
										]
									},
									"id": 371,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 362,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "678:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "682:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "678:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 364,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 361,
												"name": "Ownable",
												"nameLocations": [
													"670:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "670:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "670:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "655:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "648:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$290",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "IERC20",
														"nameLocations": [
															"648:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 290,
														"src": "648:6:4"
													},
													"referencedDeclaration": 290,
													"src": "648:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:22:4"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:4"
									},
									"scope": 546,
									"src": "636:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "814:533:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 381,
																			"name": "userStaking",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 339,
																			"src": "845:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
																				"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
																			}
																		},
																		"id": 384,
																		"indexExpression": {
																			"expression": {
																				"id": 382,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "857:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "861:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "857:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "845:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$344_storage",
																			"typeString": "struct StakingContract.Stake storage ref"
																		}
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "869:12:4",
																	"memberName": "stakedAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 341,
																	"src": "845:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "885:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "845:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 388,
																			"name": "userStaking",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 339,
																			"src": "890:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
																				"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
																			}
																		},
																		"id": 391,
																		"indexExpression": {
																			"expression": {
																				"id": 389,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "902:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "906:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "902:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "890:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$344_storage",
																			"typeString": "struct StakingContract.Stake storage ref"
																		}
																	},
																	"id": 392,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "914:12:4",
																	"memberName": "withdrawDate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 343,
																	"src": "890:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "930:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "890:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "845:86:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7573657220616c72656164792068617320737461636b696e67",
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "945:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0",
																"typeString": "literal_string \"user already has stacking\""
															},
															"value": "user already has stacking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a75e58f735e4c1e678c2a07235c91c8834973547d9eecaf7f3f75eac94a2d3a0",
																"typeString": "literal_string \"user already has stacking\""
															}
														],
														"id": 380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "824:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "824:158:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "824:158:4"
											},
											{
												"expression": {
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 399,
																"name": "userStaking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "1001:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
																	"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
																}
															},
															"id": 402,
															"indexExpression": {
																"expression": {
																	"id": 400,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1013:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1017:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1013:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1001:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$344_storage",
																"typeString": "struct StakingContract.Stake storage ref"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1025:12:4",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 341,
														"src": "1001:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 404,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "1040:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1001:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "1001:45:4"
											},
											{
												"expression": {
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 407,
																"name": "userStaking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "1056:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
																	"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
																}
															},
															"id": 410,
															"indexExpression": {
																"expression": {
																	"id": 408,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1068:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1072:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1068:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1056:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$344_storage",
																"typeString": "struct StakingContract.Stake storage ref"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1080:12:4",
														"memberName": "withdrawDate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 343,
														"src": "1056:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 412,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1095:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1101:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1095:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 414,
															"name": "period",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "1113:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1095:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1056:63:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "1056:63:4"
											},
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1143:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 446,
														"src": "1138:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 418,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1138:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 430,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 422,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1179:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1183:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1179:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 426,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1199:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$546",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$546",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1191:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 424,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1191:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1191:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "1206:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 420,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1153:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1166:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 289,
														"src": "1153:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1153:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1138:75:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 432,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "1231:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1240:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1223:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1223:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "1223:35:4"
											},
											{
												"expression": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 436,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "1269:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 437,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "1284:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1269:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "1269:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 441,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1321:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1325:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1321:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "1333:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 440,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "1314:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1314:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "EmitStatement",
												"src": "1309:31:4"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 378,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 377,
												"name": "nonReentrant",
												"nameLocations": [
													"801:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "801:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "801:12:4"
										}
									],
									"name": "stake",
									"nameLocation": "754:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "768:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "760:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "period",
												"nameLocation": "784:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "776:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:32:4"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "814:0:4"
									},
									"scope": 546,
									"src": "745:602:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "1437:131:4",
										"statements": [
											{
												"assignments": [
													456
												],
												"declarations": [
													{
														"constant": false,
														"id": 456,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "1461:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 468,
														"src": "1447:23:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$344_storage_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 455,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 454,
																"name": "Stake",
																"nameLocations": [
																	"1447:5:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 344,
																"src": "1447:5:4"
															},
															"referencedDeclaration": 344,
															"src": "1447:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$344_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 461,
												"initialValue": {
													"baseExpression": {
														"id": 457,
														"name": "userStaking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "1473:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
															"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
														}
													},
													"id": 460,
													"indexExpression": {
														"expression": {
															"id": 458,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1485:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1489:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1485:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1473:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$344_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1447:49:4"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 462,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "1514:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$344_storage_ptr",
																	"typeString": "struct StakingContract.Stake storage pointer"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1524:12:4",
															"memberName": "stakedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 341,
															"src": "1514:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 464,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "1538:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$344_storage_ptr",
																	"typeString": "struct StakingContract.Stake storage pointer"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1548:12:4",
															"memberName": "withdrawDate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 343,
															"src": "1538:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 466,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1513:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 453,
												"id": 467,
												"nodeType": "Return",
												"src": "1506:55:4"
											}
										]
									},
									"functionSelector": "fc0e3d90",
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStake",
									"nameLocation": "1362:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1370:2:4"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "stakedAmount",
												"nameLocation": "1401:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1393:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1393:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "withdrawDate",
												"nameLocation": "1423:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1415:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:4"
									},
									"scope": 546,
									"src": "1353:215:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "1628:35:4",
										"statements": [
											{
												"expression": {
													"id": 474,
													"name": "totalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "1645:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 473,
												"id": 475,
												"nodeType": "Return",
												"src": "1638:18:4"
											}
										]
									},
									"functionSelector": "7bc74225",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalStake",
									"nameLocation": "1583:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1596:2:4"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1619:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1619:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1618:9:4"
									},
									"scope": 546,
									"src": "1574:89:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "1715:515:4",
										"statements": [
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "userStack",
														"nameLocation": "1738:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "1725:22:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$344_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 483,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 482,
																"name": "Stake",
																"nameLocations": [
																	"1725:5:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 344,
																"src": "1725:5:4"
															},
															"referencedDeclaration": 344,
															"src": "1725:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$344_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"baseExpression": {
														"id": 485,
														"name": "userStaking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "1750:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
															"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
														}
													},
													"id": 488,
													"indexExpression": {
														"expression": {
															"id": 486,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1762:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1766:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1762:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1750:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$344_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1725:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 491,
																	"name": "userStack",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "1791:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$344_memory_ptr",
																		"typeString": "struct StakingContract.Stake memory"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1801:12:4",
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 341,
																"src": "1791:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1816:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1791:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742077697468647261772030",
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1819:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															},
															"value": "Cannot withdraw 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															}
														],
														"id": 490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1783:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1783:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "1783:56:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 499,
																	"name": "userStack",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "1857:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$344_memory_ptr",
																		"typeString": "struct StakingContract.Stake memory"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1867:12:4",
																"memberName": "withdrawDate",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 343,
																"src": "1857:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 501,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1883:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1889:9:4",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1883:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1857:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6f206561726c7920776974686472617721",
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1900:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5",
																"typeString": "literal_string \"Too early withdraw!\""
															},
															"value": "Too early withdraw!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef4ef949075761181ae2ef146a4cc9ae0c265a77840bc1aed4b97eeb68bbe6d5",
																"typeString": "literal_string \"Too early withdraw!\""
															}
														],
														"id": 498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1849:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1849:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "1849:73:4"
											},
											{
												"assignments": [
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1946:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "1941:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 507,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1941:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 516,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 511,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1978:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1982:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1978:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 513,
																"name": "userStack",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "1990:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$344_memory_ptr",
																	"typeString": "struct StakingContract.Stake memory"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2000:12:4",
															"memberName": "stakedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 341,
															"src": "1990:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 509,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1956:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1969:8:4",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "1956:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1956:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1941:72:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "2031:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2040:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2023:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2023:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "2023:35:4"
											},
											{
												"expression": {
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 522,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "2069:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 523,
															"name": "userStack",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "2084:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$344_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2094:12:4",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 341,
														"src": "2084:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2069:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "2069:37:4"
											},
											{
												"expression": {
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 527,
															"name": "userStaking",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "2117:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$344_storage_$",
																"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 530,
														"indexExpression": {
															"expression": {
																"id": 528,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2129:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2133:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2129:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2117:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$344_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2149:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2152:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 531,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2143:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$344_storage_ptr_$",
																"typeString": "type(struct StakingContract.Stake storage pointer)"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2143:11:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$344_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"src": "2117:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$344_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "2117:37:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 538,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2188:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2192:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2188:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 540,
																"name": "userStack",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "2200:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$344_memory_ptr",
																	"typeString": "struct StakingContract.Stake memory"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2210:12:4",
															"memberName": "stakedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 341,
															"src": "2200:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 537,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "2178:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2178:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "EmitStatement",
												"src": "2173:50:4"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 480,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 479,
												"name": "nonReentrant",
												"nameLocations": [
													"1702:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1702:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1702:12:4"
										}
									],
									"name": "withdraw",
									"nameLocation": "1682:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1690:2:4"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1715:0:4"
									},
									"scope": 546,
									"src": "1673:557:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 547,
							"src": "232:2001:4",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								350,
								356
							]
						}
					],
					"src": "32:2201:4"
				},
				"id": 4
			}
		}
	}
}