{
	"id": "68f6b50b066194e76f739c889b038840",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"stack_contract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ncontract StakingContract is ReentrancyGuard, Ownable {\n\n    uint256 private constant SECONDS_PER_YEAR = 365 days;\n    uint256 private constant MAX_STAKING_PERIOD = 4 * SECONDS_PER_YEAR; \n\n    IERC20 public stakingToken;\n\n    uint256 public totalStaked;\n\n    \n    mapping(address => Stake[]) internal userStaking;\n\n    using EnumerableSet for EnumerableSet.AddressSet;\n    EnumerableSet.AddressSet internal users;\n    \n    struct Stake {\n        uint256 stakedAmount;    \n        uint256 withdrawDate;     \n    }\n    \n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    \n    constructor(IERC20 _stakingToken) Ownable(msg.sender) {\n        stakingToken = _stakingToken;\n    }\n    \n    function stake(uint256 amount, uint256 period) external nonReentrant {\n        require(\n            period > 0 && period <= MAX_STAKING_PERIOD, \n            \"Staking period cannot exceed 4 years and must be greater than 0\"\n        );\n        require(\n            amount > 0, \n            \"Amount must be greater than 0\"\n        );\n        Stake memory newStake = Stake(amount, block.timestamp + period);\n        userStaking[msg.sender].push(newStake);\n        if (userStaking[msg.sender].length == 1){\n            users.add(msg.sender);\n        }\n\n        bool success = stakingToken.transferFrom(msg.sender, address(this), amount);\n        require(success, \"Transfer failed\");\n        totalStaked += amount;\n        emit Staked(msg.sender, amount);\n    }\n\n    function withdraw() external nonReentrant {\n        Stake[] memory userStack = userStaking[msg.sender];\n\n        uint256 unstackAmount = 0;\n\n        bool useHasActiveStack;\n        for (uint i = 0; i < userStack.length; i++) {\n            if (userStack[i].withdrawDate > 0 && userStack[i].stakedAmount > 0){\n                unstackAmount += userStack[i].stakedAmount;\n                userStaking[msg.sender][i] = Stake(0, 0);\n            }\n            if (!(userStack[i].withdrawDate > 0) && userStack[i].stakedAmount > 0){\n                useHasActiveStack = true;\n            }\n        }\n        if (!useHasActiveStack){\n            users.remove(msg.sender);\n        }\n        \n        bool success = stakingToken.transfer(msg.sender, unstackAmount);\n        require(success, \"Transfer failed\");\n\n        totalStaked -= unstackAmount;\n        \n        emit Withdrawn(msg.sender, unstackAmount);\n    }\n\n    function getStake() public view returns(Stake[] memory) {\n        return userStaking[msg.sender];\n    }\n\n    function getUserStake(address user) internal view returns(Stake[] memory) {\n        return userStaking[user];\n    }\n\n    function getTotalStake() public view returns(uint256) {\n        return totalStaked;\n    }\n\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12889  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12889  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122049af7bfda73a11077c441d392deb5097f1e497a69df39c89e85b58b4b70107ff64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122049af7bfda73a11077c441d392deb5097f1e497a69df39c89e85b58b4b70107ff64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH 0xAF PUSH28 0xFDA73A11077C441D392DEB5097F1E497A69DF39C89E85B58B4B70107 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1330:11559:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122049af7bfda73a11077c441d392deb5097f1e497a69df39c89e85b58b4b70107ff64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH 0xAF PUSH28 0xFDA73A11077C441D392DEB5097F1E497A69DF39C89E85B58B4B70107 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1330:11559:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 12889,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122049af7bfda73a11077c441d392deb5097f1e497a69df39c89e85b58b4b70107ff64736f6c634300081a0033",
									".code": [
										{
											"begin": 1330,
											"end": 12889,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 12889,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 12889,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 12889,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1330,
											"end": 12889,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 12889,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 12889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 12889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 12889,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"stack_contract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"stack_contract.sol": {
				"StakingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_stakingToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stakedAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "withdrawDate",
											"type": "uint256"
										}
									],
									"internalType": "struct StakingContract.Stake[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "period",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"stack_contract.sol\":298:3039  contract StakingContract is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"stack_contract.sol\":939:1038  constructor(IERC20 _stakingToken) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"stack_contract.sol\":981:991  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"stack_contract.sol\":1018:1031  _stakingToken */\n  dup1\n    /* \"stack_contract.sol\":1003:1015  stakingToken */\n  0x02\n  0x00\n    /* \"stack_contract.sol\":1003:1031  stakingToken = _stakingToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"stack_contract.sol\":939:1038  constructor(IERC20 _stakingToken) Ownable(msg.sender) {... */\n  pop\n    /* \"stack_contract.sol\":298:3039  contract StakingContract is ReentrancyGuard, Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_22:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_34\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_21\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_23:\n    /* \"#utility.yul\":771:809   */\n  tag_36\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_22\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_37:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_24:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_39\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_23\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1396   */\ntag_3:\n    /* \"#utility.yul\":1101:1107   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  0x20\n    /* \"#utility.yul\":1138:1147   */\n  dup3\n    /* \"#utility.yul\":1129:1136   */\n  dup5\n    /* \"#utility.yul\":1125:1148   */\n  sub\n    /* \"#utility.yul\":1121:1153   */\n  slt\n    /* \"#utility.yul\":1118:1237   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1156:1235   */\n  tag_42\n  tag_18\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1118:1237   */\ntag_41:\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1301:1379   */\n  tag_43\n    /* \"#utility.yul\":1371:1378   */\n  dup5\n    /* \"#utility.yul\":1362:1368   */\n  dup3\n    /* \"#utility.yul\":1351:1360   */\n  dup6\n    /* \"#utility.yul\":1347:1369   */\n  add\n    /* \"#utility.yul\":1301:1379   */\n  tag_24\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1291:1379   */\n  swap2\n  pop\n    /* \"#utility.yul\":1247:1389   */\n  pop\n    /* \"#utility.yul\":1017:1396   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1402:1520   */\ntag_25:\n    /* \"#utility.yul\":1489:1513   */\n  tag_45\n    /* \"#utility.yul\":1507:1512   */\n  dup2\n    /* \"#utility.yul\":1489:1513   */\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1484:1487   */\n  dup3\n    /* \"#utility.yul\":1477:1514   */\n  mstore\n    /* \"#utility.yul\":1402:1520   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1526:1748   */\ntag_11:\n    /* \"#utility.yul\":1619:1623   */\n  0x00\n    /* \"#utility.yul\":1657:1659   */\n  0x20\n    /* \"#utility.yul\":1646:1655   */\n  dup3\n    /* \"#utility.yul\":1642:1660   */\n  add\n    /* \"#utility.yul\":1634:1660   */\n  swap1\n  pop\n    /* \"#utility.yul\":1670:1741   */\n  tag_47\n    /* \"#utility.yul\":1738:1739   */\n  0x00\n    /* \"#utility.yul\":1727:1736   */\n  dup4\n    /* \"#utility.yul\":1723:1740   */\n  add\n    /* \"#utility.yul\":1714:1720   */\n  dup5\n    /* \"#utility.yul\":1670:1741   */\n  tag_25\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1526:1748   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"stack_contract.sol\":298:3039  contract StakingContract is ReentrancyGuard, Ownable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"stack_contract.sol\":298:3039  contract StakingContract is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7bc74225\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x7bc74225\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfc0e3d90\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"stack_contract.sol\":1809:2711  function withdraw() external nonReentrant {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"stack_contract.sol\":490:516  IERC20 public stakingToken */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stack_contract.sol\":1048:1803  function stake(uint256 amount, uint256 period) external nonReentrant {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"stack_contract.sol\":2947:3036  function getTotalStake() public view returns(uint256) {... */\n    tag_7:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stack_contract.sol\":523:549  uint256 public totalStaked */\n    tag_8:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"stack_contract.sol\":2717:2820  function getStake() public view returns(Stake[] memory) {... */\n    tag_11:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stack_contract.sol\":1809:2711  function withdraw() external nonReentrant {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_45\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_46\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_45:\n        /* \"stack_contract.sol\":1861:1885  Stake[] memory userStack */\n      0x00\n        /* \"stack_contract.sol\":1888:1899  userStaking */\n      0x04\n        /* \"stack_contract.sol\":1888:1911  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":1900:1910  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1888:1911  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":1861:1911  Stake[] memory userStack = userStaking[msg.sender] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_48:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_49\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_48)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"stack_contract.sol\":1922:1943  uint256 unstackAmount */\n      0x00\n        /* \"stack_contract.sol\":1958:1980  bool useHasActiveStack */\n      dup1\n        /* \"stack_contract.sol\":1995:2001  uint i */\n      dup1\n        /* \"stack_contract.sol\":2004:2005  0 */\n      0x00\n        /* \"stack_contract.sol\":1995:2005  uint i = 0 */\n      swap1\n      pop\n        /* \"stack_contract.sol\":1990:2398  for (uint i = 0; i < userStack.length; i++) {... */\n    tag_51:\n        /* \"stack_contract.sol\":2011:2020  userStack */\n      dup4\n        /* \"stack_contract.sol\":2011:2027  userStack.length */\n      mload\n        /* \"stack_contract.sol\":2007:2008  i */\n      dup2\n        /* \"stack_contract.sol\":2007:2027  i < userStack.length */\n      lt\n        /* \"stack_contract.sol\":1990:2398  for (uint i = 0; i < userStack.length; i++) {... */\n      iszero\n      tag_52\n      jumpi\n        /* \"stack_contract.sol\":2080:2081  0 */\n      0x00\n        /* \"stack_contract.sol\":2052:2061  userStack */\n      dup5\n        /* \"stack_contract.sol\":2062:2063  i */\n      dup3\n        /* \"stack_contract.sol\":2052:2064  userStack[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_54\n      jumpi\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n    tag_54:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"stack_contract.sol\":2052:2077  userStack[i].withdrawDate */\n      0x20\n      add\n      mload\n        /* \"stack_contract.sol\":2052:2081  userStack[i].withdrawDate > 0 */\n      gt\n        /* \"stack_contract.sol\":2052:2114  userStack[i].withdrawDate > 0 && userStack[i].stakedAmount > 0 */\n      dup1\n      iszero\n      tag_57\n      jumpi\n      pop\n        /* \"stack_contract.sol\":2113:2114  0 */\n      0x00\n        /* \"stack_contract.sol\":2085:2094  userStack */\n      dup5\n        /* \"stack_contract.sol\":2095:2096  i */\n      dup3\n        /* \"stack_contract.sol\":2085:2097  userStack[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_58\n      jumpi\n      tag_59\n      tag_56\n      jump\t// in\n    tag_59:\n    tag_58:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"stack_contract.sol\":2085:2110  userStack[i].stakedAmount */\n      0x00\n      add\n      mload\n        /* \"stack_contract.sol\":2085:2114  userStack[i].stakedAmount > 0 */\n      gt\n        /* \"stack_contract.sol\":2052:2114  userStack[i].withdrawDate > 0 && userStack[i].stakedAmount > 0 */\n    tag_57:\n        /* \"stack_contract.sol\":2048:2248  if (userStack[i].withdrawDate > 0 && userStack[i].stakedAmount > 0){... */\n      iszero\n      tag_60\n      jumpi\n        /* \"stack_contract.sol\":2150:2159  userStack */\n      dup4\n        /* \"stack_contract.sol\":2160:2161  i */\n      dup2\n        /* \"stack_contract.sol\":2150:2162  userStack[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_61\n      jumpi\n      tag_62\n      tag_56\n      jump\t// in\n    tag_62:\n    tag_61:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"stack_contract.sol\":2150:2175  userStack[i].stakedAmount */\n      0x00\n      add\n      mload\n        /* \"stack_contract.sol\":2133:2175  unstackAmount += userStack[i].stakedAmount */\n      dup4\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      swap3\n      pop\n        /* \"stack_contract.sol\":2222:2233  Stake(0, 0) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"stack_contract.sol\":2228:2229  0 */\n      0x00\n        /* \"stack_contract.sol\":2222:2233  Stake(0, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"stack_contract.sol\":2231:2232  0 */\n      0x00\n        /* \"stack_contract.sol\":2222:2233  Stake(0, 0) */\n      dup2\n      mstore\n      pop\n        /* \"stack_contract.sol\":2193:2204  userStaking */\n      0x04\n        /* \"stack_contract.sol\":2193:2216  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":2205:2215  msg.sender */\n      caller\n        /* \"stack_contract.sol\":2193:2216  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":2217:2218  i */\n      dup3\n        /* \"stack_contract.sol\":2193:2219  userStaking[msg.sender][i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_65\n      jumpi\n      tag_66\n      tag_56\n      jump\t// in\n    tag_66:\n    tag_65:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"stack_contract.sol\":2193:2233  userStaking[msg.sender][i] = Stake(0, 0) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"stack_contract.sol\":2048:2248  if (userStack[i].withdrawDate > 0 && userStack[i].stakedAmount > 0){... */\n    tag_60:\n        /* \"stack_contract.sol\":2295:2296  0 */\n      0x00\n        /* \"stack_contract.sol\":2267:2276  userStack */\n      dup5\n        /* \"stack_contract.sol\":2277:2278  i */\n      dup3\n        /* \"stack_contract.sol\":2267:2279  userStack[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_68\n      jumpi\n      tag_69\n      tag_56\n      jump\t// in\n    tag_69:\n    tag_68:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"stack_contract.sol\":2267:2292  userStack[i].withdrawDate */\n      0x20\n      add\n      mload\n        /* \"stack_contract.sol\":2267:2296  userStack[i].withdrawDate > 0 */\n      gt\n        /* \"stack_contract.sol\":2265:2297  !(userStack[i].withdrawDate > 0) */\n      iszero\n        /* \"stack_contract.sol\":2265:2330  !(userStack[i].withdrawDate > 0) && userStack[i].stakedAmount > 0 */\n      dup1\n      iszero\n      tag_70\n      jumpi\n      pop\n        /* \"stack_contract.sol\":2329:2330  0 */\n      0x00\n        /* \"stack_contract.sol\":2301:2310  userStack */\n      dup5\n        /* \"stack_contract.sol\":2311:2312  i */\n      dup3\n        /* \"stack_contract.sol\":2301:2313  userStack[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_71\n      jumpi\n      tag_72\n      tag_56\n      jump\t// in\n    tag_72:\n    tag_71:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"stack_contract.sol\":2301:2326  userStack[i].stakedAmount */\n      0x00\n      add\n      mload\n        /* \"stack_contract.sol\":2301:2330  userStack[i].stakedAmount > 0 */\n      gt\n        /* \"stack_contract.sol\":2265:2330  !(userStack[i].withdrawDate > 0) && userStack[i].stakedAmount > 0 */\n    tag_70:\n        /* \"stack_contract.sol\":2261:2388  if (!(userStack[i].withdrawDate > 0) && userStack[i].stakedAmount > 0){... */\n      iszero\n      tag_73\n      jumpi\n        /* \"stack_contract.sol\":2369:2373  true */\n      0x01\n        /* \"stack_contract.sol\":2349:2373  useHasActiveStack = true */\n      swap2\n      pop\n        /* \"stack_contract.sol\":2261:2388  if (!(userStack[i].withdrawDate > 0) && userStack[i].stakedAmount > 0){... */\n    tag_73:\n        /* \"stack_contract.sol\":2029:2032  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"stack_contract.sol\":1990:2398  for (uint i = 0; i < userStack.length; i++) {... */\n      jump(tag_51)\n    tag_52:\n      pop\n        /* \"stack_contract.sol\":2412:2429  useHasActiveStack */\n      dup1\n        /* \"stack_contract.sol\":2407:2479  if (!useHasActiveStack){... */\n      tag_74\n      jumpi\n        /* \"stack_contract.sol\":2444:2468  users.remove(msg.sender) */\n      tag_75\n        /* \"stack_contract.sol\":2457:2467  msg.sender */\n      caller\n        /* \"stack_contract.sol\":2444:2449  users */\n      0x05\n        /* \"stack_contract.sol\":2444:2456  users.remove */\n      tag_76\n      swap1\n        /* \"stack_contract.sol\":2444:2468  users.remove(msg.sender) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_75:\n      pop\n        /* \"stack_contract.sol\":2407:2479  if (!useHasActiveStack){... */\n    tag_74:\n        /* \"stack_contract.sol\":2497:2509  bool success */\n      0x00\n        /* \"stack_contract.sol\":2512:2524  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"stack_contract.sol\":2512:2533  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"stack_contract.sol\":2534:2544  msg.sender */\n      caller\n        /* \"stack_contract.sol\":2546:2559  unstackAmount */\n      dup6\n        /* \"stack_contract.sol\":2512:2560  stakingToken.transfer(msg.sender, unstackAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_80:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"stack_contract.sol\":2497:2560  bool success = stakingToken.transfer(msg.sender, unstackAmount) */\n      swap1\n      pop\n        /* \"stack_contract.sol\":2578:2585  success */\n      dup1\n        /* \"stack_contract.sol\":2570:2605  require(success, \"Transfer failed\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"stack_contract.sol\":2631:2644  unstackAmount */\n      dup3\n        /* \"stack_contract.sol\":2616:2627  totalStaked */\n      0x03\n      0x00\n        /* \"stack_contract.sol\":2616:2644  totalStaked -= unstackAmount */\n      dup3\n      dup3\n      sload\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stack_contract.sol\":2678:2688  msg.sender */\n      caller\n        /* \"stack_contract.sol\":2668:2704  Withdrawn(msg.sender, unstackAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"stack_contract.sol\":2690:2703  unstackAmount */\n      dup5\n        /* \"stack_contract.sol\":2668:2704  Withdrawn(msg.sender, unstackAmount) */\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"stack_contract.sol\":1851:2711  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_89\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_90\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_89:\n        /* \"stack_contract.sol\":1809:2711  function withdraw() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"stack_contract.sol\":490:516  IERC20 public stakingToken */\n    tag_18:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"stack_contract.sol\":1048:1803  function stake(uint256 amount, uint256 period) external nonReentrant {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_98\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_46\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_98:\n        /* \"stack_contract.sol\":1157:1158  0 */\n      0x00\n        /* \"stack_contract.sol\":1148:1154  period */\n      dup2\n        /* \"stack_contract.sol\":1148:1158  period > 0 */\n      gt\n        /* \"stack_contract.sol\":1148:1190  period > 0 && period <= MAX_STAKING_PERIOD */\n      dup1\n      iszero\n      tag_100\n      jumpi\n      pop\n        /* \"stack_contract.sol\":402:410  365 days */\n      0x01e13380\n        /* \"stack_contract.sol\":462:463  4 */\n      0x04\n        /* \"stack_contract.sol\":462:482  4 * SECONDS_PER_YEAR */\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"stack_contract.sol\":1162:1168  period */\n      dup2\n        /* \"stack_contract.sol\":1162:1190  period <= MAX_STAKING_PERIOD */\n      gt\n      iszero\n        /* \"stack_contract.sol\":1148:1190  period > 0 && period <= MAX_STAKING_PERIOD */\n    tag_100:\n        /* \"stack_contract.sol\":1127:1280  require(... */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"stack_contract.sol\":1320:1321  0 */\n      0x00\n        /* \"stack_contract.sol\":1311:1317  amount */\n      dup3\n        /* \"stack_contract.sol\":1311:1321  amount > 0 */\n      gt\n        /* \"stack_contract.sol\":1290:1377  require(... */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"stack_contract.sol\":1387:1408  Stake memory newStake */\n      0x00\n        /* \"stack_contract.sol\":1411:1450  Stake(amount, block.timestamp + period) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"stack_contract.sol\":1417:1423  amount */\n      dup5\n        /* \"stack_contract.sol\":1411:1450  Stake(amount, block.timestamp + period) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"stack_contract.sol\":1443:1449  period */\n      dup4\n        /* \"stack_contract.sol\":1425:1440  block.timestamp */\n      timestamp\n        /* \"stack_contract.sol\":1425:1449  block.timestamp + period */\n      tag_109\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_109:\n        /* \"stack_contract.sol\":1411:1450  Stake(amount, block.timestamp + period) */\n      dup2\n      mstore\n      pop\n        /* \"stack_contract.sol\":1387:1450  Stake memory newStake = Stake(amount, block.timestamp + period) */\n      swap1\n      pop\n        /* \"stack_contract.sol\":1460:1471  userStaking */\n      0x04\n        /* \"stack_contract.sol\":1460:1483  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":1472:1482  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1460:1483  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":1489:1497  newStake */\n      dup2\n        /* \"stack_contract.sol\":1460:1498  userStaking[msg.sender].push(newStake) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"stack_contract.sol\":1546:1547  1 */\n      0x01\n        /* \"stack_contract.sol\":1512:1523  userStaking */\n      0x04\n        /* \"stack_contract.sol\":1512:1535  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":1524:1534  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1512:1535  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":1512:1542  userStaking[msg.sender].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"stack_contract.sol\":1512:1547  userStaking[msg.sender].length == 1 */\n      sub\n        /* \"stack_contract.sol\":1508:1594  if (userStaking[msg.sender].length == 1){... */\n      tag_111\n      jumpi\n        /* \"stack_contract.sol\":1562:1583  users.add(msg.sender) */\n      tag_112\n        /* \"stack_contract.sol\":1572:1582  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1562:1567  users */\n      0x05\n        /* \"stack_contract.sol\":1562:1571  users.add */\n      tag_113\n      swap1\n        /* \"stack_contract.sol\":1562:1583  users.add(msg.sender) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n      pop\n        /* \"stack_contract.sol\":1508:1594  if (userStaking[msg.sender].length == 1){... */\n    tag_111:\n        /* \"stack_contract.sol\":1604:1616  bool success */\n      0x00\n        /* \"stack_contract.sol\":1619:1631  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"stack_contract.sol\":1619:1644  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"stack_contract.sol\":1645:1655  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1665:1669  this */\n      address\n        /* \"stack_contract.sol\":1672:1678  amount */\n      dup8\n        /* \"stack_contract.sol\":1619:1679  stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_118:\n        /* \"stack_contract.sol\":1604:1679  bool success = stakingToken.transferFrom(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"stack_contract.sol\":1697:1704  success */\n      dup1\n        /* \"stack_contract.sol\":1689:1724  require(success, \"Transfer failed\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_85\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"stack_contract.sol\":1749:1755  amount */\n      dup4\n        /* \"stack_contract.sol\":1734:1745  totalStaked */\n      0x03\n      0x00\n        /* \"stack_contract.sol\":1734:1755  totalStaked += amount */\n      dup3\n      dup3\n      sload\n      tag_121\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_121:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stack_contract.sol\":1777:1787  msg.sender */\n      caller\n        /* \"stack_contract.sol\":1770:1796  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"stack_contract.sol\":1789:1795  amount */\n      dup6\n        /* \"stack_contract.sol\":1770:1796  Staked(msg.sender, amount) */\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"stack_contract.sol\":1117:1803  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_123\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_90\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_123:\n        /* \"stack_contract.sol\":1048:1803  function stake(uint256 amount, uint256 period) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"stack_contract.sol\":2947:3036  function getTotalStake() public view returns(uint256) {... */\n    tag_26:\n        /* \"stack_contract.sol\":2992:2999  uint256 */\n      0x00\n        /* \"stack_contract.sol\":3018:3029  totalStaked */\n      sload(0x03)\n        /* \"stack_contract.sol\":3011:3029  return totalStaked */\n      swap1\n      pop\n        /* \"stack_contract.sol\":2947:3036  function getTotalStake() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"stack_contract.sol\":523:549  uint256 public totalStaked */\n    tag_30:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"stack_contract.sol\":2717:2820  function getStake() public view returns(Stake[] memory) {... */\n    tag_41:\n        /* \"stack_contract.sol\":2757:2771  Stake[] memory */\n      0x60\n        /* \"stack_contract.sol\":2790:2801  userStaking */\n      0x04\n        /* \"stack_contract.sol\":2790:2813  userStaking[msg.sender] */\n      0x00\n        /* \"stack_contract.sol\":2802:2812  msg.sender */\n      caller\n        /* \"stack_contract.sol\":2790:2813  userStaking[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stack_contract.sol\":2783:2813  return userStaking[msg.sender] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_133:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_134\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_133)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"stack_contract.sol\":2717:2820  function getStake() public view returns(Stake[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8607:8763  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8680:8684  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8703:8756  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_141\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8711:8714  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8711:8721  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8747:8752  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8731:8754  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8723:8755  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8703:8710  _remove */\n      tag_142\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8703:8756  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8696:8756  return _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8607:8763  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_33\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8289:8439  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8359:8363  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8382:8432  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_153\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8387:8390  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8387:8397  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8423:8428  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8407:8430  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8399:8431  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8382:8386  _add */\n      tag_154\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8382:8432  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8375:8432  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8289:8439  function add(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2815:4183  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2881:2885  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2991:3007  uint256 position */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3010:3013  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3010:3024  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3010:3031  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3025:3030  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3010:3031  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2991:3031  uint256 position = set._positions[value] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3058:3059  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3046:3054  position */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3046:3059  position != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3042:4177  if (position != 0) {... */\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3413:3431  uint256 valueIndex */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3445:3446  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3434:3442  position */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3434:3446  position - 1 */\n      tag_157\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3413:3446  uint256 valueIndex = position - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3460:3477  uint256 lastIndex */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3501:3502  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3480:3483  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3480:3491  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3480:3498  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3480:3502  set._values.length - 1 */\n      tag_158\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3460:3502  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3535:3544  lastIndex */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3521:3531  valueIndex */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3521:3544  valueIndex != lastIndex */\n      eq\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3517:3895  if (valueIndex != lastIndex) {... */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3564:3581  bytes32 lastValue */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3584:3587  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3584:3595  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3596:3605  lastIndex */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3584:3606  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_161\n      tag_56\n      jump\t// in\n    tag_161:\n    tag_160:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3564:3606  bytes32 lastValue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3731:3740  lastValue */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3705:3708  set */\n      dup8\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3705:3716  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3717:3727  valueIndex */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3705:3728  set._values[valueIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_163\n      jumpi\n      tag_164\n      tag_56\n      jump\t// in\n    tag_164:\n    tag_163:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3705:3740  set._values[valueIndex] = lastValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3872:3880  position */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3844:3847  set */\n      dup8\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3844:3858  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3844:3869  set._positions[lastValue] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3859:3868  lastValue */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3844:3869  set._positions[lastValue] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3844:3880  set._positions[lastValue] = position */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3546:3895  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3517:3895  if (valueIndex != lastIndex) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3973:3976  set */\n      dup6\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3973:3984  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3973:3990  set._values.pop() */\n      dup1\n      sload\n      dup1\n      tag_166\n      jumpi\n      tag_167\n      tag_168\n      jump\t// in\n    tag_167:\n    tag_166:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4076:4079  set */\n      dup6\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4076:4090  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4076:4097  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4091:4096  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4076:4097  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4069:4097  delete set._positions[value] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4119:4123  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4112:4123  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_155)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3042:4177  if (position != 0) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4161:4166  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4154:4166  return false */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2815:4183  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_155:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2241:2647  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2304:2308  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2346  _contains(set, value) */\n      tag_173\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2335:2338  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2340:2345  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2334  _contains */\n      tag_174\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2346  _contains(set, value) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2365  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2373  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2379:2384  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2385  set._values.push(value) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2547  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2555  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2562  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2523  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2534  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2535:2540  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2562  set._positions[value] = set._values.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2583:2587  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2576:2587  return true */\n      swap1\n      pop\n      jump(tag_172)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2625:2630  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2618:2630  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2241:2647  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_172:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4337:4341  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4385:4386  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4363  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4374  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4375:4380  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4386  set._positions[value] != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4353:4386  return set._positions[value] != 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_179:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_180:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_181:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_221\n        /* \"#utility.yul\":306:340   */\n      tag_222\n        /* \"#utility.yul\":315:339   */\n      tag_223\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_179\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":306:340   */\n      tag_180\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":288:341   */\n      tag_179\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_182:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_225\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_181\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:625   */\n    tag_183:\n        /* \"#utility.yul\":549:558   */\n      0x00\n        /* \"#utility.yul\":582:619   */\n      tag_227\n        /* \"#utility.yul\":613:618   */\n      dup3\n        /* \"#utility.yul\":582:619   */\n      tag_182\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":569:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:790   */\n    tag_184:\n        /* \"#utility.yul\":732:783   */\n      tag_229\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":732:783   */\n      tag_183\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":727:730   */\n      dup3\n        /* \"#utility.yul\":720:784   */\n      mstore\n        /* \"#utility.yul\":631:790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1046   */\n    tag_20:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":930:939   */\n      dup3\n        /* \"#utility.yul\":926:944   */\n      add\n        /* \"#utility.yul\":918:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1039   */\n      tag_231\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1025:1034   */\n      dup4\n        /* \"#utility.yul\":1021:1038   */\n      add\n        /* \"#utility.yul\":1012:1018   */\n      dup5\n        /* \"#utility.yul\":954:1039   */\n      tag_184\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":796:1046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1133:1250   */\n    tag_186:\n        /* \"#utility.yul\":1242:1243   */\n      0x00\n        /* \"#utility.yul\":1239:1240   */\n      dup1\n        /* \"#utility.yul\":1232:1244   */\n      revert\n        /* \"#utility.yul\":1379:1456   */\n    tag_188:\n        /* \"#utility.yul\":1416:1423   */\n      0x00\n        /* \"#utility.yul\":1445:1450   */\n      dup2\n        /* \"#utility.yul\":1434:1450   */\n      swap1\n      pop\n        /* \"#utility.yul\":1379:1456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1462:1584   */\n    tag_189:\n        /* \"#utility.yul\":1535:1559   */\n      tag_237\n        /* \"#utility.yul\":1553:1558   */\n      dup2\n        /* \"#utility.yul\":1535:1559   */\n      tag_188\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1528:1533   */\n      dup2\n        /* \"#utility.yul\":1525:1560   */\n      eq\n        /* \"#utility.yul\":1515:1578   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":1574:1575   */\n      0x00\n        /* \"#utility.yul\":1571:1572   */\n      dup1\n        /* \"#utility.yul\":1564:1576   */\n      revert\n        /* \"#utility.yul\":1515:1578   */\n    tag_238:\n        /* \"#utility.yul\":1462:1584   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1590:1729   */\n    tag_190:\n        /* \"#utility.yul\":1636:1641   */\n      0x00\n        /* \"#utility.yul\":1674:1680   */\n      dup2\n        /* \"#utility.yul\":1661:1681   */\n      calldataload\n        /* \"#utility.yul\":1652:1681   */\n      swap1\n      pop\n        /* \"#utility.yul\":1690:1723   */\n      tag_240\n        /* \"#utility.yul\":1717:1722   */\n      dup2\n        /* \"#utility.yul\":1690:1723   */\n      tag_189\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1590:1729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:2209   */\n    tag_23:\n        /* \"#utility.yul\":1803:1809   */\n      0x00\n        /* \"#utility.yul\":1811:1817   */\n      dup1\n        /* \"#utility.yul\":1860:1862   */\n      0x40\n        /* \"#utility.yul\":1848:1857   */\n      dup4\n        /* \"#utility.yul\":1839:1846   */\n      dup6\n        /* \"#utility.yul\":1835:1858   */\n      sub\n        /* \"#utility.yul\":1831:1863   */\n      slt\n        /* \"#utility.yul\":1828:1947   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":1866:1945   */\n      tag_243\n      tag_186\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1828:1947   */\n    tag_242:\n        /* \"#utility.yul\":1986:1987   */\n      0x00\n        /* \"#utility.yul\":2011:2064   */\n      tag_244\n        /* \"#utility.yul\":2056:2063   */\n      dup6\n        /* \"#utility.yul\":2047:2053   */\n      dup3\n        /* \"#utility.yul\":2036:2045   */\n      dup7\n        /* \"#utility.yul\":2032:2054   */\n      add\n        /* \"#utility.yul\":2011:2064   */\n      tag_190\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2001:2064   */\n      swap3\n      pop\n        /* \"#utility.yul\":1957:2074   */\n      pop\n        /* \"#utility.yul\":2113:2115   */\n      0x20\n        /* \"#utility.yul\":2139:2192   */\n      tag_245\n        /* \"#utility.yul\":2184:2191   */\n      dup6\n        /* \"#utility.yul\":2175:2181   */\n      dup3\n        /* \"#utility.yul\":2164:2173   */\n      dup7\n        /* \"#utility.yul\":2160:2182   */\n      add\n        /* \"#utility.yul\":2139:2192   */\n      tag_190\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2129:2192   */\n      swap2\n      pop\n        /* \"#utility.yul\":2084:2202   */\n      pop\n        /* \"#utility.yul\":1735:2209   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2215:2333   */\n    tag_191:\n        /* \"#utility.yul\":2302:2326   */\n      tag_247\n        /* \"#utility.yul\":2320:2325   */\n      dup2\n        /* \"#utility.yul\":2302:2326   */\n      tag_188\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2297:2300   */\n      dup3\n        /* \"#utility.yul\":2290:2327   */\n      mstore\n        /* \"#utility.yul\":2215:2333   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2339:2561   */\n    tag_28:\n        /* \"#utility.yul\":2432:2436   */\n      0x00\n        /* \"#utility.yul\":2470:2472   */\n      0x20\n        /* \"#utility.yul\":2459:2468   */\n      dup3\n        /* \"#utility.yul\":2455:2473   */\n      add\n        /* \"#utility.yul\":2447:2473   */\n      swap1\n      pop\n        /* \"#utility.yul\":2483:2554   */\n      tag_249\n        /* \"#utility.yul\":2551:2552   */\n      0x00\n        /* \"#utility.yul\":2540:2549   */\n      dup4\n        /* \"#utility.yul\":2536:2553   */\n      add\n        /* \"#utility.yul\":2527:2533   */\n      dup5\n        /* \"#utility.yul\":2483:2554   */\n      tag_191\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2339:2561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2663   */\n    tag_192:\n        /* \"#utility.yul\":2604:2611   */\n      0x00\n        /* \"#utility.yul\":2633:2657   */\n      tag_251\n        /* \"#utility.yul\":2651:2656   */\n      dup3\n        /* \"#utility.yul\":2633:2657   */\n      tag_179\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2622:2657   */\n      swap1\n      pop\n        /* \"#utility.yul\":2567:2663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2669:2787   */\n    tag_193:\n        /* \"#utility.yul\":2756:2780   */\n      tag_253\n        /* \"#utility.yul\":2774:2779   */\n      dup2\n        /* \"#utility.yul\":2756:2780   */\n      tag_192\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2751:2754   */\n      dup3\n        /* \"#utility.yul\":2744:2781   */\n      mstore\n        /* \"#utility.yul\":2669:2787   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2793:3015   */\n    tag_35:\n        /* \"#utility.yul\":2886:2890   */\n      0x00\n        /* \"#utility.yul\":2924:2926   */\n      0x20\n        /* \"#utility.yul\":2913:2922   */\n      dup3\n        /* \"#utility.yul\":2909:2927   */\n      add\n        /* \"#utility.yul\":2901:2927   */\n      swap1\n      pop\n        /* \"#utility.yul\":2937:3008   */\n      tag_255\n        /* \"#utility.yul\":3005:3006   */\n      0x00\n        /* \"#utility.yul\":2994:3003   */\n      dup4\n        /* \"#utility.yul\":2990:3007   */\n      add\n        /* \"#utility.yul\":2981:2987   */\n      dup5\n        /* \"#utility.yul\":2937:3008   */\n      tag_193\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2793:3015   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3143   */\n    tag_194:\n        /* \"#utility.yul\":3094:3118   */\n      tag_257\n        /* \"#utility.yul\":3112:3117   */\n      dup2\n        /* \"#utility.yul\":3094:3118   */\n      tag_192\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":3087:3092   */\n      dup2\n        /* \"#utility.yul\":3084:3119   */\n      eq\n        /* \"#utility.yul\":3074:3137   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":3133:3134   */\n      0x00\n        /* \"#utility.yul\":3130:3131   */\n      dup1\n        /* \"#utility.yul\":3123:3135   */\n      revert\n        /* \"#utility.yul\":3074:3137   */\n    tag_258:\n        /* \"#utility.yul\":3021:3143   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3149:3288   */\n    tag_195:\n        /* \"#utility.yul\":3195:3200   */\n      0x00\n        /* \"#utility.yul\":3233:3239   */\n      dup2\n        /* \"#utility.yul\":3220:3240   */\n      calldataload\n        /* \"#utility.yul\":3211:3240   */\n      swap1\n      pop\n        /* \"#utility.yul\":3249:3282   */\n      tag_260\n        /* \"#utility.yul\":3276:3281   */\n      dup2\n        /* \"#utility.yul\":3249:3282   */\n      tag_194\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3149:3288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3294:3623   */\n    tag_38:\n        /* \"#utility.yul\":3353:3359   */\n      0x00\n        /* \"#utility.yul\":3402:3404   */\n      0x20\n        /* \"#utility.yul\":3390:3399   */\n      dup3\n        /* \"#utility.yul\":3381:3388   */\n      dup5\n        /* \"#utility.yul\":3377:3400   */\n      sub\n        /* \"#utility.yul\":3373:3405   */\n      slt\n        /* \"#utility.yul\":3370:3489   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":3408:3487   */\n      tag_263\n      tag_186\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3370:3489   */\n    tag_262:\n        /* \"#utility.yul\":3528:3529   */\n      0x00\n        /* \"#utility.yul\":3553:3606   */\n      tag_264\n        /* \"#utility.yul\":3598:3605   */\n      dup5\n        /* \"#utility.yul\":3589:3595   */\n      dup3\n        /* \"#utility.yul\":3578:3587   */\n      dup6\n        /* \"#utility.yul\":3574:3596   */\n      add\n        /* \"#utility.yul\":3553:3606   */\n      tag_195\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":3543:3606   */\n      swap2\n      pop\n        /* \"#utility.yul\":3499:3616   */\n      pop\n        /* \"#utility.yul\":3294:3623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3629:3765   */\n    tag_196:\n        /* \"#utility.yul\":3718:3724   */\n      0x00\n        /* \"#utility.yul\":3752:3757   */\n      dup2\n        /* \"#utility.yul\":3746:3758   */\n      mload\n        /* \"#utility.yul\":3736:3758   */\n      swap1\n      pop\n        /* \"#utility.yul\":3629:3765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3771:3977   */\n    tag_197:\n        /* \"#utility.yul\":3892:3903   */\n      0x00\n        /* \"#utility.yul\":3926:3932   */\n      dup3\n        /* \"#utility.yul\":3921:3924   */\n      dup3\n        /* \"#utility.yul\":3914:3933   */\n      mstore\n        /* \"#utility.yul\":3966:3970   */\n      0x20\n        /* \"#utility.yul\":3961:3964   */\n      dup3\n        /* \"#utility.yul\":3957:3971   */\n      add\n        /* \"#utility.yul\":3942:3971   */\n      swap1\n      pop\n        /* \"#utility.yul\":3771:3977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3983:4137   */\n    tag_198:\n        /* \"#utility.yul\":4072:4076   */\n      0x00\n        /* \"#utility.yul\":4095:4098   */\n      dup2\n        /* \"#utility.yul\":4087:4098   */\n      swap1\n      pop\n        /* \"#utility.yul\":4125:4129   */\n      0x20\n        /* \"#utility.yul\":4120:4123   */\n      dup3\n        /* \"#utility.yul\":4116:4130   */\n      add\n        /* \"#utility.yul\":4108:4130   */\n      swap1\n      pop\n        /* \"#utility.yul\":3983:4137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4143:4251   */\n    tag_199:\n        /* \"#utility.yul\":4220:4244   */\n      tag_269\n        /* \"#utility.yul\":4238:4243   */\n      dup2\n        /* \"#utility.yul\":4220:4244   */\n      tag_188\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":4215:4218   */\n      dup3\n        /* \"#utility.yul\":4208:4245   */\n      mstore\n        /* \"#utility.yul\":4143:4251   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4325:4832   */\n    tag_200:\n        /* \"#utility.yul\":4456:4460   */\n      0x40\n        /* \"#utility.yul\":4451:4454   */\n      dup3\n        /* \"#utility.yul\":4447:4461   */\n      add\n        /* \"#utility.yul\":4551:4555   */\n      0x00\n        /* \"#utility.yul\":4544:4549   */\n      dup3\n        /* \"#utility.yul\":4540:4556   */\n      add\n        /* \"#utility.yul\":4534:4557   */\n      mload\n        /* \"#utility.yul\":4570:4633   */\n      tag_271\n        /* \"#utility.yul\":4627:4631   */\n      0x00\n        /* \"#utility.yul\":4622:4625   */\n      dup6\n        /* \"#utility.yul\":4618:4632   */\n      add\n        /* \"#utility.yul\":4604:4616   */\n      dup3\n        /* \"#utility.yul\":4570:4633   */\n      tag_199\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4471:4643   */\n      pop\n        /* \"#utility.yul\":4733:4737   */\n      0x20\n        /* \"#utility.yul\":4726:4731   */\n      dup3\n        /* \"#utility.yul\":4722:4738   */\n      add\n        /* \"#utility.yul\":4716:4739   */\n      mload\n        /* \"#utility.yul\":4752:4815   */\n      tag_272\n        /* \"#utility.yul\":4809:4813   */\n      0x20\n        /* \"#utility.yul\":4804:4807   */\n      dup6\n        /* \"#utility.yul\":4800:4814   */\n      add\n        /* \"#utility.yul\":4786:4798   */\n      dup3\n        /* \"#utility.yul\":4752:4815   */\n      tag_199\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4653:4825   */\n      pop\n        /* \"#utility.yul\":4425:4832   */\n      pop\n        /* \"#utility.yul\":4325:4832   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4838:5105   */\n    tag_201:\n        /* \"#utility.yul\":4951:4961   */\n      0x00\n        /* \"#utility.yul\":4972:5062   */\n      tag_274\n        /* \"#utility.yul\":5058:5061   */\n      dup4\n        /* \"#utility.yul\":5050:5056   */\n      dup4\n        /* \"#utility.yul\":4972:5062   */\n      tag_200\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5094:5098   */\n      0x40\n        /* \"#utility.yul\":5089:5092   */\n      dup4\n        /* \"#utility.yul\":5085:5099   */\n      add\n        /* \"#utility.yul\":5071:5099   */\n      swap1\n      pop\n        /* \"#utility.yul\":4838:5105   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5111:5246   */\n    tag_202:\n        /* \"#utility.yul\":5203:5207   */\n      0x00\n        /* \"#utility.yul\":5235:5239   */\n      0x20\n        /* \"#utility.yul\":5230:5233   */\n      dup3\n        /* \"#utility.yul\":5226:5240   */\n      add\n        /* \"#utility.yul\":5218:5240   */\n      swap1\n      pop\n        /* \"#utility.yul\":5111:5246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5324:6232   */\n    tag_203:\n        /* \"#utility.yul\":5487:5490   */\n      0x00\n        /* \"#utility.yul\":5516:5592   */\n      tag_277\n        /* \"#utility.yul\":5586:5591   */\n      dup3\n        /* \"#utility.yul\":5516:5592   */\n      tag_196\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":5608:5716   */\n      tag_278\n        /* \"#utility.yul\":5709:5715   */\n      dup2\n        /* \"#utility.yul\":5704:5707   */\n      dup6\n        /* \"#utility.yul\":5608:5716   */\n      tag_197\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":5601:5716   */\n      swap4\n      pop\n        /* \"#utility.yul\":5740:5818   */\n      tag_279\n        /* \"#utility.yul\":5812:5817   */\n      dup4\n        /* \"#utility.yul\":5740:5818   */\n      tag_198\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5841:5848   */\n      dup1\n        /* \"#utility.yul\":5872:5873   */\n      0x00\n        /* \"#utility.yul\":5857:6207   */\n    tag_280:\n        /* \"#utility.yul\":5882:5888   */\n      dup4\n        /* \"#utility.yul\":5879:5880   */\n      dup2\n        /* \"#utility.yul\":5876:5889   */\n      lt\n        /* \"#utility.yul\":5857:6207   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":5958:5964   */\n      dup2\n        /* \"#utility.yul\":5952:5965   */\n      mload\n        /* \"#utility.yul\":5985:6092   */\n      tag_283\n        /* \"#utility.yul\":6088:6091   */\n      dup9\n        /* \"#utility.yul\":6073:6086   */\n      dup3\n        /* \"#utility.yul\":5985:6092   */\n      tag_201\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5978:6092   */\n      swap8\n      pop\n        /* \"#utility.yul\":6115:6197   */\n      tag_284\n        /* \"#utility.yul\":6190:6196   */\n      dup4\n        /* \"#utility.yul\":6115:6197   */\n      tag_202\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6105:6197   */\n      swap3\n      pop\n        /* \"#utility.yul\":5917:6207   */\n      pop\n        /* \"#utility.yul\":5904:5905   */\n      0x01\n        /* \"#utility.yul\":5901:5902   */\n      dup2\n        /* \"#utility.yul\":5897:5906   */\n      add\n        /* \"#utility.yul\":5892:5906   */\n      swap1\n      pop\n        /* \"#utility.yul\":5857:6207   */\n      jump(tag_280)\n    tag_282:\n        /* \"#utility.yul\":5861:5875   */\n      pop\n        /* \"#utility.yul\":6223:6226   */\n      dup6\n        /* \"#utility.yul\":6216:6226   */\n      swap4\n      pop\n        /* \"#utility.yul\":5492:6232   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5324:6232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6238:6699   */\n    tag_43:\n        /* \"#utility.yul\":6425:6429   */\n      0x00\n        /* \"#utility.yul\":6463:6465   */\n      0x20\n        /* \"#utility.yul\":6452:6461   */\n      dup3\n        /* \"#utility.yul\":6448:6466   */\n      add\n        /* \"#utility.yul\":6440:6466   */\n      swap1\n      pop\n        /* \"#utility.yul\":6512:6521   */\n      dup2\n        /* \"#utility.yul\":6506:6510   */\n      dup2\n        /* \"#utility.yul\":6502:6522   */\n      sub\n        /* \"#utility.yul\":6498:6499   */\n      0x00\n        /* \"#utility.yul\":6487:6496   */\n      dup4\n        /* \"#utility.yul\":6483:6500   */\n      add\n        /* \"#utility.yul\":6476:6523   */\n      mstore\n        /* \"#utility.yul\":6540:6692   */\n      tag_286\n        /* \"#utility.yul\":6687:6691   */\n      dup2\n        /* \"#utility.yul\":6678:6684   */\n      dup5\n        /* \"#utility.yul\":6540:6692   */\n      tag_203\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":6532:6692   */\n      swap1\n      pop\n        /* \"#utility.yul\":6238:6699   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6705:6885   */\n    tag_56:\n        /* \"#utility.yul\":6753:6830   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6750:6751   */\n      0x00\n        /* \"#utility.yul\":6743:6831   */\n      mstore\n        /* \"#utility.yul\":6850:6854   */\n      0x32\n        /* \"#utility.yul\":6847:6848   */\n      0x04\n        /* \"#utility.yul\":6840:6855   */\n      mstore\n        /* \"#utility.yul\":6874:6878   */\n      0x24\n        /* \"#utility.yul\":6871:6872   */\n      0x00\n        /* \"#utility.yul\":6864:6879   */\n      revert\n        /* \"#utility.yul\":6891:7071   */\n    tag_204:\n        /* \"#utility.yul\":6939:7016   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6936:6937   */\n      0x00\n        /* \"#utility.yul\":6929:7017   */\n      mstore\n        /* \"#utility.yul\":7036:7040   */\n      0x11\n        /* \"#utility.yul\":7033:7034   */\n      0x04\n        /* \"#utility.yul\":7026:7041   */\n      mstore\n        /* \"#utility.yul\":7060:7064   */\n      0x24\n        /* \"#utility.yul\":7057:7058   */\n      0x00\n        /* \"#utility.yul\":7050:7065   */\n      revert\n        /* \"#utility.yul\":7077:7268   */\n    tag_64:\n        /* \"#utility.yul\":7117:7120   */\n      0x00\n        /* \"#utility.yul\":7136:7156   */\n      tag_290\n        /* \"#utility.yul\":7154:7155   */\n      dup3\n        /* \"#utility.yul\":7136:7156   */\n      tag_188\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":7131:7156   */\n      swap2\n      pop\n        /* \"#utility.yul\":7170:7190   */\n      tag_291\n        /* \"#utility.yul\":7188:7189   */\n      dup4\n        /* \"#utility.yul\":7170:7190   */\n      tag_188\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7165:7190   */\n      swap3\n      pop\n        /* \"#utility.yul\":7213:7214   */\n      dup3\n        /* \"#utility.yul\":7210:7211   */\n      dup3\n        /* \"#utility.yul\":7206:7215   */\n      add\n        /* \"#utility.yul\":7199:7215   */\n      swap1\n      pop\n        /* \"#utility.yul\":7234:7237   */\n      dup1\n        /* \"#utility.yul\":7231:7232   */\n      dup3\n        /* \"#utility.yul\":7228:7238   */\n      gt\n        /* \"#utility.yul\":7225:7261   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":7241:7259   */\n      tag_293\n      tag_204\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7225:7261   */\n    tag_292:\n        /* \"#utility.yul\":7077:7268   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7274:7606   */\n    tag_78:\n        /* \"#utility.yul\":7395:7399   */\n      0x00\n        /* \"#utility.yul\":7433:7435   */\n      0x40\n        /* \"#utility.yul\":7422:7431   */\n      dup3\n        /* \"#utility.yul\":7418:7436   */\n      add\n        /* \"#utility.yul\":7410:7436   */\n      swap1\n      pop\n        /* \"#utility.yul\":7446:7517   */\n      tag_295\n        /* \"#utility.yul\":7514:7515   */\n      0x00\n        /* \"#utility.yul\":7503:7512   */\n      dup4\n        /* \"#utility.yul\":7499:7516   */\n      add\n        /* \"#utility.yul\":7490:7496   */\n      dup6\n        /* \"#utility.yul\":7446:7517   */\n      tag_193\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7527:7599   */\n      tag_296\n        /* \"#utility.yul\":7595:7597   */\n      0x20\n        /* \"#utility.yul\":7584:7593   */\n      dup4\n        /* \"#utility.yul\":7580:7598   */\n      add\n        /* \"#utility.yul\":7571:7577   */\n      dup5\n        /* \"#utility.yul\":7527:7599   */\n      tag_191\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":7274:7606   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7612:7702   */\n    tag_205:\n        /* \"#utility.yul\":7646:7653   */\n      0x00\n        /* \"#utility.yul\":7689:7694   */\n      dup2\n        /* \"#utility.yul\":7682:7695   */\n      iszero\n        /* \"#utility.yul\":7675:7696   */\n      iszero\n        /* \"#utility.yul\":7664:7696   */\n      swap1\n      pop\n        /* \"#utility.yul\":7612:7702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7708:7824   */\n    tag_206:\n        /* \"#utility.yul\":7778:7799   */\n      tag_299\n        /* \"#utility.yul\":7793:7798   */\n      dup2\n        /* \"#utility.yul\":7778:7799   */\n      tag_205\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":7771:7776   */\n      dup2\n        /* \"#utility.yul\":7768:7800   */\n      eq\n        /* \"#utility.yul\":7758:7818   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":7814:7815   */\n      0x00\n        /* \"#utility.yul\":7811:7812   */\n      dup1\n        /* \"#utility.yul\":7804:7816   */\n      revert\n        /* \"#utility.yul\":7758:7818   */\n    tag_300:\n        /* \"#utility.yul\":7708:7824   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7830:7967   */\n    tag_207:\n        /* \"#utility.yul\":7884:7889   */\n      0x00\n        /* \"#utility.yul\":7915:7921   */\n      dup2\n        /* \"#utility.yul\":7909:7922   */\n      mload\n        /* \"#utility.yul\":7900:7922   */\n      swap1\n      pop\n        /* \"#utility.yul\":7931:7961   */\n      tag_302\n        /* \"#utility.yul\":7955:7960   */\n      dup2\n        /* \"#utility.yul\":7931:7961   */\n      tag_206\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":7830:7967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7973:8318   */\n    tag_82:\n        /* \"#utility.yul\":8040:8046   */\n      0x00\n        /* \"#utility.yul\":8089:8091   */\n      0x20\n        /* \"#utility.yul\":8077:8086   */\n      dup3\n        /* \"#utility.yul\":8068:8075   */\n      dup5\n        /* \"#utility.yul\":8064:8087   */\n      sub\n        /* \"#utility.yul\":8060:8092   */\n      slt\n        /* \"#utility.yul\":8057:8176   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":8095:8174   */\n      tag_305\n      tag_186\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":8057:8176   */\n    tag_304:\n        /* \"#utility.yul\":8215:8216   */\n      0x00\n        /* \"#utility.yul\":8240:8301   */\n      tag_306\n        /* \"#utility.yul\":8293:8300   */\n      dup5\n        /* \"#utility.yul\":8284:8290   */\n      dup3\n        /* \"#utility.yul\":8273:8282   */\n      dup6\n        /* \"#utility.yul\":8269:8291   */\n      add\n        /* \"#utility.yul\":8240:8301   */\n      tag_207\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":8230:8301   */\n      swap2\n      pop\n        /* \"#utility.yul\":8186:8311   */\n      pop\n        /* \"#utility.yul\":7973:8318   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8324:8493   */\n    tag_208:\n        /* \"#utility.yul\":8408:8419   */\n      0x00\n        /* \"#utility.yul\":8442:8448   */\n      dup3\n        /* \"#utility.yul\":8437:8440   */\n      dup3\n        /* \"#utility.yul\":8430:8449   */\n      mstore\n        /* \"#utility.yul\":8482:8486   */\n      0x20\n        /* \"#utility.yul\":8477:8480   */\n      dup3\n        /* \"#utility.yul\":8473:8487   */\n      add\n        /* \"#utility.yul\":8458:8487   */\n      swap1\n      pop\n        /* \"#utility.yul\":8324:8493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8499:8664   */\n    tag_209:\n        /* \"#utility.yul\":8639:8656   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":8635:8636   */\n      0x00\n        /* \"#utility.yul\":8627:8633   */\n      dup3\n        /* \"#utility.yul\":8623:8637   */\n      add\n        /* \"#utility.yul\":8616:8657   */\n      mstore\n        /* \"#utility.yul\":8499:8664   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8670:9036   */\n    tag_210:\n        /* \"#utility.yul\":8812:8815   */\n      0x00\n        /* \"#utility.yul\":8833:8900   */\n      tag_310\n        /* \"#utility.yul\":8897:8899   */\n      0x0f\n        /* \"#utility.yul\":8892:8895   */\n      dup4\n        /* \"#utility.yul\":8833:8900   */\n      tag_208\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":8826:8900   */\n      swap2\n      pop\n        /* \"#utility.yul\":8909:9002   */\n      tag_311\n        /* \"#utility.yul\":8998:9001   */\n      dup3\n        /* \"#utility.yul\":8909:9002   */\n      tag_209\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":9027:9029   */\n      0x20\n        /* \"#utility.yul\":9022:9025   */\n      dup3\n        /* \"#utility.yul\":9018:9030   */\n      add\n        /* \"#utility.yul\":9011:9030   */\n      swap1\n      pop\n        /* \"#utility.yul\":8670:9036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9461   */\n    tag_85:\n        /* \"#utility.yul\":9208:9212   */\n      0x00\n        /* \"#utility.yul\":9246:9248   */\n      0x20\n        /* \"#utility.yul\":9235:9244   */\n      dup3\n        /* \"#utility.yul\":9231:9249   */\n      add\n        /* \"#utility.yul\":9223:9249   */\n      swap1\n      pop\n        /* \"#utility.yul\":9295:9304   */\n      dup2\n        /* \"#utility.yul\":9289:9293   */\n      dup2\n        /* \"#utility.yul\":9285:9305   */\n      sub\n        /* \"#utility.yul\":9281:9282   */\n      0x00\n        /* \"#utility.yul\":9270:9279   */\n      dup4\n        /* \"#utility.yul\":9266:9283   */\n      add\n        /* \"#utility.yul\":9259:9306   */\n      mstore\n        /* \"#utility.yul\":9323:9454   */\n      tag_313\n        /* \"#utility.yul\":9449:9453   */\n      dup2\n        /* \"#utility.yul\":9323:9454   */\n      tag_210\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":9315:9454   */\n      swap1\n      pop\n        /* \"#utility.yul\":9042:9461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9467:9661   */\n    tag_87:\n        /* \"#utility.yul\":9507:9511   */\n      0x00\n        /* \"#utility.yul\":9527:9547   */\n      tag_315\n        /* \"#utility.yul\":9545:9546   */\n      dup3\n        /* \"#utility.yul\":9527:9547   */\n      tag_188\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":9522:9547   */\n      swap2\n      pop\n        /* \"#utility.yul\":9561:9581   */\n      tag_316\n        /* \"#utility.yul\":9579:9580   */\n      dup4\n        /* \"#utility.yul\":9561:9581   */\n      tag_188\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":9556:9581   */\n      swap3\n      pop\n        /* \"#utility.yul\":9605:9606   */\n      dup3\n        /* \"#utility.yul\":9602:9603   */\n      dup3\n        /* \"#utility.yul\":9598:9607   */\n      sub\n        /* \"#utility.yul\":9590:9607   */\n      swap1\n      pop\n        /* \"#utility.yul\":9629:9630   */\n      dup2\n        /* \"#utility.yul\":9623:9627   */\n      dup2\n        /* \"#utility.yul\":9620:9631   */\n      gt\n        /* \"#utility.yul\":9617:9654   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":9634:9652   */\n      tag_318\n      tag_204\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":9617:9654   */\n    tag_317:\n        /* \"#utility.yul\":9467:9661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9667:10077   */\n    tag_102:\n        /* \"#utility.yul\":9707:9714   */\n      0x00\n        /* \"#utility.yul\":9730:9750   */\n      tag_320\n        /* \"#utility.yul\":9748:9749   */\n      dup3\n        /* \"#utility.yul\":9730:9750   */\n      tag_188\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":9725:9750   */\n      swap2\n      pop\n        /* \"#utility.yul\":9764:9784   */\n      tag_321\n        /* \"#utility.yul\":9782:9783   */\n      dup4\n        /* \"#utility.yul\":9764:9784   */\n      tag_188\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":9759:9784   */\n      swap3\n      pop\n        /* \"#utility.yul\":9819:9820   */\n      dup3\n        /* \"#utility.yul\":9816:9817   */\n      dup3\n        /* \"#utility.yul\":9812:9821   */\n      mul\n        /* \"#utility.yul\":9841:9871   */\n      tag_322\n        /* \"#utility.yul\":9859:9870   */\n      dup2\n        /* \"#utility.yul\":9841:9871   */\n      tag_188\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":9830:9871   */\n      swap2\n      pop\n        /* \"#utility.yul\":10020:10021   */\n      dup3\n        /* \"#utility.yul\":10011:10018   */\n      dup3\n        /* \"#utility.yul\":10007:10022   */\n      div\n        /* \"#utility.yul\":10004:10005   */\n      dup5\n        /* \"#utility.yul\":10001:10023   */\n      eq\n        /* \"#utility.yul\":9981:9982   */\n      dup4\n        /* \"#utility.yul\":9974:9983   */\n      iszero\n        /* \"#utility.yul\":9954:10037   */\n      or\n        /* \"#utility.yul\":9931:10070   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":10050:10068   */\n      tag_324\n      tag_204\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":9931:10070   */\n    tag_323:\n        /* \"#utility.yul\":9715:10077   */\n      pop\n        /* \"#utility.yul\":9667:10077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10083:10333   */\n    tag_211:\n        /* \"#utility.yul\":10223:10257   */\n      0x5374616b696e6720706572696f642063616e6e6f742065786365656420342079\n        /* \"#utility.yul\":10219:10220   */\n      0x00\n        /* \"#utility.yul\":10211:10217   */\n      dup3\n        /* \"#utility.yul\":10207:10221   */\n      add\n        /* \"#utility.yul\":10200:10258   */\n      mstore\n        /* \"#utility.yul\":10292:10325   */\n      0x6561727320616e64206d7573742062652067726561746572207468616e203000\n        /* \"#utility.yul\":10287:10289   */\n      0x20\n        /* \"#utility.yul\":10279:10285   */\n      dup3\n        /* \"#utility.yul\":10275:10290   */\n      add\n        /* \"#utility.yul\":10268:10326   */\n      mstore\n        /* \"#utility.yul\":10083:10333   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10339:10705   */\n    tag_212:\n        /* \"#utility.yul\":10481:10484   */\n      0x00\n        /* \"#utility.yul\":10502:10569   */\n      tag_327\n        /* \"#utility.yul\":10566:10568   */\n      0x3f\n        /* \"#utility.yul\":10561:10564   */\n      dup4\n        /* \"#utility.yul\":10502:10569   */\n      tag_208\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":10495:10569   */\n      swap2\n      pop\n        /* \"#utility.yul\":10578:10671   */\n      tag_328\n        /* \"#utility.yul\":10667:10670   */\n      dup3\n        /* \"#utility.yul\":10578:10671   */\n      tag_211\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":10696:10698   */\n      0x40\n        /* \"#utility.yul\":10691:10694   */\n      dup3\n        /* \"#utility.yul\":10687:10699   */\n      add\n        /* \"#utility.yul\":10680:10699   */\n      swap1\n      pop\n        /* \"#utility.yul\":10339:10705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10711:11130   */\n    tag_105:\n        /* \"#utility.yul\":10877:10881   */\n      0x00\n        /* \"#utility.yul\":10915:10917   */\n      0x20\n        /* \"#utility.yul\":10904:10913   */\n      dup3\n        /* \"#utility.yul\":10900:10918   */\n      add\n        /* \"#utility.yul\":10892:10918   */\n      swap1\n      pop\n        /* \"#utility.yul\":10964:10973   */\n      dup2\n        /* \"#utility.yul\":10958:10962   */\n      dup2\n        /* \"#utility.yul\":10954:10974   */\n      sub\n        /* \"#utility.yul\":10950:10951   */\n      0x00\n        /* \"#utility.yul\":10939:10948   */\n      dup4\n        /* \"#utility.yul\":10935:10952   */\n      add\n        /* \"#utility.yul\":10928:10975   */\n      mstore\n        /* \"#utility.yul\":10992:11123   */\n      tag_330\n        /* \"#utility.yul\":11118:11122   */\n      dup2\n        /* \"#utility.yul\":10992:11123   */\n      tag_212\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":10984:11123   */\n      swap1\n      pop\n        /* \"#utility.yul\":10711:11130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11136:11315   */\n    tag_213:\n        /* \"#utility.yul\":11276:11307   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":11272:11273   */\n      0x00\n        /* \"#utility.yul\":11264:11270   */\n      dup3\n        /* \"#utility.yul\":11260:11274   */\n      add\n        /* \"#utility.yul\":11253:11308   */\n      mstore\n        /* \"#utility.yul\":11136:11315   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11321:11687   */\n    tag_214:\n        /* \"#utility.yul\":11463:11466   */\n      0x00\n        /* \"#utility.yul\":11484:11551   */\n      tag_333\n        /* \"#utility.yul\":11548:11550   */\n      0x1d\n        /* \"#utility.yul\":11543:11546   */\n      dup4\n        /* \"#utility.yul\":11484:11551   */\n      tag_208\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":11477:11551   */\n      swap2\n      pop\n        /* \"#utility.yul\":11560:11653   */\n      tag_334\n        /* \"#utility.yul\":11649:11652   */\n      dup3\n        /* \"#utility.yul\":11560:11653   */\n      tag_213\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":11678:11680   */\n      0x20\n        /* \"#utility.yul\":11673:11676   */\n      dup3\n        /* \"#utility.yul\":11669:11681   */\n      add\n        /* \"#utility.yul\":11662:11681   */\n      swap1\n      pop\n        /* \"#utility.yul\":11321:11687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11693:12112   */\n    tag_108:\n        /* \"#utility.yul\":11859:11863   */\n      0x00\n        /* \"#utility.yul\":11897:11899   */\n      0x20\n        /* \"#utility.yul\":11886:11895   */\n      dup3\n        /* \"#utility.yul\":11882:11900   */\n      add\n        /* \"#utility.yul\":11874:11900   */\n      swap1\n      pop\n        /* \"#utility.yul\":11946:11955   */\n      dup2\n        /* \"#utility.yul\":11940:11944   */\n      dup2\n        /* \"#utility.yul\":11936:11956   */\n      sub\n        /* \"#utility.yul\":11932:11933   */\n      0x00\n        /* \"#utility.yul\":11921:11930   */\n      dup4\n        /* \"#utility.yul\":11917:11934   */\n      add\n        /* \"#utility.yul\":11910:11957   */\n      mstore\n        /* \"#utility.yul\":11974:12105   */\n      tag_336\n        /* \"#utility.yul\":12100:12104   */\n      dup2\n        /* \"#utility.yul\":11974:12105   */\n      tag_214\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":11966:12105   */\n      swap1\n      pop\n        /* \"#utility.yul\":11693:12112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12118:12560   */\n    tag_115:\n        /* \"#utility.yul\":12267:12271   */\n      0x00\n        /* \"#utility.yul\":12305:12307   */\n      0x60\n        /* \"#utility.yul\":12294:12303   */\n      dup3\n        /* \"#utility.yul\":12290:12308   */\n      add\n        /* \"#utility.yul\":12282:12308   */\n      swap1\n      pop\n        /* \"#utility.yul\":12318:12389   */\n      tag_338\n        /* \"#utility.yul\":12386:12387   */\n      0x00\n        /* \"#utility.yul\":12375:12384   */\n      dup4\n        /* \"#utility.yul\":12371:12388   */\n      add\n        /* \"#utility.yul\":12362:12368   */\n      dup7\n        /* \"#utility.yul\":12318:12389   */\n      tag_193\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":12399:12471   */\n      tag_339\n        /* \"#utility.yul\":12467:12469   */\n      0x20\n        /* \"#utility.yul\":12456:12465   */\n      dup4\n        /* \"#utility.yul\":12452:12470   */\n      add\n        /* \"#utility.yul\":12443:12449   */\n      dup6\n        /* \"#utility.yul\":12399:12471   */\n      tag_193\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":12481:12553   */\n      tag_340\n        /* \"#utility.yul\":12549:12551   */\n      0x40\n        /* \"#utility.yul\":12538:12547   */\n      dup4\n        /* \"#utility.yul\":12534:12552   */\n      add\n        /* \"#utility.yul\":12525:12531   */\n      dup5\n        /* \"#utility.yul\":12481:12553   */\n      tag_191\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":12118:12560   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12566:12747   */\n    tag_215:\n        /* \"#utility.yul\":12706:12739   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":12702:12703   */\n      0x00\n        /* \"#utility.yul\":12694:12700   */\n      dup3\n        /* \"#utility.yul\":12690:12704   */\n      add\n        /* \"#utility.yul\":12683:12740   */\n      mstore\n        /* \"#utility.yul\":12566:12747   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12753:13119   */\n    tag_216:\n        /* \"#utility.yul\":12895:12898   */\n      0x00\n        /* \"#utility.yul\":12916:12983   */\n      tag_343\n        /* \"#utility.yul\":12980:12982   */\n      0x1f\n        /* \"#utility.yul\":12975:12978   */\n      dup4\n        /* \"#utility.yul\":12916:12983   */\n      tag_208\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":12909:12983   */\n      swap2\n      pop\n        /* \"#utility.yul\":12992:13085   */\n      tag_344\n        /* \"#utility.yul\":13081:13084   */\n      dup3\n        /* \"#utility.yul\":12992:13085   */\n      tag_215\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":13110:13112   */\n      0x20\n        /* \"#utility.yul\":13105:13108   */\n      dup3\n        /* \"#utility.yul\":13101:13113   */\n      add\n        /* \"#utility.yul\":13094:13113   */\n      swap1\n      pop\n        /* \"#utility.yul\":12753:13119   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13125:13544   */\n    tag_139:\n        /* \"#utility.yul\":13291:13295   */\n      0x00\n        /* \"#utility.yul\":13329:13331   */\n      0x20\n        /* \"#utility.yul\":13318:13327   */\n      dup3\n        /* \"#utility.yul\":13314:13332   */\n      add\n        /* \"#utility.yul\":13306:13332   */\n      swap1\n      pop\n        /* \"#utility.yul\":13378:13387   */\n      dup2\n        /* \"#utility.yul\":13372:13376   */\n      dup2\n        /* \"#utility.yul\":13368:13388   */\n      sub\n        /* \"#utility.yul\":13364:13365   */\n      0x00\n        /* \"#utility.yul\":13353:13362   */\n      dup4\n        /* \"#utility.yul\":13349:13366   */\n      add\n        /* \"#utility.yul\":13342:13389   */\n      mstore\n        /* \"#utility.yul\":13406:13537   */\n      tag_346\n        /* \"#utility.yul\":13532:13536   */\n      dup2\n        /* \"#utility.yul\":13406:13537   */\n      tag_216\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":13398:13537   */\n      swap1\n      pop\n        /* \"#utility.yul\":13125:13544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13550:13730   */\n    tag_168:\n        /* \"#utility.yul\":13598:13675   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13595:13596   */\n      0x00\n        /* \"#utility.yul\":13588:13676   */\n      mstore\n        /* \"#utility.yul\":13695:13699   */\n      0x31\n        /* \"#utility.yul\":13692:13693   */\n      0x04\n        /* \"#utility.yul\":13685:13700   */\n      mstore\n        /* \"#utility.yul\":13719:13723   */\n      0x24\n        /* \"#utility.yul\":13716:13717   */\n      0x00\n        /* \"#utility.yul\":13709:13724   */\n      revert\n\n    auxdata: 0xa2646970667358221220e808f709e868c54b84fd04c18148b7c91419c21e0144e351131507221dcfe49564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1001": {
									"entryPoint": null,
									"id": 1001,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 255,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$290_fromMemory": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$290_fromMemory": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$290": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$290": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1751:6",
										"nodeType": "YulBlock",
										"src": "0:1751:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "627:51:6",
													"nodeType": "YulBlock",
													"src": "627:51:6",
													"statements": [
														{
															"nativeSrc": "637:35:6",
															"nodeType": "YulAssignment",
															"src": "637:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:6"
																},
																"nativeSrc": "648:24:6",
																"nodeType": "YulFunctionCall",
																"src": "648:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$290",
												"nativeSrc": "568:110:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:6",
														"nodeType": "YulTypedName",
														"src": "609:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:6",
														"nodeType": "YulTypedName",
														"src": "619:7:6",
														"type": ""
													}
												],
												"src": "568:110:6"
											},
											{
												"body": {
													"nativeSrc": "741:93:6",
													"nodeType": "YulBlock",
													"src": "741:93:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:6",
																"nodeType": "YulBlock",
																"src": "812:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:6",
																					"nodeType": "YulLiteral",
																					"src": "821:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:6",
																					"nodeType": "YulLiteral",
																					"src": "824:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:6"
																			},
																			"nativeSrc": "814:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:6"
																		},
																		"nativeSrc": "814:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$290",
																					"nativeSrc": "771:31:6",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:6"
																				},
																				"nativeSrc": "771:38:6",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:6"
																		},
																		"nativeSrc": "761:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:6"
																},
																"nativeSrc": "754:57:6",
																"nodeType": "YulFunctionCall",
																"src": "754:57:6"
															},
															"nativeSrc": "751:77:6",
															"nodeType": "YulIf",
															"src": "751:77:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$290",
												"nativeSrc": "684:150:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:6",
														"nodeType": "YulTypedName",
														"src": "734:5:6",
														"type": ""
													}
												],
												"src": "684:150:6"
											},
											{
												"body": {
													"nativeSrc": "917:94:6",
													"nodeType": "YulBlock",
													"src": "917:94:6",
													"statements": [
														{
															"nativeSrc": "927:22:6",
															"nodeType": "YulAssignment",
															"src": "927:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:6"
																},
																"nativeSrc": "936:13:6",
																"nodeType": "YulFunctionCall",
																"src": "936:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$290",
																	"nativeSrc": "958:40:6",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:6"
																},
																"nativeSrc": "958:47:6",
																"nodeType": "YulFunctionCall",
																"src": "958:47:6"
															},
															"nativeSrc": "958:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$290_fromMemory",
												"nativeSrc": "840:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:6",
														"nodeType": "YulTypedName",
														"src": "895:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:6",
														"nodeType": "YulTypedName",
														"src": "903:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:6",
														"nodeType": "YulTypedName",
														"src": "911:5:6",
														"type": ""
													}
												],
												"src": "840:171:6"
											},
											{
												"body": {
													"nativeSrc": "1108:288:6",
													"nodeType": "YulBlock",
													"src": "1108:288:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:6",
																"nodeType": "YulBlock",
																"src": "1154:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:6"
																			},
																			"nativeSrc": "1156:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:6"
																		},
																		"nativeSrc": "1156:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:6"
																		},
																		"nativeSrc": "1125:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:6"
																},
																"nativeSrc": "1121:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:6"
															},
															"nativeSrc": "1118:119:6",
															"nodeType": "YulIf",
															"src": "1118:119:6"
														},
														{
															"nativeSrc": "1247:142:6",
															"nodeType": "YulBlock",
															"src": "1247:142:6",
															"statements": [
																{
																	"nativeSrc": "1262:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:88:6",
																	"nodeType": "YulAssignment",
																	"src": "1291:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1351:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1351:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1362:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1362:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1347:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1347:3:6"
																				},
																				"nativeSrc": "1347:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1347:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$290_fromMemory",
																			"nativeSrc": "1301:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "1301:45:6"
																		},
																		"nativeSrc": "1301:78:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$290_fromMemory",
												"nativeSrc": "1017:379:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:6",
														"nodeType": "YulTypedName",
														"src": "1078:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:6",
														"nodeType": "YulTypedName",
														"src": "1089:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:6",
														"nodeType": "YulTypedName",
														"src": "1101:6:6",
														"type": ""
													}
												],
												"src": "1017:379:6"
											},
											{
												"body": {
													"nativeSrc": "1467:53:6",
													"nodeType": "YulBlock",
													"src": "1467:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1484:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1484:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1507:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1507:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1489:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1489:17:6"
																		},
																		"nativeSrc": "1489:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1489:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1477:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:6"
																},
																"nativeSrc": "1477:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1477:37:6"
															},
															"nativeSrc": "1477:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1477:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1402:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1455:5:6",
														"nodeType": "YulTypedName",
														"src": "1455:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1462:3:6",
														"nodeType": "YulTypedName",
														"src": "1462:3:6",
														"type": ""
													}
												],
												"src": "1402:118:6"
											},
											{
												"body": {
													"nativeSrc": "1624:124:6",
													"nodeType": "YulBlock",
													"src": "1624:124:6",
													"statements": [
														{
															"nativeSrc": "1634:26:6",
															"nodeType": "YulAssignment",
															"src": "1634:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1646:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1646:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1657:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1642:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1642:3:6"
																},
																"nativeSrc": "1642:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1642:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1634:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1634:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1714:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1714:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1727:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1727:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1738:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1738:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1723:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1723:3:6"
																		},
																		"nativeSrc": "1723:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1723:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1670:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1670:43:6"
																},
																"nativeSrc": "1670:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1670:71:6"
															},
															"nativeSrc": "1670:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1670:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1526:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1596:9:6",
														"nodeType": "YulTypedName",
														"src": "1596:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1608:6:6",
														"nodeType": "YulTypedName",
														"src": "1608:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1619:4:6",
														"nodeType": "YulTypedName",
														"src": "1619:4:6",
														"type": ""
													}
												],
												"src": "1526:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$290(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$290(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$290(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$290_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$290(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$290_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$290_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161166438038061166483398181016040528101906100319190610231565b3360015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a9575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a0919061026b565b60405180910390fd5b6100b8816100ff60201b60201c565b508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610284565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101ef826101c6565b9050919050565b5f610200826101e5565b9050919050565b610210816101f6565b811461021a575f80fd5b50565b5f8151905061022b81610207565b92915050565b5f60208284031215610246576102456101c2565b5b5f6102538482850161021d565b91505092915050565b610265816101e5565b82525050565b5f60208201905061027e5f83018461025c565b92915050565b6113d3806102915f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c80637bc74225116100645780637bc74225146100e3578063817b1cd2146101015780638da5cb5b1461011f578063f2fde38b1461013d578063fc0e3d901461015957610091565b80633ccfd60b14610095578063715018a61461009f57806372f702f3146100a95780637b0472f0146100c7575b5f80fd5b61009d610177565b005b6100a7610504565b005b6100b1610517565b6040516100be9190610d95565b60405180910390f35b6100e160048036038101906100dc9190610de5565b61053c565b005b6100eb610832565b6040516100f89190610e32565b60405180910390f35b61010961083b565b6040516101169190610e32565b60405180910390f35b610127610841565b6040516101349190610e6b565b60405180910390f35b61015760048036038101906101529190610eae565b610869565b005b6101616108ed565b60405161016e9190610fbd565b60405180910390f35b61017f610997565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b8282101561021f578382905f5260205f2090600202016040518060400160405290815f8201548152602001600182015481525050815260200190600101906101dc565b5050505090505f80805f90505b8351811015610395575f84828151811061024957610248610fdd565b5b60200260200101516020015111801561027e57505f84828151811061027157610270610fdd565b5b60200260200101515f0151115b156103345783818151811061029657610295610fdd565b5b60200260200101515f0151836102ac9190611037565b925060405180604001604052805f81526020015f81525060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061031257610311610fdd565b5b905f5260205f2090600202015f820151815f0155602082015181600101559050505b5f84828151811061034857610347610fdd565b5b6020026020010151602001511115801561037e57505f84828151811061037157610370610fdd565b5b60200260200101515f0151115b1561038857600191505b808060010191505061022c565b50806103b1576103af3360056109e490919063ffffffff16565b505b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161040e92919061106a565b6020604051808303815f875af115801561042a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061044e91906110c6565b905080610490576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104879061114b565b60405180910390fd5b8260035f8282546104a19190611169565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5846040516104ee9190610e32565b60405180910390a250505050610502610a11565b565b61050c610a1a565b6105155f610aa1565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610544610997565b5f8111801561056357506301e13380600461055f919061119c565b8111155b6105a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105999061124d565b60405180910390fd5b5f82116105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db906112b5565b60405180910390fd5b5f604051806040016040528084815260200183426106029190611037565b815250905060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f0155602082015181600101555050600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050036106dd576106db336005610b6490919063ffffffff16565b505b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161073c939291906112d3565b6020604051808303815f875af1158015610758573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061077c91906110c6565b9050806107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b59061114b565b60405180910390fd5b8360035f8282546107cf9190611037565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8560405161081c9190610e32565b60405180910390a2505061082e610a11565b5050565b5f600354905090565b60035481565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610871610a1a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108e1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108d89190610e6b565b60405180910390fd5b6108ea81610aa1565b50565b606060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b8282101561098e578382905f5260205f2090600202016040518060400160405290815f82015481526020016001820154815250508152602001906001019061094b565b50505050905090565b60025f54036109db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d290611352565b60405180910390fd5b60025f81905550565b5f610a09835f018373ffffffffffffffffffffffffffffffffffffffff165f1b610b91565b905092915050565b60015f81905550565b610a22610c8d565b73ffffffffffffffffffffffffffffffffffffffff16610a40610841565b73ffffffffffffffffffffffffffffffffffffffff1614610a9f57610a63610c8d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a969190610e6b565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f610b89835f018373ffffffffffffffffffffffffffffffffffffffff165f1b610c94565b905092915050565b5f80836001015f8481526020019081526020015f205490505f8114610c82575f600182610bbe9190611169565b90505f6001865f0180549050610bd49190611169565b9050808214610c3a575f865f018281548110610bf357610bf2610fdd565b5b905f5260205f200154905080875f018481548110610c1457610c13610fdd565b5b905f5260205f20018190555083876001015f8381526020019081526020015f2081905550505b855f01805480610c4d57610c4c611370565b5b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f905560019350505050610c87565b5f9150505b92915050565b5f33905090565b5f610c9f8383610cfb565b610cf157825f0182908060018154018082558091505060019003905f5260205f20015f9091909190915055825f0180549050836001015f8481526020019081526020015f208190555060019050610cf5565b5f90505b92915050565b5f80836001015f8481526020019081526020015f20541415905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610d5d610d58610d5384610d1b565b610d3a565b610d1b565b9050919050565b5f610d6e82610d43565b9050919050565b5f610d7f82610d64565b9050919050565b610d8f81610d75565b82525050565b5f602082019050610da85f830184610d86565b92915050565b5f80fd5b5f819050919050565b610dc481610db2565b8114610dce575f80fd5b50565b5f81359050610ddf81610dbb565b92915050565b5f8060408385031215610dfb57610dfa610dae565b5b5f610e0885828601610dd1565b9250506020610e1985828601610dd1565b9150509250929050565b610e2c81610db2565b82525050565b5f602082019050610e455f830184610e23565b92915050565b5f610e5582610d1b565b9050919050565b610e6581610e4b565b82525050565b5f602082019050610e7e5f830184610e5c565b92915050565b610e8d81610e4b565b8114610e97575f80fd5b50565b5f81359050610ea881610e84565b92915050565b5f60208284031215610ec357610ec2610dae565b5b5f610ed084828501610e9a565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610f0b81610db2565b82525050565b604082015f820151610f255f850182610f02565b506020820151610f386020850182610f02565b50505050565b5f610f498383610f11565b60408301905092915050565b5f602082019050919050565b5f610f6b82610ed9565b610f758185610ee3565b9350610f8083610ef3565b805f5b83811015610fb0578151610f978882610f3e565b9750610fa283610f55565b925050600181019050610f83565b5085935050505092915050565b5f6020820190508181035f830152610fd58184610f61565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61104182610db2565b915061104c83610db2565b92508282019050808211156110645761106361100a565b5b92915050565b5f60408201905061107d5f830185610e5c565b61108a6020830184610e23565b9392505050565b5f8115159050919050565b6110a581611091565b81146110af575f80fd5b50565b5f815190506110c08161109c565b92915050565b5f602082840312156110db576110da610dae565b5b5f6110e8848285016110b2565b91505092915050565b5f82825260208201905092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f611135600f836110f1565b915061114082611101565b602082019050919050565b5f6020820190508181035f83015261116281611129565b9050919050565b5f61117382610db2565b915061117e83610db2565b92508282039050818111156111965761119561100a565b5b92915050565b5f6111a682610db2565b91506111b183610db2565b92508282026111bf81610db2565b915082820484148315176111d6576111d561100a565b5b5092915050565b7f5374616b696e6720706572696f642063616e6e6f7420657863656564203420795f8201527f6561727320616e64206d7573742062652067726561746572207468616e203000602082015250565b5f611237603f836110f1565b9150611242826111dd565b604082019050919050565b5f6020820190508181035f8301526112648161122b565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f61129f601d836110f1565b91506112aa8261126b565b602082019050919050565b5f6020820190508181035f8301526112cc81611293565b9050919050565b5f6060820190506112e65f830186610e5c565b6112f36020830185610e5c565b6113006040830184610e23565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61133c601f836110f1565b915061134782611308565b602082019050919050565b5f6020820190508181035f83015261136981611330565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea2646970667358221220e808f709e868c54b84fd04c18148b7c91419c21e0144e351131507221dcfe49564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1664 CODESIZE SUB DUP1 PUSH2 0x1664 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x231 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x26B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0xFF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x284 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF DUP3 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x200 DUP3 PUSH2 0x1E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x210 DUP2 PUSH2 0x1F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x22B DUP2 PUSH2 0x207 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x246 JUMPI PUSH2 0x245 PUSH2 0x1C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x253 DUP5 DUP3 DUP6 ADD PUSH2 0x21D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x265 DUP2 PUSH2 0x1E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27E PUSH0 DUP4 ADD DUP5 PUSH2 0x25C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D3 DUP1 PUSH2 0x291 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BC74225 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x7BC74225 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xFC0E3D90 EQ PUSH2 0x159 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0xC7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x504 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB1 PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH2 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST PUSH2 0x869 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH2 0x997 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x21F JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1DC JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH0 DUP1 DUP1 PUSH0 SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x395 JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD GT DUP1 ISZERO PUSH2 0x27E JUMPI POP PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x271 JUMPI PUSH2 0x270 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x334 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x296 JUMPI PUSH2 0x295 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 ADD MLOAD DUP4 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x312 JUMPI PUSH2 0x311 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP JUMPDEST PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x348 JUMPI PUSH2 0x347 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x37E JUMPI POP PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x371 JUMPI PUSH2 0x370 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x388 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x22C JUMP JUMPDEST POP DUP1 PUSH2 0x3B1 JUMPI PUSH2 0x3AF CALLER PUSH1 0x5 PUSH2 0x9E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP3 SWAP2 SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x42A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x10C6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x487 SWAP1 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x1169 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0x502 PUSH2 0xA11 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x50C PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x515 PUSH0 PUSH2 0xAA1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x544 PUSH2 0x997 JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x563 JUMPI POP PUSH4 0x1E13380 PUSH1 0x4 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST DUP2 GT ISZERO JUMPDEST PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x599 SWAP1 PUSH2 0x124D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 TIMESTAMP PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SUB PUSH2 0x6DD JUMPI PUSH2 0x6DB CALLER PUSH1 0x5 PUSH2 0xB64 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x758 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x10C6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B5 SWAP1 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP6 PUSH1 0x40 MLOAD PUSH2 0x81C SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x82E PUSH2 0xA11 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x871 PUSH2 0xA1A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D8 SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EA DUP2 PUSH2 0xAA1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x98E JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x94B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x9DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D2 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA09 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0xB91 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xA22 PUSH2 0xC8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA40 PUSH2 0x841 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA9F JUMPI PUSH2 0xA63 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB89 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0xC94 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 EQ PUSH2 0xC82 JUMPI PUSH0 PUSH1 0x1 DUP3 PUSH2 0xBBE SWAP2 SWAP1 PUSH2 0x1169 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP7 PUSH0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0xBD4 SWAP2 SWAP1 PUSH2 0x1169 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0xC3A JUMPI PUSH0 DUP7 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBF3 JUMPI PUSH2 0xBF2 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xC14 JUMPI PUSH2 0xC13 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH0 ADD DUP1 SLOAD DUP1 PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xC87 JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xC9F DUP4 DUP4 PUSH2 0xCFB JUMP JUMPDEST PUSH2 0xCF1 JUMPI DUP3 PUSH0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0xCF5 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD5D PUSH2 0xD58 PUSH2 0xD53 DUP5 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0xD3A JUMP JUMPDEST PUSH2 0xD1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD6E DUP3 PUSH2 0xD43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD7F DUP3 PUSH2 0xD64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8F DUP2 PUSH2 0xD75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA8 PUSH0 DUP4 ADD DUP5 PUSH2 0xD86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC4 DUP2 PUSH2 0xDB2 JUMP JUMPDEST DUP2 EQ PUSH2 0xDCE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDDF DUP2 PUSH2 0xDBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDFB JUMPI PUSH2 0xDFA PUSH2 0xDAE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE08 DUP6 DUP3 DUP7 ADD PUSH2 0xDD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE19 DUP6 DUP3 DUP7 ADD PUSH2 0xDD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2C DUP2 PUSH2 0xDB2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE45 PUSH0 DUP4 ADD DUP5 PUSH2 0xE23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE55 DUP3 PUSH2 0xD1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE65 DUP2 PUSH2 0xE4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE7E PUSH0 DUP4 ADD DUP5 PUSH2 0xE5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE8D DUP2 PUSH2 0xE4B JUMP JUMPDEST DUP2 EQ PUSH2 0xE97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEA8 DUP2 PUSH2 0xE84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC3 JUMPI PUSH2 0xEC2 PUSH2 0xDAE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xED0 DUP5 DUP3 DUP6 ADD PUSH2 0xE9A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF0B DUP2 PUSH2 0xDB2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xF25 PUSH0 DUP6 ADD DUP3 PUSH2 0xF02 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xF38 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xF02 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF49 DUP4 DUP4 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF6B DUP3 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xF75 DUP2 DUP6 PUSH2 0xEE3 JUMP JUMPDEST SWAP4 POP PUSH2 0xF80 DUP4 PUSH2 0xEF3 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFB0 JUMPI DUP2 MLOAD PUSH2 0xF97 DUP9 DUP3 PUSH2 0xF3E JUMP JUMPDEST SWAP8 POP PUSH2 0xFA2 DUP4 PUSH2 0xF55 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xF83 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFD5 DUP2 DUP5 PUSH2 0xF61 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1041 DUP3 PUSH2 0xDB2 JUMP JUMPDEST SWAP2 POP PUSH2 0x104C DUP4 PUSH2 0xDB2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1064 JUMPI PUSH2 0x1063 PUSH2 0x100A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x107D PUSH0 DUP4 ADD DUP6 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x108A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE23 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A5 DUP2 PUSH2 0x1091 JUMP JUMPDEST DUP2 EQ PUSH2 0x10AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10C0 DUP2 PUSH2 0x109C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10DB JUMPI PUSH2 0x10DA PUSH2 0xDAE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10E8 DUP5 DUP3 DUP6 ADD PUSH2 0x10B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1135 PUSH1 0xF DUP4 PUSH2 0x10F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1140 DUP3 PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1162 DUP2 PUSH2 0x1129 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1173 DUP3 PUSH2 0xDB2 JUMP JUMPDEST SWAP2 POP PUSH2 0x117E DUP4 PUSH2 0xDB2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1196 JUMPI PUSH2 0x1195 PUSH2 0x100A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11A6 DUP3 PUSH2 0xDB2 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B1 DUP4 PUSH2 0xDB2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x11BF DUP2 PUSH2 0xDB2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x11D6 JUMPI PUSH2 0x11D5 PUSH2 0x100A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E6720706572696F642063616E6E6F742065786365656420342079 PUSH0 DUP3 ADD MSTORE PUSH32 0x6561727320616E64206D7573742062652067726561746572207468616E203000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1237 PUSH1 0x3F DUP4 PUSH2 0x10F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1242 DUP3 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1264 DUP2 PUSH2 0x122B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x129F PUSH1 0x1D DUP4 PUSH2 0x10F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x12AA DUP3 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12CC DUP2 PUSH2 0x1293 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12E6 PUSH0 DUP4 ADD DUP7 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x12F3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x1300 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE23 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x133C PUSH1 0x1F DUP4 PUSH2 0x10F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1347 DUP3 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1369 DUP2 PUSH2 0x1330 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 ADDMOD 0xF7 MULMOD 0xE8 PUSH9 0xC54B84FD04C18148B7 0xC9 EQ NOT 0xC2 0x1E ADD PREVRANDAO 0xE3 MLOAD SGT ISZERO SMOD 0x22 SAR 0xCF 0xE4 SWAP6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "298:2741:5:-:0;;;939:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;981:10;1716:1:1;1821:7;:22;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1018:13:5::1;1003:12;;:28;;;;;;;;;;;;;;;;;;939:99:::0;298:2741;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:379::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:78;1371:7;1362:6;1351:9;1347:22;1301:78;:::i;:::-;1291:88;;1247:142;1017:379;;;;:::o;1402:118::-;1489:24;1507:5;1489:24;:::i;:::-;1484:3;1477:37;1402:118;;:::o;1526:222::-;1619:4;1657:2;1646:9;1642:18;1634:26;;1670:71;1738:1;1727:9;1723:17;1714:6;1670:71;:::i;:::-;1526:222;;;;:::o;298:2741:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_add_373": {
									"entryPoint": 3220,
									"id": 373,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_checkOwner_84": {
									"entryPoint": 2586,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_contains_476": {
									"entryPoint": 3323,
									"id": 476,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_302": {
									"entryPoint": 3213,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 2577,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 2455,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_remove_457": {
									"entryPoint": 2961,
									"id": 457,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2721,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_673": {
									"entryPoint": 2916,
									"id": 673,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getStake_1231": {
									"entryPoint": 2285,
									"id": 1231,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalStake_1253": {
									"entryPoint": 2098,
									"id": 1253,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2113,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@remove_700": {
									"entryPoint": 2532,
									"id": 700,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1284,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1092": {
									"entryPoint": 1340,
									"id": 1092,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakingToken_954": {
									"entryPoint": 1303,
									"id": 954,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_956": {
									"entryPoint": 2107,
									"id": 956,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2153,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1218": {
									"entryPoint": 375,
									"id": 1218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_struct$_Stake_$974_memory_ptr_to_t_struct$_Stake_$974_memory_ptr": {
									"entryPoint": 3902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack": {
									"entryPoint": 3462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df401bb5dd749b242221e1a45a3e34dea092c9ed1f71c241bb199b116619d137_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$974_memory_ptr_to_t_struct$_Stake_$974_memory_ptr": {
									"entryPoint": 3857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4819,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4202,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed": {
									"entryPoint": 3477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df401bb5dd749b242221e1a45a3e34dea092c9ed1f71c241bb199b116619d137__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$290_to_t_address": {
									"entryPoint": 3445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4106,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 4976,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3502,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 4353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df401bb5dd749b242221e1a45a3e34dea092c9ed1f71c241bb199b116619d137": {
									"entryPoint": 4573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13733:6",
										"nodeType": "YulBlock",
										"src": "0:13733:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:6",
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nativeSrc": "62:65:6",
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:6",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nativeSrc": "73:54:6",
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nativeSrc": "171:28:6",
													"nodeType": "YulBlock",
													"src": "171:28:6",
													"statements": [
														{
															"nativeSrc": "181:12:6",
															"nodeType": "YulAssignment",
															"src": "181:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:6",
																"nodeType": "YulIdentifier",
																"src": "188:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:6",
														"nodeType": "YulTypedName",
														"src": "157:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:6",
														"nodeType": "YulTypedName",
														"src": "167:3:6",
														"type": ""
													}
												],
												"src": "139:60:6"
											},
											{
												"body": {
													"nativeSrc": "265:82:6",
													"nodeType": "YulBlock",
													"src": "265:82:6",
													"statements": [
														{
															"nativeSrc": "275:66:6",
															"nodeType": "YulAssignment",
															"src": "275:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:6"
																				},
																				"nativeSrc": "315:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:6"
																		},
																		"nativeSrc": "306:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:6"
																},
																"nativeSrc": "288:53:6",
																"nodeType": "YulFunctionCall",
																"src": "288:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:6",
														"nodeType": "YulTypedName",
														"src": "245:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:6",
														"nodeType": "YulTypedName",
														"src": "255:9:6",
														"type": ""
													}
												],
												"src": "205:142:6"
											},
											{
												"body": {
													"nativeSrc": "413:66:6",
													"nodeType": "YulBlock",
													"src": "413:66:6",
													"statements": [
														{
															"nativeSrc": "423:50:6",
															"nodeType": "YulAssignment",
															"src": "423:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:6"
																},
																"nativeSrc": "436:37:6",
																"nodeType": "YulFunctionCall",
																"src": "436:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:6",
														"nodeType": "YulTypedName",
														"src": "393:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:6",
														"nodeType": "YulTypedName",
														"src": "403:9:6",
														"type": ""
													}
												],
												"src": "353:126:6"
											},
											{
												"body": {
													"nativeSrc": "559:66:6",
													"nodeType": "YulBlock",
													"src": "559:66:6",
													"statements": [
														{
															"nativeSrc": "569:50:6",
															"nodeType": "YulAssignment",
															"src": "569:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "613:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "582:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "582:30:6"
																},
																"nativeSrc": "582:37:6",
																"nodeType": "YulFunctionCall",
																"src": "582:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "569:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "569:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$290_to_t_address",
												"nativeSrc": "485:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "539:5:6",
														"nodeType": "YulTypedName",
														"src": "539:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "549:9:6",
														"nodeType": "YulTypedName",
														"src": "549:9:6",
														"type": ""
													}
												],
												"src": "485:140:6"
											},
											{
												"body": {
													"nativeSrc": "710:80:6",
													"nodeType": "YulBlock",
													"src": "710:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "727:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$290_to_t_address",
																			"nativeSrc": "732:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "732:44:6"
																		},
																		"nativeSrc": "732:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "732:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "720:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:6"
																},
																"nativeSrc": "720:64:6",
																"nodeType": "YulFunctionCall",
																"src": "720:64:6"
															},
															"nativeSrc": "720:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "720:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
												"nativeSrc": "631:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "698:5:6",
														"nodeType": "YulTypedName",
														"src": "698:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "705:3:6",
														"nodeType": "YulTypedName",
														"src": "705:3:6",
														"type": ""
													}
												],
												"src": "631:159:6"
											},
											{
												"body": {
													"nativeSrc": "908:138:6",
													"nodeType": "YulBlock",
													"src": "908:138:6",
													"statements": [
														{
															"nativeSrc": "918:26:6",
															"nodeType": "YulAssignment",
															"src": "918:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "930:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:6",
																		"nodeType": "YulLiteral",
																		"src": "941:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "926:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:6"
																},
																"nativeSrc": "926:18:6",
																"nodeType": "YulFunctionCall",
																"src": "926:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "918:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1012:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1025:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1036:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1021:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:6"
																		},
																		"nativeSrc": "1021:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1021:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
																	"nativeSrc": "954:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "954:57:6"
																},
																"nativeSrc": "954:85:6",
																"nodeType": "YulFunctionCall",
																"src": "954:85:6"
															},
															"nativeSrc": "954:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "954:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed",
												"nativeSrc": "796:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "880:9:6",
														"nodeType": "YulTypedName",
														"src": "880:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "892:6:6",
														"nodeType": "YulTypedName",
														"src": "892:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "903:4:6",
														"nodeType": "YulTypedName",
														"src": "903:4:6",
														"type": ""
													}
												],
												"src": "796:250:6"
											},
											{
												"body": {
													"nativeSrc": "1092:35:6",
													"nodeType": "YulBlock",
													"src": "1092:35:6",
													"statements": [
														{
															"nativeSrc": "1102:19:6",
															"nodeType": "YulAssignment",
															"src": "1102:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1118:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1118:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1112:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1112:5:6"
																},
																"nativeSrc": "1112:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1112:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1102:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1052:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1085:6:6",
														"nodeType": "YulTypedName",
														"src": "1085:6:6",
														"type": ""
													}
												],
												"src": "1052:75:6"
											},
											{
												"body": {
													"nativeSrc": "1222:28:6",
													"nodeType": "YulBlock",
													"src": "1222:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1239:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1239:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1242:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1242:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1232:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1232:6:6"
																},
																"nativeSrc": "1232:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1232:12:6"
															},
															"nativeSrc": "1232:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1232:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1133:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1133:117:6"
											},
											{
												"body": {
													"nativeSrc": "1345:28:6",
													"nodeType": "YulBlock",
													"src": "1345:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1362:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1362:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1355:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1355:6:6"
																},
																"nativeSrc": "1355:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1355:12:6"
															},
															"nativeSrc": "1355:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1355:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1256:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1256:117:6"
											},
											{
												"body": {
													"nativeSrc": "1424:32:6",
													"nodeType": "YulBlock",
													"src": "1424:32:6",
													"statements": [
														{
															"nativeSrc": "1434:16:6",
															"nodeType": "YulAssignment",
															"src": "1434:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1445:5:6",
																"nodeType": "YulIdentifier",
																"src": "1445:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1434:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1434:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1379:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1406:5:6",
														"nodeType": "YulTypedName",
														"src": "1406:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1416:7:6",
														"nodeType": "YulTypedName",
														"src": "1416:7:6",
														"type": ""
													}
												],
												"src": "1379:77:6"
											},
											{
												"body": {
													"nativeSrc": "1505:79:6",
													"nodeType": "YulBlock",
													"src": "1505:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1562:16:6",
																"nodeType": "YulBlock",
																"src": "1562:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1571:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1571:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1574:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1574:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1564:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1564:6:6"
																			},
																			"nativeSrc": "1564:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1564:12:6"
																		},
																		"nativeSrc": "1564:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1564:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1528:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1528:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1553:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1553:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1535:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1535:17:6"
																				},
																				"nativeSrc": "1535:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1535:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1525:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1525:2:6"
																		},
																		"nativeSrc": "1525:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1525:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1518:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:6"
																},
																"nativeSrc": "1518:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1518:43:6"
															},
															"nativeSrc": "1515:63:6",
															"nodeType": "YulIf",
															"src": "1515:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1462:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1498:5:6",
														"nodeType": "YulTypedName",
														"src": "1498:5:6",
														"type": ""
													}
												],
												"src": "1462:122:6"
											},
											{
												"body": {
													"nativeSrc": "1642:87:6",
													"nodeType": "YulBlock",
													"src": "1642:87:6",
													"statements": [
														{
															"nativeSrc": "1652:29:6",
															"nodeType": "YulAssignment",
															"src": "1652:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1674:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1674:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1661:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1661:12:6"
																},
																"nativeSrc": "1661:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1661:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1652:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1652:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1717:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1717:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1690:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1690:26:6"
																},
																"nativeSrc": "1690:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1690:33:6"
															},
															"nativeSrc": "1690:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1690:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1590:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1620:6:6",
														"nodeType": "YulTypedName",
														"src": "1620:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1628:3:6",
														"nodeType": "YulTypedName",
														"src": "1628:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1636:5:6",
														"nodeType": "YulTypedName",
														"src": "1636:5:6",
														"type": ""
													}
												],
												"src": "1590:139:6"
											},
											{
												"body": {
													"nativeSrc": "1818:391:6",
													"nodeType": "YulBlock",
													"src": "1818:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1864:83:6",
																"nodeType": "YulBlock",
																"src": "1864:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1866:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1866:77:6"
																			},
																			"nativeSrc": "1866:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1866:79:6"
																		},
																		"nativeSrc": "1866:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1866:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1839:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1839:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1848:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1848:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1835:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:6"
																		},
																		"nativeSrc": "1835:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1835:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1860:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1860:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1831:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1831:3:6"
																},
																"nativeSrc": "1831:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1831:32:6"
															},
															"nativeSrc": "1828:119:6",
															"nodeType": "YulIf",
															"src": "1828:119:6"
														},
														{
															"nativeSrc": "1957:117:6",
															"nodeType": "YulBlock",
															"src": "1957:117:6",
															"statements": [
																{
																	"nativeSrc": "1972:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1972:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1986:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1986:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1976:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1976:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2001:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2001:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2036:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2036:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2047:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2047:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2032:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2032:3:6"
																				},
																				"nativeSrc": "2032:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2032:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2056:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2056:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2011:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2011:20:6"
																		},
																		"nativeSrc": "2011:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2011:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2001:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2001:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2084:118:6",
															"nodeType": "YulBlock",
															"src": "2084:118:6",
															"statements": [
																{
																	"nativeSrc": "2099:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2099:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2113:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2113:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2103:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2103:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2129:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2129:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2164:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2164:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2175:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2175:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2160:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2160:3:6"
																				},
																				"nativeSrc": "2160:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2160:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2184:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2184:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2139:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2139:20:6"
																		},
																		"nativeSrc": "2139:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2139:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2129:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2129:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1735:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1780:9:6",
														"nodeType": "YulTypedName",
														"src": "1780:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1791:7:6",
														"nodeType": "YulTypedName",
														"src": "1791:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1803:6:6",
														"nodeType": "YulTypedName",
														"src": "1803:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1811:6:6",
														"nodeType": "YulTypedName",
														"src": "1811:6:6",
														"type": ""
													}
												],
												"src": "1735:474:6"
											},
											{
												"body": {
													"nativeSrc": "2280:53:6",
													"nodeType": "YulBlock",
													"src": "2280:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2297:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2297:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2320:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2320:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2302:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "2302:17:6"
																		},
																		"nativeSrc": "2302:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2290:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2290:6:6"
																},
																"nativeSrc": "2290:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2290:37:6"
															},
															"nativeSrc": "2290:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "2290:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2215:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2268:5:6",
														"nodeType": "YulTypedName",
														"src": "2268:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2275:3:6",
														"nodeType": "YulTypedName",
														"src": "2275:3:6",
														"type": ""
													}
												],
												"src": "2215:118:6"
											},
											{
												"body": {
													"nativeSrc": "2437:124:6",
													"nodeType": "YulBlock",
													"src": "2437:124:6",
													"statements": [
														{
															"nativeSrc": "2447:26:6",
															"nodeType": "YulAssignment",
															"src": "2447:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2459:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2459:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2470:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2470:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2455:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2455:3:6"
																},
																"nativeSrc": "2455:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2455:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2447:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2447:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2527:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2527:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2540:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2540:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2551:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2551:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2536:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2536:3:6"
																		},
																		"nativeSrc": "2536:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2536:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2483:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2483:43:6"
																},
																"nativeSrc": "2483:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2483:71:6"
															},
															"nativeSrc": "2483:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2483:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2339:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2409:9:6",
														"nodeType": "YulTypedName",
														"src": "2409:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2421:6:6",
														"nodeType": "YulTypedName",
														"src": "2421:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2432:4:6",
														"nodeType": "YulTypedName",
														"src": "2432:4:6",
														"type": ""
													}
												],
												"src": "2339:222:6"
											},
											{
												"body": {
													"nativeSrc": "2612:51:6",
													"nodeType": "YulBlock",
													"src": "2612:51:6",
													"statements": [
														{
															"nativeSrc": "2622:35:6",
															"nodeType": "YulAssignment",
															"src": "2622:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2651:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2651:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2633:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2633:17:6"
																},
																"nativeSrc": "2633:24:6",
																"nodeType": "YulFunctionCall",
																"src": "2633:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2622:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2622:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2567:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2594:5:6",
														"nodeType": "YulTypedName",
														"src": "2594:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2604:7:6",
														"nodeType": "YulTypedName",
														"src": "2604:7:6",
														"type": ""
													}
												],
												"src": "2567:96:6"
											},
											{
												"body": {
													"nativeSrc": "2734:53:6",
													"nodeType": "YulBlock",
													"src": "2734:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2751:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2751:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2774:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2774:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2756:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "2756:17:6"
																		},
																		"nativeSrc": "2756:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2756:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2744:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:6"
																},
																"nativeSrc": "2744:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2744:37:6"
															},
															"nativeSrc": "2744:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "2744:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2669:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2722:5:6",
														"nodeType": "YulTypedName",
														"src": "2722:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2729:3:6",
														"nodeType": "YulTypedName",
														"src": "2729:3:6",
														"type": ""
													}
												],
												"src": "2669:118:6"
											},
											{
												"body": {
													"nativeSrc": "2891:124:6",
													"nodeType": "YulBlock",
													"src": "2891:124:6",
													"statements": [
														{
															"nativeSrc": "2901:26:6",
															"nodeType": "YulAssignment",
															"src": "2901:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2913:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2913:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2924:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2924:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2909:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2909:3:6"
																},
																"nativeSrc": "2909:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2909:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2901:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2901:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2981:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2981:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2994:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2994:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3005:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3005:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2990:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2990:3:6"
																		},
																		"nativeSrc": "2990:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2990:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2937:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2937:43:6"
																},
																"nativeSrc": "2937:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2937:71:6"
															},
															"nativeSrc": "2937:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2937:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2793:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2863:9:6",
														"nodeType": "YulTypedName",
														"src": "2863:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2875:6:6",
														"nodeType": "YulTypedName",
														"src": "2875:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2886:4:6",
														"nodeType": "YulTypedName",
														"src": "2886:4:6",
														"type": ""
													}
												],
												"src": "2793:222:6"
											},
											{
												"body": {
													"nativeSrc": "3064:79:6",
													"nodeType": "YulBlock",
													"src": "3064:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3121:16:6",
																"nodeType": "YulBlock",
																"src": "3121:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3130:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3130:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3133:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3133:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3123:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3123:6:6"
																			},
																			"nativeSrc": "3123:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3123:12:6"
																		},
																		"nativeSrc": "3123:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3123:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3087:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3087:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3112:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3112:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3094:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3094:17:6"
																				},
																				"nativeSrc": "3094:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3094:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3084:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3084:2:6"
																		},
																		"nativeSrc": "3084:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3084:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:43:6"
															},
															"nativeSrc": "3074:63:6",
															"nodeType": "YulIf",
															"src": "3074:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3021:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3057:5:6",
														"nodeType": "YulTypedName",
														"src": "3057:5:6",
														"type": ""
													}
												],
												"src": "3021:122:6"
											},
											{
												"body": {
													"nativeSrc": "3201:87:6",
													"nodeType": "YulBlock",
													"src": "3201:87:6",
													"statements": [
														{
															"nativeSrc": "3211:29:6",
															"nodeType": "YulAssignment",
															"src": "3211:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3233:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3233:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3220:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3220:12:6"
																},
																"nativeSrc": "3220:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3220:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3211:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3211:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3276:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3276:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3249:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3249:26:6"
																},
																"nativeSrc": "3249:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3249:33:6"
															},
															"nativeSrc": "3249:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3249:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3149:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3179:6:6",
														"nodeType": "YulTypedName",
														"src": "3179:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3187:3:6",
														"nodeType": "YulTypedName",
														"src": "3187:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3195:5:6",
														"nodeType": "YulTypedName",
														"src": "3195:5:6",
														"type": ""
													}
												],
												"src": "3149:139:6"
											},
											{
												"body": {
													"nativeSrc": "3360:263:6",
													"nodeType": "YulBlock",
													"src": "3360:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3406:83:6",
																"nodeType": "YulBlock",
																"src": "3406:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3408:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3408:77:6"
																			},
																			"nativeSrc": "3408:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3408:79:6"
																		},
																		"nativeSrc": "3408:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3408:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3381:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3381:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3390:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3390:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3377:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3377:3:6"
																		},
																		"nativeSrc": "3377:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3377:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3402:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3402:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3373:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3373:3:6"
																},
																"nativeSrc": "3373:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3373:32:6"
															},
															"nativeSrc": "3370:119:6",
															"nodeType": "YulIf",
															"src": "3370:119:6"
														},
														{
															"nativeSrc": "3499:117:6",
															"nodeType": "YulBlock",
															"src": "3499:117:6",
															"statements": [
																{
																	"nativeSrc": "3514:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3514:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3528:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3528:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3518:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3518:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3543:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3543:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3578:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3578:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3589:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3589:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3574:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3574:3:6"
																				},
																				"nativeSrc": "3574:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3574:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3598:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3598:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3553:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3553:20:6"
																		},
																		"nativeSrc": "3553:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3553:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3543:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3543:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3294:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3330:9:6",
														"nodeType": "YulTypedName",
														"src": "3330:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3341:7:6",
														"nodeType": "YulTypedName",
														"src": "3341:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3353:6:6",
														"nodeType": "YulTypedName",
														"src": "3353:6:6",
														"type": ""
													}
												],
												"src": "3294:329:6"
											},
											{
												"body": {
													"nativeSrc": "3725:40:6",
													"nodeType": "YulBlock",
													"src": "3725:40:6",
													"statements": [
														{
															"nativeSrc": "3736:22:6",
															"nodeType": "YulAssignment",
															"src": "3736:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3752:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3752:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3746:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3746:5:6"
																},
																"nativeSrc": "3746:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3746:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3736:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3736:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "3629:136:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3708:5:6",
														"nodeType": "YulTypedName",
														"src": "3708:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3718:6:6",
														"nodeType": "YulTypedName",
														"src": "3718:6:6",
														"type": ""
													}
												],
												"src": "3629:136:6"
											},
											{
												"body": {
													"nativeSrc": "3904:73:6",
													"nodeType": "YulBlock",
													"src": "3904:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3921:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3921:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3926:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3926:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3914:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3914:6:6"
																},
																"nativeSrc": "3914:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3914:19:6"
															},
															"nativeSrc": "3914:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3914:19:6"
														},
														{
															"nativeSrc": "3942:29:6",
															"nodeType": "YulAssignment",
															"src": "3942:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3961:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3961:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3966:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3966:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3957:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3957:3:6"
																},
																"nativeSrc": "3957:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3957:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3942:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "3942:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "3771:206:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3876:3:6",
														"nodeType": "YulTypedName",
														"src": "3876:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3881:6:6",
														"nodeType": "YulTypedName",
														"src": "3881:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3892:11:6",
														"nodeType": "YulTypedName",
														"src": "3892:11:6",
														"type": ""
													}
												],
												"src": "3771:206:6"
											},
											{
												"body": {
													"nativeSrc": "4077:60:6",
													"nodeType": "YulBlock",
													"src": "4077:60:6",
													"statements": [
														{
															"nativeSrc": "4087:11:6",
															"nodeType": "YulAssignment",
															"src": "4087:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "4095:3:6",
																"nodeType": "YulIdentifier",
																"src": "4095:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4087:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4087:4:6"
																}
															]
														},
														{
															"nativeSrc": "4108:22:6",
															"nodeType": "YulAssignment",
															"src": "4108:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4120:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4120:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4125:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4125:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4116:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4116:3:6"
																},
																"nativeSrc": "4116:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4116:14:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4108:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4108:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "3983:154:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4064:3:6",
														"nodeType": "YulTypedName",
														"src": "4064:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4072:4:6",
														"nodeType": "YulTypedName",
														"src": "4072:4:6",
														"type": ""
													}
												],
												"src": "3983:154:6"
											},
											{
												"body": {
													"nativeSrc": "4198:53:6",
													"nodeType": "YulBlock",
													"src": "4198:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4215:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4215:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4238:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4238:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4220:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4220:17:6"
																		},
																		"nativeSrc": "4220:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4220:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4208:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4208:6:6"
																},
																"nativeSrc": "4208:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4208:37:6"
															},
															"nativeSrc": "4208:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4208:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "4143:108:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4186:5:6",
														"nodeType": "YulTypedName",
														"src": "4186:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4193:3:6",
														"nodeType": "YulTypedName",
														"src": "4193:3:6",
														"type": ""
													}
												],
												"src": "4143:108:6"
											},
											{
												"body": {
													"nativeSrc": "4425:407:6",
													"nodeType": "YulBlock",
													"src": "4425:407:6",
													"statements": [
														{
															"nativeSrc": "4435:26:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4435:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4451:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4451:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4456:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4456:4:6",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4447:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4447:3:6"
																},
																"nativeSrc": "4447:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4447:14:6"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "4439:4:6",
																	"nodeType": "YulTypedName",
																	"src": "4439:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4471:172:6",
															"nodeType": "YulBlock",
															"src": "4471:172:6",
															"statements": [
																{
																	"nativeSrc": "4514:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4514:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4544:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4544:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4551:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4551:4:6",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4540:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4540:3:6"
																				},
																				"nativeSrc": "4540:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4540:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4534:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4534:5:6"
																		},
																		"nativeSrc": "4534:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4534:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4518:12:6",
																			"nodeType": "YulTypedName",
																			"src": "4518:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4604:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "4604:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4622:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4622:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4627:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4627:4:6",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4618:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4618:3:6"
																				},
																				"nativeSrc": "4618:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4618:14:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4570:33:6",
																			"nodeType": "YulIdentifier",
																			"src": "4570:33:6"
																		},
																		"nativeSrc": "4570:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4570:63:6"
																	},
																	"nativeSrc": "4570:63:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "4570:63:6"
																}
															]
														},
														{
															"nativeSrc": "4653:172:6",
															"nodeType": "YulBlock",
															"src": "4653:172:6",
															"statements": [
																{
																	"nativeSrc": "4696:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4696:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4726:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4726:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4733:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4733:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4722:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4722:3:6"
																				},
																				"nativeSrc": "4722:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4722:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4716:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4716:5:6"
																		},
																		"nativeSrc": "4716:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4716:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4700:12:6",
																			"nodeType": "YulTypedName",
																			"src": "4700:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4786:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "4786:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4804:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4804:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4809:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4809:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4800:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4800:3:6"
																				},
																				"nativeSrc": "4800:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4800:14:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4752:33:6",
																			"nodeType": "YulIdentifier",
																			"src": "4752:33:6"
																		},
																		"nativeSrc": "4752:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4752:63:6"
																	},
																	"nativeSrc": "4752:63:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "4752:63:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$974_memory_ptr_to_t_struct$_Stake_$974_memory_ptr",
												"nativeSrc": "4325:507:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4412:5:6",
														"nodeType": "YulTypedName",
														"src": "4412:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4419:3:6",
														"nodeType": "YulTypedName",
														"src": "4419:3:6",
														"type": ""
													}
												],
												"src": "4325:507:6"
											},
											{
												"body": {
													"nativeSrc": "4962:143:6",
													"nodeType": "YulBlock",
													"src": "4962:143:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5050:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5050:6:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5058:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5058:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$974_memory_ptr_to_t_struct$_Stake_$974_memory_ptr",
																	"nativeSrc": "4972:77:6",
																	"nodeType": "YulIdentifier",
																	"src": "4972:77:6"
																},
																"nativeSrc": "4972:90:6",
																"nodeType": "YulFunctionCall",
																"src": "4972:90:6"
															},
															"nativeSrc": "4972:90:6",
															"nodeType": "YulExpressionStatement",
															"src": "4972:90:6"
														},
														{
															"nativeSrc": "5071:28:6",
															"nodeType": "YulAssignment",
															"src": "5071:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5089:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5089:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5094:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5094:4:6",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5085:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5085:3:6"
																},
																"nativeSrc": "5085:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5085:14:6"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "5071:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "5071:10:6"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Stake_$974_memory_ptr_to_t_struct$_Stake_$974_memory_ptr",
												"nativeSrc": "4838:267:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "4935:6:6",
														"nodeType": "YulTypedName",
														"src": "4935:6:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4943:3:6",
														"nodeType": "YulTypedName",
														"src": "4943:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "4951:10:6",
														"nodeType": "YulTypedName",
														"src": "4951:10:6",
														"type": ""
													}
												],
												"src": "4838:267:6"
											},
											{
												"body": {
													"nativeSrc": "5208:38:6",
													"nodeType": "YulBlock",
													"src": "5208:38:6",
													"statements": [
														{
															"nativeSrc": "5218:22:6",
															"nodeType": "YulAssignment",
															"src": "5218:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "5230:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5230:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5235:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5235:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5226:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5226:3:6"
																},
																"nativeSrc": "5226:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5226:14:6"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "5218:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5218:4:6"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "5111:135:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5195:3:6",
														"nodeType": "YulTypedName",
														"src": "5195:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "5203:4:6",
														"nodeType": "YulTypedName",
														"src": "5203:4:6",
														"type": ""
													}
												],
												"src": "5111:135:6"
											},
											{
												"body": {
													"nativeSrc": "5492:740:6",
													"nodeType": "YulBlock",
													"src": "5492:740:6",
													"statements": [
														{
															"nativeSrc": "5502:90:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5502:90:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5586:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5586:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "5516:69:6",
																	"nodeType": "YulIdentifier",
																	"src": "5516:69:6"
																},
																"nativeSrc": "5516:76:6",
																"nodeType": "YulFunctionCall",
																"src": "5516:76:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5506:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5506:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5601:115:6",
															"nodeType": "YulAssignment",
															"src": "5601:115:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5704:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5704:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5709:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5709:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "5608:95:6",
																	"nodeType": "YulIdentifier",
																	"src": "5608:95:6"
																},
																"nativeSrc": "5608:108:6",
																"nodeType": "YulFunctionCall",
																"src": "5608:108:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5601:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5601:3:6"
																}
															]
														},
														{
															"nativeSrc": "5725:93:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5725:93:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5812:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5812:5:6"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "5740:71:6",
																	"nodeType": "YulIdentifier",
																	"src": "5740:71:6"
																},
																"nativeSrc": "5740:78:6",
																"nodeType": "YulFunctionCall",
																"src": "5740:78:6"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "5729:7:6",
																	"nodeType": "YulTypedName",
																	"src": "5729:7:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5827:21:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5827:21:6",
															"value": {
																"name": "baseRef",
																"nativeSrc": "5841:7:6",
																"nodeType": "YulIdentifier",
																"src": "5841:7:6"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "5831:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5831:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5917:290:6",
																"nodeType": "YulBlock",
																"src": "5917:290:6",
																"statements": [
																	{
																		"nativeSrc": "5931:34:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5931:34:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "5958:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5958:6:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5952:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5952:5:6"
																			},
																			"nativeSrc": "5952:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5952:13:6"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "5935:13:6",
																				"nodeType": "YulTypedName",
																				"src": "5935:13:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5978:114:6",
																		"nodeType": "YulAssignment",
																		"src": "5978:114:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "6073:13:6",
																					"nodeType": "YulIdentifier",
																					"src": "6073:13:6"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "6088:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6088:3:6"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Stake_$974_memory_ptr_to_t_struct$_Stake_$974_memory_ptr",
																				"nativeSrc": "5985:87:6",
																				"nodeType": "YulIdentifier",
																				"src": "5985:87:6"
																			},
																			"nativeSrc": "5985:107:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5985:107:6"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "5978:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5978:3:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6105:92:6",
																		"nodeType": "YulAssignment",
																		"src": "6105:92:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6190:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6190:6:6"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "6115:74:6",
																				"nodeType": "YulIdentifier",
																				"src": "6115:74:6"
																			},
																			"nativeSrc": "6115:82:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6115:82:6"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "6105:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6105:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "5879:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5879:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5882:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5882:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5876:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5876:2:6"
																},
																"nativeSrc": "5876:13:6",
																"nodeType": "YulFunctionCall",
																"src": "5876:13:6"
															},
															"nativeSrc": "5857:350:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5890:18:6",
																"nodeType": "YulBlock",
																"src": "5890:18:6",
																"statements": [
																	{
																		"nativeSrc": "5892:14:6",
																		"nodeType": "YulAssignment",
																		"src": "5892:14:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5901:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "5901:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5904:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5904:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5897:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5897:3:6"
																			},
																			"nativeSrc": "5897:9:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5897:9:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "5892:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5892:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5861:14:6",
																"nodeType": "YulBlock",
																"src": "5861:14:6",
																"statements": [
																	{
																		"nativeSrc": "5863:10:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5863:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5872:1:6",
																			"nodeType": "YulLiteral",
																			"src": "5872:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "5867:1:6",
																				"nodeType": "YulTypedName",
																				"src": "5867:1:6",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5857:350:6"
														},
														{
															"nativeSrc": "6216:10:6",
															"nodeType": "YulAssignment",
															"src": "6216:10:6",
															"value": {
																"name": "pos",
																"nativeSrc": "6223:3:6",
																"nodeType": "YulIdentifier",
																"src": "6223:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6216:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6216:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "5324:908:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5471:5:6",
														"nodeType": "YulTypedName",
														"src": "5471:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5478:3:6",
														"nodeType": "YulTypedName",
														"src": "5478:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5487:3:6",
														"nodeType": "YulTypedName",
														"src": "5487:3:6",
														"type": ""
													}
												],
												"src": "5324:908:6"
											},
											{
												"body": {
													"nativeSrc": "6430:269:6",
													"nodeType": "YulBlock",
													"src": "6430:269:6",
													"statements": [
														{
															"nativeSrc": "6440:26:6",
															"nodeType": "YulAssignment",
															"src": "6440:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6452:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6452:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6463:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6463:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6448:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6448:3:6"
																},
																"nativeSrc": "6448:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6448:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6440:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6440:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6487:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6487:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6498:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6498:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6483:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6483:3:6"
																		},
																		"nativeSrc": "6483:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6483:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6506:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6506:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6512:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6512:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6502:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6502:3:6"
																		},
																		"nativeSrc": "6502:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6502:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6476:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6476:6:6"
																},
																"nativeSrc": "6476:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6476:47:6"
															},
															"nativeSrc": "6476:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6476:47:6"
														},
														{
															"nativeSrc": "6532:160:6",
															"nodeType": "YulAssignment",
															"src": "6532:160:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6678:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6678:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "6687:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6687:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "6540:137:6",
																	"nodeType": "YulIdentifier",
																	"src": "6540:137:6"
																},
																"nativeSrc": "6540:152:6",
																"nodeType": "YulFunctionCall",
																"src": "6540:152:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6532:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6532:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "6238:461:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6402:9:6",
														"nodeType": "YulTypedName",
														"src": "6402:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6414:6:6",
														"nodeType": "YulTypedName",
														"src": "6414:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6425:4:6",
														"nodeType": "YulTypedName",
														"src": "6425:4:6",
														"type": ""
													}
												],
												"src": "6238:461:6"
											},
											{
												"body": {
													"nativeSrc": "6733:152:6",
													"nodeType": "YulBlock",
													"src": "6733:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6750:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6750:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6753:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6753:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6743:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6743:6:6"
																},
																"nativeSrc": "6743:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6743:88:6"
															},
															"nativeSrc": "6743:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6743:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6847:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6847:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6850:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6850:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6840:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:6"
																},
																"nativeSrc": "6840:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6840:15:6"
															},
															"nativeSrc": "6840:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6840:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6871:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6871:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6874:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6874:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6864:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6864:6:6"
																},
																"nativeSrc": "6864:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6864:15:6"
															},
															"nativeSrc": "6864:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6864:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6705:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6705:180:6"
											},
											{
												"body": {
													"nativeSrc": "6919:152:6",
													"nodeType": "YulBlock",
													"src": "6919:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6936:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6936:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6939:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6939:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6929:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:6"
																},
																"nativeSrc": "6929:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6929:88:6"
															},
															"nativeSrc": "6929:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6929:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7033:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7033:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7036:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7036:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7026:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7026:6:6"
																},
																"nativeSrc": "7026:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7026:15:6"
															},
															"nativeSrc": "7026:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7026:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7057:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7057:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7060:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7060:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7050:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7050:6:6"
																},
																"nativeSrc": "7050:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7050:15:6"
															},
															"nativeSrc": "7050:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7050:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6891:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6891:180:6"
											},
											{
												"body": {
													"nativeSrc": "7121:147:6",
													"nodeType": "YulBlock",
													"src": "7121:147:6",
													"statements": [
														{
															"nativeSrc": "7131:25:6",
															"nodeType": "YulAssignment",
															"src": "7131:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7154:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7154:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7136:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7136:17:6"
																},
																"nativeSrc": "7136:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7136:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7131:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7131:1:6"
																}
															]
														},
														{
															"nativeSrc": "7165:25:6",
															"nodeType": "YulAssignment",
															"src": "7165:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7188:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7188:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7170:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7170:17:6"
																},
																"nativeSrc": "7170:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7170:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7165:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7165:1:6"
																}
															]
														},
														{
															"nativeSrc": "7199:16:6",
															"nodeType": "YulAssignment",
															"src": "7199:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7210:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7210:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7213:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7213:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7206:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7206:3:6"
																},
																"nativeSrc": "7206:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7206:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7199:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7199:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7239:22:6",
																"nodeType": "YulBlock",
																"src": "7239:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7241:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7241:16:6"
																			},
																			"nativeSrc": "7241:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7241:18:6"
																		},
																		"nativeSrc": "7241:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7241:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7231:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7231:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7234:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7234:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7228:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7228:2:6"
																},
																"nativeSrc": "7228:10:6",
																"nodeType": "YulFunctionCall",
																"src": "7228:10:6"
															},
															"nativeSrc": "7225:36:6",
															"nodeType": "YulIf",
															"src": "7225:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7077:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7108:1:6",
														"nodeType": "YulTypedName",
														"src": "7108:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7111:1:6",
														"nodeType": "YulTypedName",
														"src": "7111:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7117:3:6",
														"nodeType": "YulTypedName",
														"src": "7117:3:6",
														"type": ""
													}
												],
												"src": "7077:191:6"
											},
											{
												"body": {
													"nativeSrc": "7400:206:6",
													"nodeType": "YulBlock",
													"src": "7400:206:6",
													"statements": [
														{
															"nativeSrc": "7410:26:6",
															"nodeType": "YulAssignment",
															"src": "7410:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7422:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7422:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7433:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7433:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7418:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7418:3:6"
																},
																"nativeSrc": "7418:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7418:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7410:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7410:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7490:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7490:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7503:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7503:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7514:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7514:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7499:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7499:3:6"
																		},
																		"nativeSrc": "7499:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7499:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7446:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7446:43:6"
																},
																"nativeSrc": "7446:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7446:71:6"
															},
															"nativeSrc": "7446:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7446:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7571:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7571:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7584:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7584:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7595:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7595:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7580:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7580:3:6"
																		},
																		"nativeSrc": "7580:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7580:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7527:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7527:43:6"
																},
																"nativeSrc": "7527:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7527:72:6"
															},
															"nativeSrc": "7527:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7527:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7274:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7364:9:6",
														"nodeType": "YulTypedName",
														"src": "7364:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7376:6:6",
														"nodeType": "YulTypedName",
														"src": "7376:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7384:6:6",
														"nodeType": "YulTypedName",
														"src": "7384:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7395:4:6",
														"nodeType": "YulTypedName",
														"src": "7395:4:6",
														"type": ""
													}
												],
												"src": "7274:332:6"
											},
											{
												"body": {
													"nativeSrc": "7654:48:6",
													"nodeType": "YulBlock",
													"src": "7654:48:6",
													"statements": [
														{
															"nativeSrc": "7664:32:6",
															"nodeType": "YulAssignment",
															"src": "7664:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7689:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7689:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7682:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7682:6:6"
																		},
																		"nativeSrc": "7682:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7682:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7675:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7675:6:6"
																},
																"nativeSrc": "7675:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7675:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7664:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "7664:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7612:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7636:5:6",
														"nodeType": "YulTypedName",
														"src": "7636:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7646:7:6",
														"nodeType": "YulTypedName",
														"src": "7646:7:6",
														"type": ""
													}
												],
												"src": "7612:90:6"
											},
											{
												"body": {
													"nativeSrc": "7748:76:6",
													"nodeType": "YulBlock",
													"src": "7748:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7802:16:6",
																"nodeType": "YulBlock",
																"src": "7802:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7811:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7811:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7814:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7814:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7804:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7804:6:6"
																			},
																			"nativeSrc": "7804:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7804:12:6"
																		},
																		"nativeSrc": "7804:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7804:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7771:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7771:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7793:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7793:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7778:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "7778:14:6"
																				},
																				"nativeSrc": "7778:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7778:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7768:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7768:2:6"
																		},
																		"nativeSrc": "7768:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7768:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7761:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7761:6:6"
																},
																"nativeSrc": "7761:40:6",
																"nodeType": "YulFunctionCall",
																"src": "7761:40:6"
															},
															"nativeSrc": "7758:60:6",
															"nodeType": "YulIf",
															"src": "7758:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7708:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7741:5:6",
														"nodeType": "YulTypedName",
														"src": "7741:5:6",
														"type": ""
													}
												],
												"src": "7708:116:6"
											},
											{
												"body": {
													"nativeSrc": "7890:77:6",
													"nodeType": "YulBlock",
													"src": "7890:77:6",
													"statements": [
														{
															"nativeSrc": "7900:22:6",
															"nodeType": "YulAssignment",
															"src": "7900:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7915:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7915:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7909:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7909:5:6"
																},
																"nativeSrc": "7909:13:6",
																"nodeType": "YulFunctionCall",
																"src": "7909:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7900:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7900:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7955:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7955:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7931:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "7931:23:6"
																},
																"nativeSrc": "7931:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7931:30:6"
															},
															"nativeSrc": "7931:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7931:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7830:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7868:6:6",
														"nodeType": "YulTypedName",
														"src": "7868:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7876:3:6",
														"nodeType": "YulTypedName",
														"src": "7876:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7884:5:6",
														"nodeType": "YulTypedName",
														"src": "7884:5:6",
														"type": ""
													}
												],
												"src": "7830:137:6"
											},
											{
												"body": {
													"nativeSrc": "8047:271:6",
													"nodeType": "YulBlock",
													"src": "8047:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8093:83:6",
																"nodeType": "YulBlock",
																"src": "8093:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8095:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8095:77:6"
																			},
																			"nativeSrc": "8095:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8095:79:6"
																		},
																		"nativeSrc": "8095:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8095:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8068:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8068:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8077:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8077:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8064:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8064:3:6"
																		},
																		"nativeSrc": "8064:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8064:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8089:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8089:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8060:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8060:3:6"
																},
																"nativeSrc": "8060:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8060:32:6"
															},
															"nativeSrc": "8057:119:6",
															"nodeType": "YulIf",
															"src": "8057:119:6"
														},
														{
															"nativeSrc": "8186:125:6",
															"nodeType": "YulBlock",
															"src": "8186:125:6",
															"statements": [
																{
																	"nativeSrc": "8201:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8201:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8215:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8215:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8205:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8205:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8230:71:6",
																	"nodeType": "YulAssignment",
																	"src": "8230:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8273:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8273:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8284:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8284:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8269:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8269:3:6"
																				},
																				"nativeSrc": "8269:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8269:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8293:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8293:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "8240:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "8240:28:6"
																		},
																		"nativeSrc": "8240:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8240:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8230:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8230:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7973:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8017:9:6",
														"nodeType": "YulTypedName",
														"src": "8017:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8028:7:6",
														"nodeType": "YulTypedName",
														"src": "8028:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8040:6:6",
														"nodeType": "YulTypedName",
														"src": "8040:6:6",
														"type": ""
													}
												],
												"src": "7973:345:6"
											},
											{
												"body": {
													"nativeSrc": "8420:73:6",
													"nodeType": "YulBlock",
													"src": "8420:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8437:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8437:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8442:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8442:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8430:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8430:6:6"
																},
																"nativeSrc": "8430:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8430:19:6"
															},
															"nativeSrc": "8430:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "8430:19:6"
														},
														{
															"nativeSrc": "8458:29:6",
															"nodeType": "YulAssignment",
															"src": "8458:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8477:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8477:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8482:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8482:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8473:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:6"
																},
																"nativeSrc": "8473:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8473:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8458:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8458:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8324:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8392:3:6",
														"nodeType": "YulTypedName",
														"src": "8392:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8397:6:6",
														"nodeType": "YulTypedName",
														"src": "8397:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8408:11:6",
														"nodeType": "YulTypedName",
														"src": "8408:11:6",
														"type": ""
													}
												],
												"src": "8324:169:6"
											},
											{
												"body": {
													"nativeSrc": "8605:59:6",
													"nodeType": "YulBlock",
													"src": "8605:59:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8627:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8627:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8635:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8635:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8623:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8623:3:6"
																		},
																		"nativeSrc": "8623:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8623:14:6"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "8639:17:6",
																		"nodeType": "YulLiteral",
																		"src": "8639:17:6",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8616:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8616:6:6"
																},
																"nativeSrc": "8616:41:6",
																"nodeType": "YulFunctionCall",
																"src": "8616:41:6"
															},
															"nativeSrc": "8616:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "8616:41:6"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "8499:165:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8597:6:6",
														"nodeType": "YulTypedName",
														"src": "8597:6:6",
														"type": ""
													}
												],
												"src": "8499:165:6"
											},
											{
												"body": {
													"nativeSrc": "8816:220:6",
													"nodeType": "YulBlock",
													"src": "8816:220:6",
													"statements": [
														{
															"nativeSrc": "8826:74:6",
															"nodeType": "YulAssignment",
															"src": "8826:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8892:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8892:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8897:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8897:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8833:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8833:58:6"
																},
																"nativeSrc": "8833:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8833:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8826:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8826:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8998:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8998:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "8909:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8909:88:6"
																},
																"nativeSrc": "8909:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8909:93:6"
															},
															"nativeSrc": "8909:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8909:93:6"
														},
														{
															"nativeSrc": "9011:19:6",
															"nodeType": "YulAssignment",
															"src": "9011:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9022:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9022:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9027:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9027:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9018:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9018:3:6"
																},
																"nativeSrc": "9018:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9018:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9011:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9011:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8670:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8804:3:6",
														"nodeType": "YulTypedName",
														"src": "8804:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8812:3:6",
														"nodeType": "YulTypedName",
														"src": "8812:3:6",
														"type": ""
													}
												],
												"src": "8670:366:6"
											},
											{
												"body": {
													"nativeSrc": "9213:248:6",
													"nodeType": "YulBlock",
													"src": "9213:248:6",
													"statements": [
														{
															"nativeSrc": "9223:26:6",
															"nodeType": "YulAssignment",
															"src": "9223:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9235:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9235:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9246:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9246:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9231:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9231:3:6"
																},
																"nativeSrc": "9231:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9231:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9223:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9223:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9270:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9270:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9281:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9281:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9266:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9266:3:6"
																		},
																		"nativeSrc": "9266:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9266:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9289:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9289:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9295:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9295:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9285:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9285:3:6"
																		},
																		"nativeSrc": "9285:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9285:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9259:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9259:6:6"
																},
																"nativeSrc": "9259:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9259:47:6"
															},
															"nativeSrc": "9259:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9259:47:6"
														},
														{
															"nativeSrc": "9315:139:6",
															"nodeType": "YulAssignment",
															"src": "9315:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9449:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9449:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9323:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9323:124:6"
																},
																"nativeSrc": "9323:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9323:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9315:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9315:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9042:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9193:9:6",
														"nodeType": "YulTypedName",
														"src": "9193:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9208:4:6",
														"nodeType": "YulTypedName",
														"src": "9208:4:6",
														"type": ""
													}
												],
												"src": "9042:419:6"
											},
											{
												"body": {
													"nativeSrc": "9512:149:6",
													"nodeType": "YulBlock",
													"src": "9512:149:6",
													"statements": [
														{
															"nativeSrc": "9522:25:6",
															"nodeType": "YulAssignment",
															"src": "9522:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9545:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9545:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9527:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9527:17:6"
																},
																"nativeSrc": "9527:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9527:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9522:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9522:1:6"
																}
															]
														},
														{
															"nativeSrc": "9556:25:6",
															"nodeType": "YulAssignment",
															"src": "9556:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9579:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9579:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9561:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9561:17:6"
																},
																"nativeSrc": "9561:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9561:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9556:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9556:1:6"
																}
															]
														},
														{
															"nativeSrc": "9590:17:6",
															"nodeType": "YulAssignment",
															"src": "9590:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9602:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9602:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9605:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9605:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9598:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9598:3:6"
																},
																"nativeSrc": "9598:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9598:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9590:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9590:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9632:22:6",
																"nodeType": "YulBlock",
																"src": "9632:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9634:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9634:16:6"
																			},
																			"nativeSrc": "9634:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9634:18:6"
																		},
																		"nativeSrc": "9634:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9634:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9623:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9623:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9629:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9629:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9620:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9620:2:6"
																},
																"nativeSrc": "9620:11:6",
																"nodeType": "YulFunctionCall",
																"src": "9620:11:6"
															},
															"nativeSrc": "9617:37:6",
															"nodeType": "YulIf",
															"src": "9617:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9467:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9498:1:6",
														"nodeType": "YulTypedName",
														"src": "9498:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9501:1:6",
														"nodeType": "YulTypedName",
														"src": "9501:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9507:4:6",
														"nodeType": "YulTypedName",
														"src": "9507:4:6",
														"type": ""
													}
												],
												"src": "9467:194:6"
											},
											{
												"body": {
													"nativeSrc": "9715:362:6",
													"nodeType": "YulBlock",
													"src": "9715:362:6",
													"statements": [
														{
															"nativeSrc": "9725:25:6",
															"nodeType": "YulAssignment",
															"src": "9725:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9748:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9748:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9730:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9730:17:6"
																},
																"nativeSrc": "9730:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9730:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9725:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9725:1:6"
																}
															]
														},
														{
															"nativeSrc": "9759:25:6",
															"nodeType": "YulAssignment",
															"src": "9759:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9782:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9782:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9764:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9764:17:6"
																},
																"nativeSrc": "9764:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9764:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9759:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9759:1:6"
																}
															]
														},
														{
															"nativeSrc": "9793:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "9793:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9816:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9816:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9819:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9819:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9812:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9812:3:6"
																},
																"nativeSrc": "9812:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9812:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9797:11:6",
																	"nodeType": "YulTypedName",
																	"src": "9797:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9830:41:6",
															"nodeType": "YulAssignment",
															"src": "9830:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "9859:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9841:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9841:17:6"
																},
																"nativeSrc": "9841:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9841:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9830:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9830:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10048:22:6",
																"nodeType": "YulBlock",
																"src": "10048:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10050:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10050:16:6"
																			},
																			"nativeSrc": "10050:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10050:18:6"
																		},
																		"nativeSrc": "10050:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10050:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9981:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "9981:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9974:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "9974:6:6"
																				},
																				"nativeSrc": "9974:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9974:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10004:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "10004:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10011:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "10011:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10020:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "10020:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10007:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "10007:3:6"
																						},
																						"nativeSrc": "10007:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "10007:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10001:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "10001:2:6"
																				},
																				"nativeSrc": "10001:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10001:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9954:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "9954:2:6"
																		},
																		"nativeSrc": "9954:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9954:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9934:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9934:6:6"
																},
																"nativeSrc": "9934:113:6",
																"nodeType": "YulFunctionCall",
																"src": "9934:113:6"
															},
															"nativeSrc": "9931:139:6",
															"nodeType": "YulIf",
															"src": "9931:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9667:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9698:1:6",
														"nodeType": "YulTypedName",
														"src": "9698:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9701:1:6",
														"nodeType": "YulTypedName",
														"src": "9701:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9707:7:6",
														"nodeType": "YulTypedName",
														"src": "9707:7:6",
														"type": ""
													}
												],
												"src": "9667:410:6"
											},
											{
												"body": {
													"nativeSrc": "10189:144:6",
													"nodeType": "YulBlock",
													"src": "10189:144:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10211:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10211:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10219:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10219:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10207:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10207:3:6"
																		},
																		"nativeSrc": "10207:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10207:14:6"
																	},
																	{
																		"hexValue": "5374616b696e6720706572696f642063616e6e6f742065786365656420342079",
																		"kind": "string",
																		"nativeSrc": "10223:34:6",
																		"nodeType": "YulLiteral",
																		"src": "10223:34:6",
																		"type": "",
																		"value": "Staking period cannot exceed 4 y"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10200:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10200:6:6"
																},
																"nativeSrc": "10200:58:6",
																"nodeType": "YulFunctionCall",
																"src": "10200:58:6"
															},
															"nativeSrc": "10200:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "10200:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10279:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10279:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10287:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10287:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10275:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10275:3:6"
																		},
																		"nativeSrc": "10275:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10275:15:6"
																	},
																	{
																		"hexValue": "6561727320616e64206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "10292:33:6",
																		"nodeType": "YulLiteral",
																		"src": "10292:33:6",
																		"type": "",
																		"value": "ears and must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10268:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10268:6:6"
																},
																"nativeSrc": "10268:58:6",
																"nodeType": "YulFunctionCall",
																"src": "10268:58:6"
															},
															"nativeSrc": "10268:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "10268:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_df401bb5dd749b242221e1a45a3e34dea092c9ed1f71c241bb199b116619d137",
												"nativeSrc": "10083:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10181:6:6",
														"nodeType": "YulTypedName",
														"src": "10181:6:6",
														"type": ""
													}
												],
												"src": "10083:250:6"
											},
											{
												"body": {
													"nativeSrc": "10485:220:6",
													"nodeType": "YulBlock",
													"src": "10485:220:6",
													"statements": [
														{
															"nativeSrc": "10495:74:6",
															"nodeType": "YulAssignment",
															"src": "10495:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10561:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10561:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10566:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10566:2:6",
																		"type": "",
																		"value": "63"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10502:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10502:58:6"
																},
																"nativeSrc": "10502:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10502:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10495:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10495:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10667:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10667:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df401bb5dd749b242221e1a45a3e34dea092c9ed1f71c241bb199b116619d137",
																	"nativeSrc": "10578:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10578:88:6"
																},
																"nativeSrc": "10578:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10578:93:6"
															},
															"nativeSrc": "10578:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10578:93:6"
														},
														{
															"nativeSrc": "10680:19:6",
															"nodeType": "YulAssignment",
															"src": "10680:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10691:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10691:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10696:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10696:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10687:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10687:3:6"
																},
																"nativeSrc": "10687:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10687:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10680:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10680:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df401bb5dd749b242221e1a45a3e34dea092c9ed1f71c241bb199b116619d137_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10339:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10473:3:6",
														"nodeType": "YulTypedName",
														"src": "10473:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10481:3:6",
														"nodeType": "YulTypedName",
														"src": "10481:3:6",
														"type": ""
													}
												],
												"src": "10339:366:6"
											},
											{
												"body": {
													"nativeSrc": "10882:248:6",
													"nodeType": "YulBlock",
													"src": "10882:248:6",
													"statements": [
														{
															"nativeSrc": "10892:26:6",
															"nodeType": "YulAssignment",
															"src": "10892:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10904:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10904:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10915:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10915:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10900:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10900:3:6"
																},
																"nativeSrc": "10900:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10900:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10892:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10892:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10939:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10939:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10950:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10950:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10935:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10935:3:6"
																		},
																		"nativeSrc": "10935:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10935:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10958:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10958:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10964:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10964:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10954:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10954:3:6"
																		},
																		"nativeSrc": "10954:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10954:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10928:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10928:6:6"
																},
																"nativeSrc": "10928:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10928:47:6"
															},
															"nativeSrc": "10928:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10928:47:6"
														},
														{
															"nativeSrc": "10984:139:6",
															"nodeType": "YulAssignment",
															"src": "10984:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11118:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11118:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df401bb5dd749b242221e1a45a3e34dea092c9ed1f71c241bb199b116619d137_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10992:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10992:124:6"
																},
																"nativeSrc": "10992:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10992:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10984:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10984:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df401bb5dd749b242221e1a45a3e34dea092c9ed1f71c241bb199b116619d137__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10711:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10862:9:6",
														"nodeType": "YulTypedName",
														"src": "10862:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10877:4:6",
														"nodeType": "YulTypedName",
														"src": "10877:4:6",
														"type": ""
													}
												],
												"src": "10711:419:6"
											},
											{
												"body": {
													"nativeSrc": "11242:73:6",
													"nodeType": "YulBlock",
													"src": "11242:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11264:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11264:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11272:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11272:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11260:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11260:3:6"
																		},
																		"nativeSrc": "11260:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11260:14:6"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "11276:31:6",
																		"nodeType": "YulLiteral",
																		"src": "11276:31:6",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11253:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11253:6:6"
																},
																"nativeSrc": "11253:55:6",
																"nodeType": "YulFunctionCall",
																"src": "11253:55:6"
															},
															"nativeSrc": "11253:55:6",
															"nodeType": "YulExpressionStatement",
															"src": "11253:55:6"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nativeSrc": "11136:179:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11234:6:6",
														"nodeType": "YulTypedName",
														"src": "11234:6:6",
														"type": ""
													}
												],
												"src": "11136:179:6"
											},
											{
												"body": {
													"nativeSrc": "11467:220:6",
													"nodeType": "YulBlock",
													"src": "11467:220:6",
													"statements": [
														{
															"nativeSrc": "11477:74:6",
															"nodeType": "YulAssignment",
															"src": "11477:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11543:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11543:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11548:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11548:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11484:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11484:58:6"
																},
																"nativeSrc": "11484:67:6",
																"nodeType": "YulFunctionCall",
																"src": "11484:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11477:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11477:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11649:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11649:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nativeSrc": "11560:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11560:88:6"
																},
																"nativeSrc": "11560:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11560:93:6"
															},
															"nativeSrc": "11560:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11560:93:6"
														},
														{
															"nativeSrc": "11662:19:6",
															"nodeType": "YulAssignment",
															"src": "11662:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11673:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11673:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11678:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11678:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11669:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11669:3:6"
																},
																"nativeSrc": "11669:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11669:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11662:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11662:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11321:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11455:3:6",
														"nodeType": "YulTypedName",
														"src": "11455:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11463:3:6",
														"nodeType": "YulTypedName",
														"src": "11463:3:6",
														"type": ""
													}
												],
												"src": "11321:366:6"
											},
											{
												"body": {
													"nativeSrc": "11864:248:6",
													"nodeType": "YulBlock",
													"src": "11864:248:6",
													"statements": [
														{
															"nativeSrc": "11874:26:6",
															"nodeType": "YulAssignment",
															"src": "11874:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11886:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11886:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11897:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11897:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11882:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11882:3:6"
																},
																"nativeSrc": "11882:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11882:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11874:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11874:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11921:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11921:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11932:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11932:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11917:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11917:3:6"
																		},
																		"nativeSrc": "11917:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11917:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11940:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11940:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11946:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11946:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11936:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11936:3:6"
																		},
																		"nativeSrc": "11936:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11936:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11910:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11910:6:6"
																},
																"nativeSrc": "11910:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11910:47:6"
															},
															"nativeSrc": "11910:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11910:47:6"
														},
														{
															"nativeSrc": "11966:139:6",
															"nodeType": "YulAssignment",
															"src": "11966:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12100:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12100:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11974:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11974:124:6"
																},
																"nativeSrc": "11974:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11974:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11966:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11966:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11693:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11844:9:6",
														"nodeType": "YulTypedName",
														"src": "11844:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11859:4:6",
														"nodeType": "YulTypedName",
														"src": "11859:4:6",
														"type": ""
													}
												],
												"src": "11693:419:6"
											},
											{
												"body": {
													"nativeSrc": "12272:288:6",
													"nodeType": "YulBlock",
													"src": "12272:288:6",
													"statements": [
														{
															"nativeSrc": "12282:26:6",
															"nodeType": "YulAssignment",
															"src": "12282:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12294:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12294:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12305:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12305:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12290:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12290:3:6"
																},
																"nativeSrc": "12290:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12290:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12282:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12282:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12362:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12362:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12375:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12375:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12386:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12386:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12371:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12371:3:6"
																		},
																		"nativeSrc": "12371:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12371:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12318:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "12318:43:6"
																},
																"nativeSrc": "12318:71:6",
																"nodeType": "YulFunctionCall",
																"src": "12318:71:6"
															},
															"nativeSrc": "12318:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "12318:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12443:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12443:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12456:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12456:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12467:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12467:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12452:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12452:3:6"
																		},
																		"nativeSrc": "12452:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12452:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12399:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "12399:43:6"
																},
																"nativeSrc": "12399:72:6",
																"nodeType": "YulFunctionCall",
																"src": "12399:72:6"
															},
															"nativeSrc": "12399:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "12399:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12525:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12525:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12538:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12538:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12549:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12549:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12534:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12534:3:6"
																		},
																		"nativeSrc": "12534:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12534:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12481:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "12481:43:6"
																},
																"nativeSrc": "12481:72:6",
																"nodeType": "YulFunctionCall",
																"src": "12481:72:6"
															},
															"nativeSrc": "12481:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "12481:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12118:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12228:9:6",
														"nodeType": "YulTypedName",
														"src": "12228:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12240:6:6",
														"nodeType": "YulTypedName",
														"src": "12240:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12248:6:6",
														"nodeType": "YulTypedName",
														"src": "12248:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12256:6:6",
														"nodeType": "YulTypedName",
														"src": "12256:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12267:4:6",
														"nodeType": "YulTypedName",
														"src": "12267:4:6",
														"type": ""
													}
												],
												"src": "12118:442:6"
											},
											{
												"body": {
													"nativeSrc": "12672:75:6",
													"nodeType": "YulBlock",
													"src": "12672:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12694:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12694:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12702:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12702:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12690:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12690:3:6"
																		},
																		"nativeSrc": "12690:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12690:14:6"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "12706:33:6",
																		"nodeType": "YulLiteral",
																		"src": "12706:33:6",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12683:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12683:6:6"
																},
																"nativeSrc": "12683:57:6",
																"nodeType": "YulFunctionCall",
																"src": "12683:57:6"
															},
															"nativeSrc": "12683:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "12683:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "12566:181:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12664:6:6",
														"nodeType": "YulTypedName",
														"src": "12664:6:6",
														"type": ""
													}
												],
												"src": "12566:181:6"
											},
											{
												"body": {
													"nativeSrc": "12899:220:6",
													"nodeType": "YulBlock",
													"src": "12899:220:6",
													"statements": [
														{
															"nativeSrc": "12909:74:6",
															"nodeType": "YulAssignment",
															"src": "12909:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12975:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12975:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12980:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12980:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12916:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "12916:58:6"
																},
																"nativeSrc": "12916:67:6",
																"nodeType": "YulFunctionCall",
																"src": "12916:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12909:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12909:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13081:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13081:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "12992:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "12992:88:6"
																},
																"nativeSrc": "12992:93:6",
																"nodeType": "YulFunctionCall",
																"src": "12992:93:6"
															},
															"nativeSrc": "12992:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "12992:93:6"
														},
														{
															"nativeSrc": "13094:19:6",
															"nodeType": "YulAssignment",
															"src": "13094:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13105:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13105:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13110:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13110:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13101:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13101:3:6"
																},
																"nativeSrc": "13101:12:6",
																"nodeType": "YulFunctionCall",
																"src": "13101:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13094:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13094:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12753:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12887:3:6",
														"nodeType": "YulTypedName",
														"src": "12887:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12895:3:6",
														"nodeType": "YulTypedName",
														"src": "12895:3:6",
														"type": ""
													}
												],
												"src": "12753:366:6"
											},
											{
												"body": {
													"nativeSrc": "13296:248:6",
													"nodeType": "YulBlock",
													"src": "13296:248:6",
													"statements": [
														{
															"nativeSrc": "13306:26:6",
															"nodeType": "YulAssignment",
															"src": "13306:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13318:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13318:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13329:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13329:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13314:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13314:3:6"
																},
																"nativeSrc": "13314:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13314:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13306:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13306:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13353:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13353:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13364:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13364:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13349:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13349:3:6"
																		},
																		"nativeSrc": "13349:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13349:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13372:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "13372:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13378:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13378:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13368:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13368:3:6"
																		},
																		"nativeSrc": "13368:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13368:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13342:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13342:6:6"
																},
																"nativeSrc": "13342:47:6",
																"nodeType": "YulFunctionCall",
																"src": "13342:47:6"
															},
															"nativeSrc": "13342:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "13342:47:6"
														},
														{
															"nativeSrc": "13398:139:6",
															"nodeType": "YulAssignment",
															"src": "13398:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13532:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13532:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13406:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "13406:124:6"
																},
																"nativeSrc": "13406:131:6",
																"nodeType": "YulFunctionCall",
																"src": "13406:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13398:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13398:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13125:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13276:9:6",
														"nodeType": "YulTypedName",
														"src": "13276:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13291:4:6",
														"nodeType": "YulTypedName",
														"src": "13291:4:6",
														"type": ""
													}
												],
												"src": "13125:419:6"
											},
											{
												"body": {
													"nativeSrc": "13578:152:6",
													"nodeType": "YulBlock",
													"src": "13578:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13595:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13595:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13598:77:6",
																		"nodeType": "YulLiteral",
																		"src": "13598:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13588:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13588:6:6"
																},
																"nativeSrc": "13588:88:6",
																"nodeType": "YulFunctionCall",
																"src": "13588:88:6"
															},
															"nativeSrc": "13588:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "13588:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13692:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13692:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13695:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13695:4:6",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13685:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13685:6:6"
																},
																"nativeSrc": "13685:15:6",
																"nodeType": "YulFunctionCall",
																"src": "13685:15:6"
															},
															"nativeSrc": "13685:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "13685:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13716:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13716:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13719:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13719:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13709:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13709:6:6"
																},
																"nativeSrc": "13709:15:6",
																"nodeType": "YulFunctionCall",
																"src": "13709:15:6"
															},
															"nativeSrc": "13709:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "13709:15:6"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "13550:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "13550:180:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$290_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$290_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct StakingContract.Stake -> struct StakingContract.Stake\n    function abi_encode_t_struct$_Stake_$974_memory_ptr_to_t_struct$_Stake_$974_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // stakedAmount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // withdrawDate\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Stake_$974_memory_ptr_to_t_struct$_Stake_$974_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Stake_$974_memory_ptr_to_t_struct$_Stake_$974_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct StakingContract.Stake[] -> struct StakingContract.Stake[]\n    function abi_encode_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Stake_$974_memory_ptr_to_t_struct$_Stake_$974_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_df401bb5dd749b242221e1a45a3e34dea092c9ed1f71c241bb199b116619d137(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking period cannot exceed 4 y\")\n\n        mstore(add(memPtr, 32), \"ears and must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_df401bb5dd749b242221e1a45a3e34dea092c9ed1f71c241bb199b116619d137_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 63)\n        store_literal_in_memory_df401bb5dd749b242221e1a45a3e34dea092c9ed1f71c241bb199b116619d137(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df401bb5dd749b242221e1a45a3e34dea092c9ed1f71c241bb199b116619d137__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df401bb5dd749b242221e1a45a3e34dea092c9ed1f71c241bb199b116619d137_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c80637bc74225116100645780637bc74225146100e3578063817b1cd2146101015780638da5cb5b1461011f578063f2fde38b1461013d578063fc0e3d901461015957610091565b80633ccfd60b14610095578063715018a61461009f57806372f702f3146100a95780637b0472f0146100c7575b5f80fd5b61009d610177565b005b6100a7610504565b005b6100b1610517565b6040516100be9190610d95565b60405180910390f35b6100e160048036038101906100dc9190610de5565b61053c565b005b6100eb610832565b6040516100f89190610e32565b60405180910390f35b61010961083b565b6040516101169190610e32565b60405180910390f35b610127610841565b6040516101349190610e6b565b60405180910390f35b61015760048036038101906101529190610eae565b610869565b005b6101616108ed565b60405161016e9190610fbd565b60405180910390f35b61017f610997565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b8282101561021f578382905f5260205f2090600202016040518060400160405290815f8201548152602001600182015481525050815260200190600101906101dc565b5050505090505f80805f90505b8351811015610395575f84828151811061024957610248610fdd565b5b60200260200101516020015111801561027e57505f84828151811061027157610270610fdd565b5b60200260200101515f0151115b156103345783818151811061029657610295610fdd565b5b60200260200101515f0151836102ac9190611037565b925060405180604001604052805f81526020015f81525060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061031257610311610fdd565b5b905f5260205f2090600202015f820151815f0155602082015181600101559050505b5f84828151811061034857610347610fdd565b5b6020026020010151602001511115801561037e57505f84828151811061037157610370610fdd565b5b60200260200101515f0151115b1561038857600191505b808060010191505061022c565b50806103b1576103af3360056109e490919063ffffffff16565b505b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161040e92919061106a565b6020604051808303815f875af115801561042a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061044e91906110c6565b905080610490576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104879061114b565b60405180910390fd5b8260035f8282546104a19190611169565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5846040516104ee9190610e32565b60405180910390a250505050610502610a11565b565b61050c610a1a565b6105155f610aa1565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610544610997565b5f8111801561056357506301e13380600461055f919061119c565b8111155b6105a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105999061124d565b60405180910390fd5b5f82116105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db906112b5565b60405180910390fd5b5f604051806040016040528084815260200183426106029190611037565b815250905060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f0155602082015181600101555050600160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050036106dd576106db336005610b6490919063ffffffff16565b505b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161073c939291906112d3565b6020604051808303815f875af1158015610758573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061077c91906110c6565b9050806107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b59061114b565b60405180910390fd5b8360035f8282546107cf9190611037565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8560405161081c9190610e32565b60405180910390a2505061082e610a11565b5050565b5f600354905090565b60035481565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610871610a1a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108e1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108d89190610e6b565b60405180910390fd5b6108ea81610aa1565b50565b606060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b8282101561098e578382905f5260205f2090600202016040518060400160405290815f82015481526020016001820154815250508152602001906001019061094b565b50505050905090565b60025f54036109db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d290611352565b60405180910390fd5b60025f81905550565b5f610a09835f018373ffffffffffffffffffffffffffffffffffffffff165f1b610b91565b905092915050565b60015f81905550565b610a22610c8d565b73ffffffffffffffffffffffffffffffffffffffff16610a40610841565b73ffffffffffffffffffffffffffffffffffffffff1614610a9f57610a63610c8d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a969190610e6b565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f610b89835f018373ffffffffffffffffffffffffffffffffffffffff165f1b610c94565b905092915050565b5f80836001015f8481526020019081526020015f205490505f8114610c82575f600182610bbe9190611169565b90505f6001865f0180549050610bd49190611169565b9050808214610c3a575f865f018281548110610bf357610bf2610fdd565b5b905f5260205f200154905080875f018481548110610c1457610c13610fdd565b5b905f5260205f20018190555083876001015f8381526020019081526020015f2081905550505b855f01805480610c4d57610c4c611370565b5b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f905560019350505050610c87565b5f9150505b92915050565b5f33905090565b5f610c9f8383610cfb565b610cf157825f0182908060018154018082558091505060019003905f5260205f20015f9091909190915055825f0180549050836001015f8481526020019081526020015f208190555060019050610cf5565b5f90505b92915050565b5f80836001015f8481526020019081526020015f20541415905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610d5d610d58610d5384610d1b565b610d3a565b610d1b565b9050919050565b5f610d6e82610d43565b9050919050565b5f610d7f82610d64565b9050919050565b610d8f81610d75565b82525050565b5f602082019050610da85f830184610d86565b92915050565b5f80fd5b5f819050919050565b610dc481610db2565b8114610dce575f80fd5b50565b5f81359050610ddf81610dbb565b92915050565b5f8060408385031215610dfb57610dfa610dae565b5b5f610e0885828601610dd1565b9250506020610e1985828601610dd1565b9150509250929050565b610e2c81610db2565b82525050565b5f602082019050610e455f830184610e23565b92915050565b5f610e5582610d1b565b9050919050565b610e6581610e4b565b82525050565b5f602082019050610e7e5f830184610e5c565b92915050565b610e8d81610e4b565b8114610e97575f80fd5b50565b5f81359050610ea881610e84565b92915050565b5f60208284031215610ec357610ec2610dae565b5b5f610ed084828501610e9a565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610f0b81610db2565b82525050565b604082015f820151610f255f850182610f02565b506020820151610f386020850182610f02565b50505050565b5f610f498383610f11565b60408301905092915050565b5f602082019050919050565b5f610f6b82610ed9565b610f758185610ee3565b9350610f8083610ef3565b805f5b83811015610fb0578151610f978882610f3e565b9750610fa283610f55565b925050600181019050610f83565b5085935050505092915050565b5f6020820190508181035f830152610fd58184610f61565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61104182610db2565b915061104c83610db2565b92508282019050808211156110645761106361100a565b5b92915050565b5f60408201905061107d5f830185610e5c565b61108a6020830184610e23565b9392505050565b5f8115159050919050565b6110a581611091565b81146110af575f80fd5b50565b5f815190506110c08161109c565b92915050565b5f602082840312156110db576110da610dae565b5b5f6110e8848285016110b2565b91505092915050565b5f82825260208201905092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f611135600f836110f1565b915061114082611101565b602082019050919050565b5f6020820190508181035f83015261116281611129565b9050919050565b5f61117382610db2565b915061117e83610db2565b92508282039050818111156111965761119561100a565b5b92915050565b5f6111a682610db2565b91506111b183610db2565b92508282026111bf81610db2565b915082820484148315176111d6576111d561100a565b5b5092915050565b7f5374616b696e6720706572696f642063616e6e6f7420657863656564203420795f8201527f6561727320616e64206d7573742062652067726561746572207468616e203000602082015250565b5f611237603f836110f1565b9150611242826111dd565b604082019050919050565b5f6020820190508181035f8301526112648161122b565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f61129f601d836110f1565b91506112aa8261126b565b602082019050919050565b5f6020820190508181035f8301526112cc81611293565b9050919050565b5f6060820190506112e65f830186610e5c565b6112f36020830185610e5c565b6113006040830184610e23565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61133c601f836110f1565b915061134782611308565b602082019050919050565b5f6020820190508181035f83015261136981611330565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea2646970667358221220e808f709e868c54b84fd04c18148b7c91419c21e0144e351131507221dcfe49564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BC74225 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x7BC74225 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xFC0E3D90 EQ PUSH2 0x159 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0xC7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x504 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB1 PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH2 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST PUSH2 0x869 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH2 0x997 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x21F JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1DC JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH0 DUP1 DUP1 PUSH0 SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x395 JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD GT DUP1 ISZERO PUSH2 0x27E JUMPI POP PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x271 JUMPI PUSH2 0x270 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x334 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x296 JUMPI PUSH2 0x295 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 ADD MLOAD DUP4 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x312 JUMPI PUSH2 0x311 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP JUMPDEST PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x348 JUMPI PUSH2 0x347 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x37E JUMPI POP PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x371 JUMPI PUSH2 0x370 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x388 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x22C JUMP JUMPDEST POP DUP1 PUSH2 0x3B1 JUMPI PUSH2 0x3AF CALLER PUSH1 0x5 PUSH2 0x9E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP3 SWAP2 SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x42A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x10C6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x487 SWAP1 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x1169 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0x502 PUSH2 0xA11 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x50C PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x515 PUSH0 PUSH2 0xAA1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x544 PUSH2 0x997 JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x563 JUMPI POP PUSH4 0x1E13380 PUSH1 0x4 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST DUP2 GT ISZERO JUMPDEST PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x599 SWAP1 PUSH2 0x124D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 TIMESTAMP PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SUB PUSH2 0x6DD JUMPI PUSH2 0x6DB CALLER PUSH1 0x5 PUSH2 0xB64 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x758 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x10C6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B5 SWAP1 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP6 PUSH1 0x40 MLOAD PUSH2 0x81C SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x82E PUSH2 0xA11 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x871 PUSH2 0xA1A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D8 SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EA DUP2 PUSH2 0xAA1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x98E JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x94B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x9DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D2 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA09 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0xB91 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xA22 PUSH2 0xC8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA40 PUSH2 0x841 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA9F JUMPI PUSH2 0xA63 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB89 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0xC94 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 EQ PUSH2 0xC82 JUMPI PUSH0 PUSH1 0x1 DUP3 PUSH2 0xBBE SWAP2 SWAP1 PUSH2 0x1169 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP7 PUSH0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0xBD4 SWAP2 SWAP1 PUSH2 0x1169 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0xC3A JUMPI PUSH0 DUP7 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBF3 JUMPI PUSH2 0xBF2 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xC14 JUMPI PUSH2 0xC13 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH0 ADD DUP1 SLOAD DUP1 PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xC87 JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xC9F DUP4 DUP4 PUSH2 0xCFB JUMP JUMPDEST PUSH2 0xCF1 JUMPI DUP3 PUSH0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0xCF5 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD5D PUSH2 0xD58 PUSH2 0xD53 DUP5 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0xD3A JUMP JUMPDEST PUSH2 0xD1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD6E DUP3 PUSH2 0xD43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD7F DUP3 PUSH2 0xD64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8F DUP2 PUSH2 0xD75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA8 PUSH0 DUP4 ADD DUP5 PUSH2 0xD86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC4 DUP2 PUSH2 0xDB2 JUMP JUMPDEST DUP2 EQ PUSH2 0xDCE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDDF DUP2 PUSH2 0xDBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDFB JUMPI PUSH2 0xDFA PUSH2 0xDAE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE08 DUP6 DUP3 DUP7 ADD PUSH2 0xDD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE19 DUP6 DUP3 DUP7 ADD PUSH2 0xDD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2C DUP2 PUSH2 0xDB2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE45 PUSH0 DUP4 ADD DUP5 PUSH2 0xE23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE55 DUP3 PUSH2 0xD1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE65 DUP2 PUSH2 0xE4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE7E PUSH0 DUP4 ADD DUP5 PUSH2 0xE5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE8D DUP2 PUSH2 0xE4B JUMP JUMPDEST DUP2 EQ PUSH2 0xE97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEA8 DUP2 PUSH2 0xE84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC3 JUMPI PUSH2 0xEC2 PUSH2 0xDAE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xED0 DUP5 DUP3 DUP6 ADD PUSH2 0xE9A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF0B DUP2 PUSH2 0xDB2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xF25 PUSH0 DUP6 ADD DUP3 PUSH2 0xF02 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xF38 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xF02 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF49 DUP4 DUP4 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF6B DUP3 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xF75 DUP2 DUP6 PUSH2 0xEE3 JUMP JUMPDEST SWAP4 POP PUSH2 0xF80 DUP4 PUSH2 0xEF3 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFB0 JUMPI DUP2 MLOAD PUSH2 0xF97 DUP9 DUP3 PUSH2 0xF3E JUMP JUMPDEST SWAP8 POP PUSH2 0xFA2 DUP4 PUSH2 0xF55 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xF83 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFD5 DUP2 DUP5 PUSH2 0xF61 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1041 DUP3 PUSH2 0xDB2 JUMP JUMPDEST SWAP2 POP PUSH2 0x104C DUP4 PUSH2 0xDB2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1064 JUMPI PUSH2 0x1063 PUSH2 0x100A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x107D PUSH0 DUP4 ADD DUP6 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x108A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE23 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A5 DUP2 PUSH2 0x1091 JUMP JUMPDEST DUP2 EQ PUSH2 0x10AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10C0 DUP2 PUSH2 0x109C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10DB JUMPI PUSH2 0x10DA PUSH2 0xDAE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10E8 DUP5 DUP3 DUP6 ADD PUSH2 0x10B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1135 PUSH1 0xF DUP4 PUSH2 0x10F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1140 DUP3 PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1162 DUP2 PUSH2 0x1129 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1173 DUP3 PUSH2 0xDB2 JUMP JUMPDEST SWAP2 POP PUSH2 0x117E DUP4 PUSH2 0xDB2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1196 JUMPI PUSH2 0x1195 PUSH2 0x100A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11A6 DUP3 PUSH2 0xDB2 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B1 DUP4 PUSH2 0xDB2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x11BF DUP2 PUSH2 0xDB2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x11D6 JUMPI PUSH2 0x11D5 PUSH2 0x100A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E6720706572696F642063616E6E6F742065786365656420342079 PUSH0 DUP3 ADD MSTORE PUSH32 0x6561727320616E64206D7573742062652067726561746572207468616E203000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1237 PUSH1 0x3F DUP4 PUSH2 0x10F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1242 DUP3 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1264 DUP2 PUSH2 0x122B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x129F PUSH1 0x1D DUP4 PUSH2 0x10F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x12AA DUP3 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12CC DUP2 PUSH2 0x1293 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12E6 PUSH0 DUP4 ADD DUP7 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x12F3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x1300 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE23 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x133C PUSH1 0x1F DUP4 PUSH2 0x10F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1347 DUP3 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1369 DUP2 PUSH2 0x1330 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 ADDMOD 0xF7 MULMOD 0xE8 PUSH9 0xC54B84FD04C18148B7 0xC9 EQ NOT 0xC2 0x1E ADD PREVRANDAO 0xE3 MLOAD SGT ISZERO SMOD 0x22 SAR 0xCF 0xE4 SWAP6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "298:2741:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1809:902;;;:::i;:::-;;2293:101:0;;;:::i;:::-;;490:26:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1048:755;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2947:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;523:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2717:103:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1809:902;2261:21:1;:19;:21::i;:::-;1861:24:5::1;1888:11;:23;1900:10;1888:23;;;;;;;;;;;;;;;1861:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;1922:21;1958:22:::0;1995:6;2004:1:::1;1995:10;;1990:408;2011:9;:16;2007:1;:20;1990:408;;;2080:1;2052:9;2062:1;2052:12;;;;;;;;:::i;:::-;;;;;;;;:25;;;:29;:62;;;;;2113:1;2085:9;2095:1;2085:12;;;;;;;;:::i;:::-;;;;;;;;:25;;;:29;2052:62;2048:200;;;2150:9;2160:1;2150:12;;;;;;;;:::i;:::-;;;;;;;;:25;;;2133:42;;;;;:::i;:::-;;;2222:11;;;;;;;;2228:1;2222:11;;;;2231:1;2222:11;;::::0;2193::::1;:23;2205:10;2193:23;;;;;;;;;;;;;;;2217:1;2193:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;2048:200;2295:1;2267:9;2277:1;2267:12;;;;;;;;:::i;:::-;;;;;;;;:25;;;:29;2265:32;:65;;;;;2329:1;2301:9;2311:1;2301:12;;;;;;;;:::i;:::-;;;;;;;;:25;;;:29;2265:65;2261:127;;;2369:4;2349:24;;2261:127;2029:3;;;;;;;1990:408;;;;2412:17;2407:72;;2444:24;2457:10;2444:5;:12;;:24;;;;:::i;:::-;;2407:72;2497:12;2512;;;;;;;;;;;:21;;;2534:10;2546:13;2512:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2497:63;;2578:7;2570:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;2631:13;2616:11;;:28;;;;;;;:::i;:::-;;;;;;;;2678:10;2668:36;;;2690:13;2668:36;;;;;;:::i;:::-;;;;;;;;1851:860;;;;2303:20:1::0;:18;:20::i;:::-;1809:902:5:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;490:26:5:-;;;;;;;;;;;;;:::o;1048:755::-;2261:21:1;:19;:21::i;:::-;1157:1:5::1;1148:6;:10;:42;;;;;402:8;462:1;:20;;;;:::i;:::-;1162:6;:28;;1148:42;1127:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;1320:1;1311:6;:10;1290:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1387:21;1411:39;;;;;;;;1417:6;1411:39;;;;1443:6;1425:15;:24;;;;:::i;:::-;1411:39;;::::0;1387:63:::1;;1460:11;:23;1472:10;1460:23;;;;;;;;;;;;;;;1489:8;1460:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:1;1512:11;:23;1524:10;1512:23;;;;;;;;;;;;;;;:30;;;;:35:::0;1508:86:::1;;1562:21;1572:10;1562:5;:9;;:21;;;;:::i;:::-;;1508:86;1604:12;1619;;;;;;;;;;;:25;;;1645:10;1665:4;1672:6;1619:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1604:75;;1697:7;1689:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;1749:6;1734:11;;:21;;;;;;;:::i;:::-;;;;;;;;1777:10;1770:26;;;1789:6;1770:26;;;;;;:::i;:::-;;;;;;;;1117:686;;2303:20:1::0;:18;:20::i;:::-;1048:755:5;;:::o;2947:89::-;2992:7;3018:11;;3011:18;;2947:89;:::o;523:26::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2543:215::-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2717:103:5:-;2757:14;2790:11;:23;2802:10;2790:23;;;;;;;;;;;;;;;2783:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2717:103;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;8607:156:4:-;8680:4;8703:53;8711:3;:10;;8747:5;8731:23;;8723:32;;8703:7;:53::i;:::-;8696:60;;8607:156;;;;:::o;2629:209:1:-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;8289:150:4:-;8359:4;8382:50;8387:3;:10;;8423:5;8407:23;;8399:32;;8382:4;:50::i;:::-;8375:57;;8289:150;;;;:::o;2815:1368::-;2881:4;2991:16;3010:3;:14;;:21;3025:5;3010:21;;;;;;;;;;;;2991:40;;3058:1;3046:8;:13;3042:1135;;3413:18;3445:1;3434:8;:12;;;;:::i;:::-;3413:33;;3460:17;3501:1;3480:3;:11;;:18;;;;:22;;;;:::i;:::-;3460:42;;3535:9;3521:10;:23;3517:378;;3564:17;3584:3;:11;;3596:9;3584:22;;;;;;;;:::i;:::-;;;;;;;;;;3564:42;;3731:9;3705:3;:11;;3717:10;3705:23;;;;;;;;:::i;:::-;;;;;;;;;:35;;;;3872:8;3844:3;:14;;:25;3859:9;3844:25;;;;;;;;;;;:36;;;;3546:349;3517:378;3973:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4076:3;:14;;:21;4091:5;4076:21;;;;;;;;;;;4069:28;;;4119:4;4112:11;;;;;;;3042:1135;4161:5;4154:12;;;2815:1368;;;;;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;2241:406:4:-;2304:4;2325:21;2335:3;2340:5;2325:9;:21::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;4264:129::-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1133:117::-;1242:1;1239;1232:12;1379:77;1416:7;1445:5;1434:16;;1379:77;;;:::o;1462:122::-;1535:24;1553:5;1535:24;:::i;:::-;1528:5;1525:35;1515:63;;1574:1;1571;1564:12;1515:63;1462:122;:::o;1590:139::-;1636:5;1674:6;1661:20;1652:29;;1690:33;1717:5;1690:33;:::i;:::-;1590:139;;;;:::o;1735:474::-;1803:6;1811;1860:2;1848:9;1839:7;1835:23;1831:32;1828:119;;;1866:79;;:::i;:::-;1828:119;1986:1;2011:53;2056:7;2047:6;2036:9;2032:22;2011:53;:::i;:::-;2001:63;;1957:117;2113:2;2139:53;2184:7;2175:6;2164:9;2160:22;2139:53;:::i;:::-;2129:63;;2084:118;1735:474;;;;;:::o;2215:118::-;2302:24;2320:5;2302:24;:::i;:::-;2297:3;2290:37;2215:118;;:::o;2339:222::-;2432:4;2470:2;2459:9;2455:18;2447:26;;2483:71;2551:1;2540:9;2536:17;2527:6;2483:71;:::i;:::-;2339:222;;;;:::o;2567:96::-;2604:7;2633:24;2651:5;2633:24;:::i;:::-;2622:35;;2567:96;;;:::o;2669:118::-;2756:24;2774:5;2756:24;:::i;:::-;2751:3;2744:37;2669:118;;:::o;2793:222::-;2886:4;2924:2;2913:9;2909:18;2901:26;;2937:71;3005:1;2994:9;2990:17;2981:6;2937:71;:::i;:::-;2793:222;;;;:::o;3021:122::-;3094:24;3112:5;3094:24;:::i;:::-;3087:5;3084:35;3074:63;;3133:1;3130;3123:12;3074:63;3021:122;:::o;3149:139::-;3195:5;3233:6;3220:20;3211:29;;3249:33;3276:5;3249:33;:::i;:::-;3149:139;;;;:::o;3294:329::-;3353:6;3402:2;3390:9;3381:7;3377:23;3373:32;3370:119;;;3408:79;;:::i;:::-;3370:119;3528:1;3553:53;3598:7;3589:6;3578:9;3574:22;3553:53;:::i;:::-;3543:63;;3499:117;3294:329;;;;:::o;3629:136::-;3718:6;3752:5;3746:12;3736:22;;3629:136;;;:::o;3771:206::-;3892:11;3926:6;3921:3;3914:19;3966:4;3961:3;3957:14;3942:29;;3771:206;;;;:::o;3983:154::-;4072:4;4095:3;4087:11;;4125:4;4120:3;4116:14;4108:22;;3983:154;;;:::o;4143:108::-;4220:24;4238:5;4220:24;:::i;:::-;4215:3;4208:37;4143:108;;:::o;4325:507::-;4456:4;4451:3;4447:14;4551:4;4544:5;4540:16;4534:23;4570:63;4627:4;4622:3;4618:14;4604:12;4570:63;:::i;:::-;4471:172;4733:4;4726:5;4722:16;4716:23;4752:63;4809:4;4804:3;4800:14;4786:12;4752:63;:::i;:::-;4653:172;4425:407;4325:507;;:::o;4838:267::-;4951:10;4972:90;5058:3;5050:6;4972:90;:::i;:::-;5094:4;5089:3;5085:14;5071:28;;4838:267;;;;:::o;5111:135::-;5203:4;5235;5230:3;5226:14;5218:22;;5111:135;;;:::o;5324:908::-;5487:3;5516:76;5586:5;5516:76;:::i;:::-;5608:108;5709:6;5704:3;5608:108;:::i;:::-;5601:115;;5740:78;5812:5;5740:78;:::i;:::-;5841:7;5872:1;5857:350;5882:6;5879:1;5876:13;5857:350;;;5958:6;5952:13;5985:107;6088:3;6073:13;5985:107;:::i;:::-;5978:114;;6115:82;6190:6;6115:82;:::i;:::-;6105:92;;5917:290;5904:1;5901;5897:9;5892:14;;5857:350;;;5861:14;6223:3;6216:10;;5492:740;;;5324:908;;;;:::o;6238:461::-;6425:4;6463:2;6452:9;6448:18;6440:26;;6512:9;6506:4;6502:20;6498:1;6487:9;6483:17;6476:47;6540:152;6687:4;6678:6;6540:152;:::i;:::-;6532:160;;6238:461;;;;:::o;6705:180::-;6753:77;6750:1;6743:88;6850:4;6847:1;6840:15;6874:4;6871:1;6864:15;6891:180;6939:77;6936:1;6929:88;7036:4;7033:1;7026:15;7060:4;7057:1;7050:15;7077:191;7117:3;7136:20;7154:1;7136:20;:::i;:::-;7131:25;;7170:20;7188:1;7170:20;:::i;:::-;7165:25;;7213:1;7210;7206:9;7199:16;;7234:3;7231:1;7228:10;7225:36;;;7241:18;;:::i;:::-;7225:36;7077:191;;;;:::o;7274:332::-;7395:4;7433:2;7422:9;7418:18;7410:26;;7446:71;7514:1;7503:9;7499:17;7490:6;7446:71;:::i;:::-;7527:72;7595:2;7584:9;7580:18;7571:6;7527:72;:::i;:::-;7274:332;;;;;:::o;7612:90::-;7646:7;7689:5;7682:13;7675:21;7664:32;;7612:90;;;:::o;7708:116::-;7778:21;7793:5;7778:21;:::i;:::-;7771:5;7768:32;7758:60;;7814:1;7811;7804:12;7758:60;7708:116;:::o;7830:137::-;7884:5;7915:6;7909:13;7900:22;;7931:30;7955:5;7931:30;:::i;:::-;7830:137;;;;:::o;7973:345::-;8040:6;8089:2;8077:9;8068:7;8064:23;8060:32;8057:119;;;8095:79;;:::i;:::-;8057:119;8215:1;8240:61;8293:7;8284:6;8273:9;8269:22;8240:61;:::i;:::-;8230:71;;8186:125;7973:345;;;;:::o;8324:169::-;8408:11;8442:6;8437:3;8430:19;8482:4;8477:3;8473:14;8458:29;;8324:169;;;;:::o;8499:165::-;8639:17;8635:1;8627:6;8623:14;8616:41;8499:165;:::o;8670:366::-;8812:3;8833:67;8897:2;8892:3;8833:67;:::i;:::-;8826:74;;8909:93;8998:3;8909:93;:::i;:::-;9027:2;9022:3;9018:12;9011:19;;8670:366;;;:::o;9042:419::-;9208:4;9246:2;9235:9;9231:18;9223:26;;9295:9;9289:4;9285:20;9281:1;9270:9;9266:17;9259:47;9323:131;9449:4;9323:131;:::i;:::-;9315:139;;9042:419;;;:::o;9467:194::-;9507:4;9527:20;9545:1;9527:20;:::i;:::-;9522:25;;9561:20;9579:1;9561:20;:::i;:::-;9556:25;;9605:1;9602;9598:9;9590:17;;9629:1;9623:4;9620:11;9617:37;;;9634:18;;:::i;:::-;9617:37;9467:194;;;;:::o;9667:410::-;9707:7;9730:20;9748:1;9730:20;:::i;:::-;9725:25;;9764:20;9782:1;9764:20;:::i;:::-;9759:25;;9819:1;9816;9812:9;9841:30;9859:11;9841:30;:::i;:::-;9830:41;;10020:1;10011:7;10007:15;10004:1;10001:22;9981:1;9974:9;9954:83;9931:139;;10050:18;;:::i;:::-;9931:139;9715:362;9667:410;;;;:::o;10083:250::-;10223:34;10219:1;10211:6;10207:14;10200:58;10292:33;10287:2;10279:6;10275:15;10268:58;10083:250;:::o;10339:366::-;10481:3;10502:67;10566:2;10561:3;10502:67;:::i;:::-;10495:74;;10578:93;10667:3;10578:93;:::i;:::-;10696:2;10691:3;10687:12;10680:19;;10339:366;;;:::o;10711:419::-;10877:4;10915:2;10904:9;10900:18;10892:26;;10964:9;10958:4;10954:20;10950:1;10939:9;10935:17;10928:47;10992:131;11118:4;10992:131;:::i;:::-;10984:139;;10711:419;;;:::o;11136:179::-;11276:31;11272:1;11264:6;11260:14;11253:55;11136:179;:::o;11321:366::-;11463:3;11484:67;11548:2;11543:3;11484:67;:::i;:::-;11477:74;;11560:93;11649:3;11560:93;:::i;:::-;11678:2;11673:3;11669:12;11662:19;;11321:366;;;:::o;11693:419::-;11859:4;11897:2;11886:9;11882:18;11874:26;;11946:9;11940:4;11936:20;11932:1;11921:9;11917:17;11910:47;11974:131;12100:4;11974:131;:::i;:::-;11966:139;;11693:419;;;:::o;12118:442::-;12267:4;12305:2;12294:9;12290:18;12282:26;;12318:71;12386:1;12375:9;12371:17;12362:6;12318:71;:::i;:::-;12399:72;12467:2;12456:9;12452:18;12443:6;12399:72;:::i;:::-;12481;12549:2;12538:9;12534:18;12525:6;12481:72;:::i;:::-;12118:442;;;;;;:::o;12566:181::-;12706:33;12702:1;12694:6;12690:14;12683:57;12566:181;:::o;12753:366::-;12895:3;12916:67;12980:2;12975:3;12916:67;:::i;:::-;12909:74;;12992:93;13081:3;12992:93;:::i;:::-;13110:2;13105:3;13101:12;13094:19;;12753:366;;;:::o;13125:419::-;13291:4;13329:2;13318:9;13314:18;13306:26;;13378:9;13372:4;13368:20;13364:1;13353:9;13349:17;13342:47;13406:131;13532:4;13406:131;:::i;:::-;13398:139;;13125:419;;;:::o;13550:180::-;13598:77;13595:1;13588:88;13695:4;13692:1;13685:15;13719:4;13716:1;13709:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1015000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getStake()": "infinite",
								"getTotalStake()": "2432",
								"owner()": "2559",
								"renounceOwnership()": "infinite",
								"stake(uint256,uint256)": "infinite",
								"stakingToken()": "infinite",
								"totalStaked()": "2447",
								"transferOwnership(address)": "infinite",
								"withdraw()": "infinite"
							},
							"internal": {
								"getUserStake(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 298,
									"end": 3039,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 298,
									"end": 3039,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 298,
									"end": 3039,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 939,
									"end": 1038,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 981,
									"end": 991,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1018,
									"end": 1031,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1015,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1003,
									"end": 1015,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1031,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1038,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 298,
									"end": 3039,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 298,
									"end": 3039,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1138,
									"end": 1147,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1136,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1153,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1156,
									"end": 1235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1362,
									"end": 1368,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 1360,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1369,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1301,
									"end": 1379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1247,
									"end": 1389,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1507,
									"end": 1512,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1489,
									"end": 1513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1484,
									"end": 1487,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1514,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1402,
									"end": 1520,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1619,
									"end": 1623,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1657,
									"end": 1659,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1646,
									"end": 1655,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1660,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1660,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1738,
									"end": 1739,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1727,
									"end": 1736,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1723,
									"end": 1740,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1714,
									"end": 1720,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1670,
									"end": 1741,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 298,
									"end": 3039,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 298,
									"end": 3039,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 298,
									"end": 3039,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 298,
									"end": 3039,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 298,
									"end": 3039,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 298,
									"end": 3039,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 3039,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 298,
									"end": 3039,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 3039,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e808f709e868c54b84fd04c18148b7c91419c21e0144e351131507221dcfe49564736f6c634300081a0033",
									".code": [
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "7BC74225"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "7BC74225"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "817B1CD2"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "FC0E3D90"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "3CCFD60B"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "72F702F3"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "7B0472F0"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 298,
											"end": 3039,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 2711,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1809,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1809,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1809,
											"end": 2711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 2711,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1809,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 2711,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 490,
											"end": 516,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 490,
											"end": 516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 490,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 490,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 490,
											"end": 516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 516,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 490,
											"end": 516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 490,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 490,
											"end": 516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 516,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1048,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1048,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2947,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2947,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 523,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 523,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2717,
											"end": 2820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2717,
											"end": 2820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 2711,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1809,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1888,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1910,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1888,
											"end": 1911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1888,
											"end": 1911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 1911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 1911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 1911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1911,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1995,
											"end": 2005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 2398,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1990,
											"end": 2398,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2020,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2027,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2008,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2027,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 2398,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1990,
											"end": 2398,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2061,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2063,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2052,
											"end": 2064,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2077,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2081,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2114,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2114,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2052,
											"end": 2114,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2114,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2113,
											"end": 2114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2094,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2096,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2085,
											"end": 2097,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2097,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2110,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2110,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2114,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2114,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2052,
											"end": 2114,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2248,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2048,
											"end": 2248,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2159,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2161,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2150,
											"end": 2162,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2175,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2175,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2175,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2175,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2133,
											"end": 2175,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2175,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2175,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2133,
											"end": 2175,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2175,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2133,
											"end": 2175,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2175,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2175,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2222,
											"end": 2233,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2222,
											"end": 2233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2222,
											"end": 2233,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2233,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2222,
											"end": 2233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2233,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2193,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2215,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2193,
											"end": 2216,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2193,
											"end": 2216,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2216,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2216,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2216,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2216,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2216,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2216,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2216,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2218,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2193,
											"end": 2219,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2219,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2248,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2048,
											"end": 2248,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2276,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2278,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2267,
											"end": 2279,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2279,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2292,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2292,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2296,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2297,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2310,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2311,
											"end": 2312,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2301,
											"end": 2313,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2326,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2326,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2330,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2388,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2261,
											"end": 2388,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2369,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2349,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2261,
											"end": 2388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2032,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2032,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2029,
											"end": 2032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2032,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1990,
											"end": 2398,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 2398,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1990,
											"end": 2398,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 2398,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2429,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2407,
											"end": 2479,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2457,
											"end": 2467,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2444,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2444,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2468,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2407,
											"end": 2479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2512,
											"end": 2524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2524,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2524,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2524,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2512,
											"end": 2524,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2524,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2524,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2512,
											"end": 2524,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2512,
											"end": 2533,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2534,
											"end": 2544,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 2559,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2512,
											"end": 2560,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2560,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2512,
											"end": 2560,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2512,
											"end": 2560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2585,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2570,
											"end": 2605,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2570,
											"end": 2605,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2616,
											"end": 2627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2616,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2616,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2616,
											"end": 2644,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2644,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2616,
											"end": 2644,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2678,
											"end": 2688,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 2690,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2668,
											"end": 2704,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2704,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 2711,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 2711,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 2711,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 2711,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 2711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 490,
											"end": 516,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 490,
											"end": 516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 490,
											"end": 516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 490,
											"end": 516,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 490,
											"end": 516,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1158,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1190,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1190,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1148,
											"end": 1190,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1190,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 402,
											"end": 410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1E13380"
										},
										{
											"begin": 462,
											"end": 463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 462,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 462,
											"end": 482,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 462,
											"end": 482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 462,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 462,
											"end": 482,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 462,
											"end": 482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 462,
											"end": 482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1168,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1190,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1190,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1190,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1148,
											"end": 1190,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1127,
											"end": 1280,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1127,
											"end": 1280,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1317,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1311,
											"end": 1321,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1290,
											"end": 1377,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1290,
											"end": 1377,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1411,
											"end": 1450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1411,
											"end": 1450,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1450,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1411,
											"end": 1450,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1411,
											"end": 1450,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1450,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1417,
											"end": 1423,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1450,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1450,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1411,
											"end": 1450,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1449,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1425,
											"end": 1440,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1425,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1425,
											"end": 1449,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1425,
											"end": 1449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1425,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1425,
											"end": 1449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1425,
											"end": 1449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1425,
											"end": 1449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1450,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1450,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1450,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1450,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1460,
											"end": 1483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1482,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1460,
											"end": 1483,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1460,
											"end": 1483,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1483,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1483,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1460,
											"end": 1483,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1483,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1483,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1483,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1460,
											"end": 1483,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1483,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 1523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1534,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1542,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1542,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1542,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1547,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1594,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1508,
											"end": 1594,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1572,
											"end": 1582,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1562,
											"end": 1571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1562,
											"end": 1571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1562,
											"end": 1583,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1583,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1583,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1562,
											"end": 1583,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1583,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1594,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1508,
											"end": 1594,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1619,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1619,
											"end": 1631,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1619,
											"end": 1631,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1619,
											"end": 1644,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1645,
											"end": 1655,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1665,
											"end": 1669,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1678,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1619,
											"end": 1679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1679,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1619,
											"end": 1679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1619,
											"end": 1679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1679,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1704,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1689,
											"end": 1724,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1689,
											"end": 1724,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1755,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1734,
											"end": 1745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1734,
											"end": 1755,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1777,
											"end": 1787,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 1789,
											"end": 1795,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1770,
											"end": 1796,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1796,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1803,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1803,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3029,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3018,
											"end": 3029,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3029,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 3036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 523,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2757,
											"end": 2771,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2790,
											"end": 2801,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2812,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2813,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8607,
											"end": 8763,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 8607,
											"end": 8763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8680,
											"end": 8684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8703,
											"end": 8756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 8711,
											"end": 8714,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8711,
											"end": 8721,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8747,
											"end": 8752,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8731,
											"end": 8754,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8731,
											"end": 8754,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 8710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 8703,
											"end": 8756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 8756,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 8703,
											"end": 8756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8696,
											"end": 8756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8696,
											"end": 8756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8607,
											"end": 8763,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8607,
											"end": 8763,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8607,
											"end": 8763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8607,
											"end": 8763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8607,
											"end": 8763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8289,
											"end": 8439,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8289,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8359,
											"end": 8363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8382,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 8387,
											"end": 8390,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8387,
											"end": 8397,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8387,
											"end": 8397,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8423,
											"end": 8428,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8407,
											"end": 8430,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8407,
											"end": 8430,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8399,
											"end": 8431,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8431,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 8382,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 8382,
											"end": 8432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8382,
											"end": 8432,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 8382,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8375,
											"end": 8432,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8375,
											"end": 8432,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8289,
											"end": 8439,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8289,
											"end": 8439,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8289,
											"end": 8439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8289,
											"end": 8439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8289,
											"end": 8439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3007,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3013,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3030,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3031,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2991,
											"end": 3031,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2991,
											"end": 3031,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3054,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3046,
											"end": 3059,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3042,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3042,
											"end": 4177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3434,
											"end": 3442,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3434,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3434,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3460,
											"end": 3477,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 3502,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3483,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3480,
											"end": 3502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3544,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3521,
											"end": 3531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3521,
											"end": 3544,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3517,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3517,
											"end": 3895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3581,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3587,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3584,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3584,
											"end": 3606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3740,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3708,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3716,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3717,
											"end": 3727,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3705,
											"end": 3728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3728,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3740,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3740,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3880,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3847,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3858,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3844,
											"end": 3858,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3868,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3880,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3546,
											"end": 3895,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3517,
											"end": 3895,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3517,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3976,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3984,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3973,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4079,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4096,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4069,
											"end": 4097,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4069,
											"end": 4097,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4119,
											"end": 4123,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3042,
											"end": 4177,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3042,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 4183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 4183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2304,
											"end": 2308,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2335,
											"end": 2338,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2345,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2325,
											"end": 2346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2365,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2373,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2373,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2384,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2547,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2555,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2523,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2540,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2587,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2630,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4386,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4363,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4380,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4353,
											"end": 4386,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4353,
											"end": 4386,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4264,
											"end": 4393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 485,
											"end": 625,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 582,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 582,
											"end": 619,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 569,
											"end": 619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 569,
											"end": 619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 631,
											"end": 790,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 631,
											"end": 790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 732,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 732,
											"end": 783,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 732,
											"end": 783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 720,
											"end": 784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 631,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 918,
											"end": 944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 918,
											"end": 944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 954,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1243,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1240,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1450,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1379,
											"end": 1456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1553,
											"end": 1558,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1535,
											"end": 1559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1533,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1560,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1564,
											"end": 1576,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1681,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1690,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1590,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1817,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1860,
											"end": 1862,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 1857,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1858,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1863,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1866,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1866,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1945,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1866,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1828,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 1987,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2056,
											"end": 2063,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2047,
											"end": 2053,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2011,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2011,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2001,
											"end": 2064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2115,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2184,
											"end": 2191,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2173,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2139,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2139,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2139,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2139,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 2209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 2209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2320,
											"end": 2325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2302,
											"end": 2326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2300,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2472,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2468,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2447,
											"end": 2473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2447,
											"end": 2473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2549,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2553,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2533,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2483,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2604,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2633,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2633,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2787,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2669,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2756,
											"end": 2780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2780,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2756,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2754,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2781,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2926,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 2922,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2909,
											"end": 2927,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3005,
											"end": 3006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 3003,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2990,
											"end": 3007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2937,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 3008,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2937,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 3015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3143,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3021,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3112,
											"end": 3117,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3094,
											"end": 3118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3092,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3119,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3074,
											"end": 3137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3133,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3131,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3137,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3074,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3200,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 3240,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3211,
											"end": 3240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3211,
											"end": 3240,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3276,
											"end": 3281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3249,
											"end": 3282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3282,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3249,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3623,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3294,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3359,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3388,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3400,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3373,
											"end": 3405,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3489,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3370,
											"end": 3489,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3408,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3408,
											"end": 3487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3487,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3408,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3489,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3370,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3529,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3595,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3578,
											"end": 3587,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3553,
											"end": 3606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3606,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3553,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3543,
											"end": 3606,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3543,
											"end": 3606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3623,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3623,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3765,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3629,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3752,
											"end": 3757,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3746,
											"end": 3758,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3765,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3765,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3765,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3977,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3771,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3932,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3921,
											"end": 3924,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3933,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3970,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3961,
											"end": 3964,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3971,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3971,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3977,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4137,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3983,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4098,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4098,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4129,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4120,
											"end": 4123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4137,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4251,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4143,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4220,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4238,
											"end": 4243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4220,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 4220,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4220,
											"end": 4244,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4220,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4218,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4208,
											"end": 4245,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4832,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4325,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4456,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4451,
											"end": 4454,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4555,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4544,
											"end": 4549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4540,
											"end": 4556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4534,
											"end": 4557,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4622,
											"end": 4625,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4618,
											"end": 4632,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4570,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4633,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 4570,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4733,
											"end": 4737,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4726,
											"end": 4731,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4738,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4716,
											"end": 4739,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4752,
											"end": 4815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 4809,
											"end": 4813,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4804,
											"end": 4807,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4752,
											"end": 4815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4752,
											"end": 4815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4752,
											"end": 4815,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 4752,
											"end": 4815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4653,
											"end": 4825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 5105,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4838,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4961,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4972,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 5058,
											"end": 5061,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5050,
											"end": 5056,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4972,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4972,
											"end": 5062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4972,
											"end": 5062,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 4972,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5094,
											"end": 5098,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5089,
											"end": 5092,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5085,
											"end": 5099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 5105,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 5105,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 5105,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 5105,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 5105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5246,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5111,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 5207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5235,
											"end": 5239,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5233,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5226,
											"end": 5240,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5240,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5324,
											"end": 6232,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5324,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5490,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5586,
											"end": 5591,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5516,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 5516,
											"end": 5592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5516,
											"end": 5592,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5516,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5608,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5709,
											"end": 5715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5704,
											"end": 5707,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5608,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 5608,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5608,
											"end": 5716,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5608,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5601,
											"end": 5716,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5601,
											"end": 5716,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5740,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 5812,
											"end": 5817,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5740,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 5740,
											"end": 5818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5740,
											"end": 5818,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 5740,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5841,
											"end": 5848,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5857,
											"end": 6207,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5857,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5879,
											"end": 5880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5876,
											"end": 5889,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6207,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5857,
											"end": 6207,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5952,
											"end": 5965,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 6088,
											"end": 6091,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 5985,
											"end": 6092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6092,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 5985,
											"end": 6092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5978,
											"end": 6092,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 5978,
											"end": 6092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6115,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 6190,
											"end": 6196,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6115,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 6115,
											"end": 6197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6115,
											"end": 6197,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 6115,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6105,
											"end": 6197,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6105,
											"end": 6197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5917,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5901,
											"end": 5902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5897,
											"end": 5906,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5892,
											"end": 5906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5892,
											"end": 5906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5857,
											"end": 6207,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6207,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5857,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6226,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6216,
											"end": 6226,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6216,
											"end": 6226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 6232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 6232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 6232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5324,
											"end": 6232,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5324,
											"end": 6232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5324,
											"end": 6232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5324,
											"end": 6232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5324,
											"end": 6232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6699,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 6238,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6465,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6452,
											"end": 6461,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6448,
											"end": 6466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6512,
											"end": 6521,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6510,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6522,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6498,
											"end": 6499,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6487,
											"end": 6496,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6500,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6476,
											"end": 6523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6540,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6684,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6540,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 6540,
											"end": 6692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6540,
											"end": 6692,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6540,
											"end": 6692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6699,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6699,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6705,
											"end": 6885,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 6705,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6753,
											"end": 6830,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6750,
											"end": 6751,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6743,
											"end": 6831,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6850,
											"end": 6854,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 6847,
											"end": 6848,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6874,
											"end": 6878,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6871,
											"end": 6872,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6879,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 7071,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 6891,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6939,
											"end": 7016,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6936,
											"end": 6937,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6929,
											"end": 7017,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7040,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 7033,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7026,
											"end": 7041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7060,
											"end": 7064,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7057,
											"end": 7058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7065,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7077,
											"end": 7268,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7077,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 7136,
											"end": 7156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7131,
											"end": 7156,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7131,
											"end": 7156,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 7188,
											"end": 7189,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 7170,
											"end": 7190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7190,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 7170,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7190,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7210,
											"end": 7211,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7206,
											"end": 7215,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7199,
											"end": 7215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7237,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7231,
											"end": 7232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7228,
											"end": 7238,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7261,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 7225,
											"end": 7261,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 7241,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 7241,
											"end": 7259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7259,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 7241,
											"end": 7259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7261,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 7225,
											"end": 7261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7077,
											"end": 7268,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7077,
											"end": 7268,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7077,
											"end": 7268,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7077,
											"end": 7268,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7077,
											"end": 7268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7274,
											"end": 7606,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 7274,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7395,
											"end": 7399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7433,
											"end": 7435,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7422,
											"end": 7431,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7418,
											"end": 7436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 7514,
											"end": 7515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7512,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7490,
											"end": 7496,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 7446,
											"end": 7517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7517,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 7446,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7527,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 7595,
											"end": 7597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7584,
											"end": 7593,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7580,
											"end": 7598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7571,
											"end": 7577,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7527,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 7527,
											"end": 7599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7527,
											"end": 7599,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 7527,
											"end": 7599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7274,
											"end": 7606,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7274,
											"end": 7606,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7274,
											"end": 7606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7274,
											"end": 7606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7274,
											"end": 7606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7274,
											"end": 7606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7612,
											"end": 7702,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 7612,
											"end": 7702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7646,
											"end": 7653,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7689,
											"end": 7694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7682,
											"end": 7695,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7675,
											"end": 7696,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7664,
											"end": 7696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7664,
											"end": 7696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7612,
											"end": 7702,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7612,
											"end": 7702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7612,
											"end": 7702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7612,
											"end": 7702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7708,
											"end": 7824,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 7708,
											"end": 7824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7778,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 7793,
											"end": 7798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7778,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 7778,
											"end": 7799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7778,
											"end": 7799,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 7778,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7768,
											"end": 7800,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7758,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 7758,
											"end": 7818,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7814,
											"end": 7815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7804,
											"end": 7816,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7758,
											"end": 7818,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 7758,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7708,
											"end": 7824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7708,
											"end": 7824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7830,
											"end": 7967,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 7830,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7884,
											"end": 7889,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7915,
											"end": 7921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7909,
											"end": 7922,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 7955,
											"end": 7960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 7931,
											"end": 7961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7830,
											"end": 7967,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7830,
											"end": 7967,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7830,
											"end": 7967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7830,
											"end": 7967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7830,
											"end": 7967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7973,
											"end": 8318,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 7973,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8040,
											"end": 8046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8089,
											"end": 8091,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8077,
											"end": 8086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8068,
											"end": 8075,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8064,
											"end": 8087,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8092,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8057,
											"end": 8176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8057,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 8057,
											"end": 8176,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 8095,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 8095,
											"end": 8174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8174,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 8095,
											"end": 8174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8057,
											"end": 8176,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 8057,
											"end": 8176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8215,
											"end": 8216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8240,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 8293,
											"end": 8300,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8290,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8273,
											"end": 8282,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8269,
											"end": 8291,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8240,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 8240,
											"end": 8301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8240,
											"end": 8301,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 8240,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8230,
											"end": 8301,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8230,
											"end": 8301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8311,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7973,
											"end": 8318,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7973,
											"end": 8318,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7973,
											"end": 8318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7973,
											"end": 8318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7973,
											"end": 8318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8324,
											"end": 8493,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8324,
											"end": 8493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8408,
											"end": 8419,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8430,
											"end": 8449,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8482,
											"end": 8486,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8473,
											"end": 8487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8458,
											"end": 8487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8458,
											"end": 8487,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8324,
											"end": 8493,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8324,
											"end": 8493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8324,
											"end": 8493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8324,
											"end": 8493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8324,
											"end": 8493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8499,
											"end": 8664,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 8499,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 8635,
											"end": 8636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8627,
											"end": 8633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8623,
											"end": 8637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8657,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8499,
											"end": 8664,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8499,
											"end": 8664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 9036,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 8670,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8812,
											"end": 8815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8833,
											"end": 8900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 8897,
											"end": 8899,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 8892,
											"end": 8895,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8833,
											"end": 8900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8833,
											"end": 8900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8833,
											"end": 8900,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 8833,
											"end": 8900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 8900,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 8900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8909,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 8998,
											"end": 9001,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8909,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 8909,
											"end": 9002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8909,
											"end": 9002,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 8909,
											"end": 9002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9027,
											"end": 9029,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9022,
											"end": 9025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9018,
											"end": 9030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9011,
											"end": 9030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9011,
											"end": 9030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 9036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 9036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 9036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9042,
											"end": 9461,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 9042,
											"end": 9461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9208,
											"end": 9212,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9246,
											"end": 9248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9235,
											"end": 9244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9223,
											"end": 9249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9223,
											"end": 9249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9295,
											"end": 9304,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9289,
											"end": 9293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9285,
											"end": 9305,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9281,
											"end": 9282,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9270,
											"end": 9279,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9266,
											"end": 9283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9259,
											"end": 9306,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9323,
											"end": 9454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 9449,
											"end": 9453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9323,
											"end": 9454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 9323,
											"end": 9454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9323,
											"end": 9454,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 9323,
											"end": 9454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9315,
											"end": 9454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9042,
											"end": 9461,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9042,
											"end": 9461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9042,
											"end": 9461,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9042,
											"end": 9461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9661,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 9467,
											"end": 9661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9507,
											"end": 9511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9527,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 9545,
											"end": 9546,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9527,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 9527,
											"end": 9547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9527,
											"end": 9547,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 9527,
											"end": 9547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9522,
											"end": 9547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9522,
											"end": 9547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9561,
											"end": 9581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 9579,
											"end": 9580,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9561,
											"end": 9581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 9561,
											"end": 9581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9561,
											"end": 9581,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 9561,
											"end": 9581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9556,
											"end": 9581,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9556,
											"end": 9581,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 9606,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9602,
											"end": 9603,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9598,
											"end": 9607,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9590,
											"end": 9607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9590,
											"end": 9607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9629,
											"end": 9630,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9623,
											"end": 9627,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9631,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9617,
											"end": 9654,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9617,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 9617,
											"end": 9654,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9634,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 9634,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 9634,
											"end": 9652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9634,
											"end": 9652,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 9634,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9617,
											"end": 9654,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 9617,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9661,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 10077,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 9667,
											"end": 10077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9707,
											"end": 9714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9730,
											"end": 9750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 9748,
											"end": 9749,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9730,
											"end": 9750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 9730,
											"end": 9750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9730,
											"end": 9750,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 9730,
											"end": 9750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9725,
											"end": 9750,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9725,
											"end": 9750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9764,
											"end": 9784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 9782,
											"end": 9783,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9764,
											"end": 9784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 9764,
											"end": 9784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9764,
											"end": 9784,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 9764,
											"end": 9784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9784,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9819,
											"end": 9820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9816,
											"end": 9817,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9812,
											"end": 9821,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9841,
											"end": 9871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9841,
											"end": 9871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 9841,
											"end": 9871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9841,
											"end": 9871,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 9841,
											"end": 9871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9830,
											"end": 9871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9830,
											"end": 9871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10020,
											"end": 10021,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10011,
											"end": 10018,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10007,
											"end": 10022,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10004,
											"end": 10005,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10001,
											"end": 10023,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9981,
											"end": 9982,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9974,
											"end": 9983,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9954,
											"end": 10037,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9931,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 9931,
											"end": 10070,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10050,
											"end": 10068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 10050,
											"end": 10068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 10050,
											"end": 10068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10050,
											"end": 10068,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 10050,
											"end": 10068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9931,
											"end": 10070,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 9931,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9715,
											"end": 10077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 10077,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 10077,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 10077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 10077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 10077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10333,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 10083,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10223,
											"end": 10257,
											"name": "PUSH",
											"source": 6,
											"value": "5374616B696E6720706572696F642063616E6E6F742065786365656420342079"
										},
										{
											"begin": 10219,
											"end": 10220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10207,
											"end": 10221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10258,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10292,
											"end": 10325,
											"name": "PUSH",
											"source": 6,
											"value": "6561727320616E64206D7573742062652067726561746572207468616E203000"
										},
										{
											"begin": 10287,
											"end": 10289,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10279,
											"end": 10285,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10290,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10268,
											"end": 10326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10339,
											"end": 10705,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 10339,
											"end": 10705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10481,
											"end": 10484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10502,
											"end": 10569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 10566,
											"end": 10568,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 10561,
											"end": 10564,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10502,
											"end": 10569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 10502,
											"end": 10569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10502,
											"end": 10569,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 10502,
											"end": 10569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10495,
											"end": 10569,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10495,
											"end": 10569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10578,
											"end": 10671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 10667,
											"end": 10670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10578,
											"end": 10671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 10578,
											"end": 10671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10578,
											"end": 10671,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 10578,
											"end": 10671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10698,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10691,
											"end": 10694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10680,
											"end": 10699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10680,
											"end": 10699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10339,
											"end": 10705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10339,
											"end": 10705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10339,
											"end": 10705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10339,
											"end": 10705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10711,
											"end": 11130,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 10711,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10877,
											"end": 10881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10915,
											"end": 10917,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10904,
											"end": 10913,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10900,
											"end": 10918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10892,
											"end": 10918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10892,
											"end": 10918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10964,
											"end": 10973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10958,
											"end": 10962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10954,
											"end": 10974,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10950,
											"end": 10951,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10939,
											"end": 10948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10935,
											"end": 10952,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10928,
											"end": 10975,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10992,
											"end": 11123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 11118,
											"end": 11122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10992,
											"end": 11123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 10992,
											"end": 11123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10992,
											"end": 11123,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 10992,
											"end": 11123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10984,
											"end": 11123,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10984,
											"end": 11123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10711,
											"end": 11130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10711,
											"end": 11130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10711,
											"end": 11130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10711,
											"end": 11130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11315,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 11136,
											"end": 11315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11276,
											"end": 11307,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 11272,
											"end": 11273,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11264,
											"end": 11270,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11260,
											"end": 11274,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11253,
											"end": 11308,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11687,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 11321,
											"end": 11687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11463,
											"end": 11466,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11484,
											"end": 11551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 11548,
											"end": 11550,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 11543,
											"end": 11546,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11484,
											"end": 11551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 11484,
											"end": 11551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11484,
											"end": 11551,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 11484,
											"end": 11551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11477,
											"end": 11551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11477,
											"end": 11551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11560,
											"end": 11653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 11649,
											"end": 11652,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11560,
											"end": 11653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 11560,
											"end": 11653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11560,
											"end": 11653,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 11560,
											"end": 11653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11678,
											"end": 11680,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11673,
											"end": 11676,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11669,
											"end": 11681,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11662,
											"end": 11681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11662,
											"end": 11681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11687,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11687,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11687,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11693,
											"end": 12112,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 11693,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11859,
											"end": 11863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11897,
											"end": 11899,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11886,
											"end": 11895,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11882,
											"end": 11900,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11874,
											"end": 11900,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11874,
											"end": 11900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11946,
											"end": 11955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11940,
											"end": 11944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11936,
											"end": 11956,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11932,
											"end": 11933,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11921,
											"end": 11930,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11917,
											"end": 11934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11910,
											"end": 11957,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11974,
											"end": 12105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 12100,
											"end": 12104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11974,
											"end": 12105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 11974,
											"end": 12105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11974,
											"end": 12105,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 11974,
											"end": 12105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11966,
											"end": 12105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11966,
											"end": 12105,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11693,
											"end": 12112,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11693,
											"end": 12112,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11693,
											"end": 12112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11693,
											"end": 12112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12118,
											"end": 12560,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 12118,
											"end": 12560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12267,
											"end": 12271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12305,
											"end": 12307,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 12294,
											"end": 12303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12290,
											"end": 12308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12282,
											"end": 12308,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12282,
											"end": 12308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12318,
											"end": 12389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 12386,
											"end": 12387,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12375,
											"end": 12384,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12371,
											"end": 12388,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12368,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12318,
											"end": 12389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 12318,
											"end": 12389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12318,
											"end": 12389,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 12318,
											"end": 12389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12399,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 12467,
											"end": 12469,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12456,
											"end": 12465,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12452,
											"end": 12470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12443,
											"end": 12449,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12399,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 12399,
											"end": 12471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12399,
											"end": 12471,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 12399,
											"end": 12471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12481,
											"end": 12553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 12549,
											"end": 12551,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12538,
											"end": 12547,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12534,
											"end": 12552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12525,
											"end": 12531,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12481,
											"end": 12553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 12481,
											"end": 12553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12481,
											"end": 12553,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 12481,
											"end": 12553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12118,
											"end": 12560,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 12118,
											"end": 12560,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 12118,
											"end": 12560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12118,
											"end": 12560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12118,
											"end": 12560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12118,
											"end": 12560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12118,
											"end": 12560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12566,
											"end": 12747,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 12566,
											"end": 12747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12706,
											"end": 12739,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 12702,
											"end": 12703,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12694,
											"end": 12700,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12690,
											"end": 12704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12683,
											"end": 12740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12566,
											"end": 12747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12566,
											"end": 12747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12753,
											"end": 13119,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 12753,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12895,
											"end": 12898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12916,
											"end": 12983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 12980,
											"end": 12982,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 12975,
											"end": 12978,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12916,
											"end": 12983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 12916,
											"end": 12983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12916,
											"end": 12983,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 12916,
											"end": 12983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12909,
											"end": 12983,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12909,
											"end": 12983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12992,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 13081,
											"end": 13084,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12992,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 12992,
											"end": 13085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12992,
											"end": 13085,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 12992,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13110,
											"end": 13112,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13101,
											"end": 13113,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13094,
											"end": 13113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13094,
											"end": 13113,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12753,
											"end": 13119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12753,
											"end": 13119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12753,
											"end": 13119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12753,
											"end": 13119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13125,
											"end": 13544,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 13125,
											"end": 13544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13291,
											"end": 13295,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13329,
											"end": 13331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13318,
											"end": 13327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13314,
											"end": 13332,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13306,
											"end": 13332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13306,
											"end": 13332,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13378,
											"end": 13387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13372,
											"end": 13376,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13368,
											"end": 13388,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13364,
											"end": 13365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13353,
											"end": 13362,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13349,
											"end": 13366,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13342,
											"end": 13389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13406,
											"end": 13537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 13532,
											"end": 13536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13406,
											"end": 13537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 13406,
											"end": 13537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13406,
											"end": 13537,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 13406,
											"end": 13537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13398,
											"end": 13537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13398,
											"end": 13537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13125,
											"end": 13544,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13125,
											"end": 13544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13125,
											"end": 13544,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13125,
											"end": 13544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13550,
											"end": 13730,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 13550,
											"end": 13730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13598,
											"end": 13675,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13595,
											"end": 13596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13588,
											"end": 13676,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13695,
											"end": 13699,
											"name": "PUSH",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 13692,
											"end": 13693,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13685,
											"end": 13700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13719,
											"end": 13723,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13716,
											"end": 13717,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13709,
											"end": 13724,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"stack_contract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getStake()": "fc0e3d90",
							"getTotalStake()": "7bc74225",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stake(uint256,uint256)": "7b0472f0",
							"stakingToken()": "72f702f3",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawDate\",\"type\":\"uint256\"}],\"internalType\":\"struct StakingContract.Stake[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"stack_contract.sol\":\"StakingContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]},\"stack_contract.sol\":{\"keccak256\":\"0x5f1446647b6b86aaa02f18c452dd8c19af31622ffc451eed4375756f66126f4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69fd815654b69948a803ee72c2d72c583ddad54b2ee9796e7ab7b4f8fa19d19f\",\"dweb:/ipfs/QmcWJgPxeknST1PnwYQCSJaBVRbcstbGNcgqWuHjikbyeu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "stack_contract.sol:StakingContract",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "stack_contract.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 954,
								"contract": "stack_contract.sol:StakingContract",
								"label": "stakingToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)290"
							},
							{
								"astId": 956,
								"contract": "stack_contract.sol:StakingContract",
								"label": "totalStaked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 962,
								"contract": "stack_contract.sol:StakingContract",
								"label": "userStaking",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_array(t_struct(Stake)974_storage)dyn_storage)"
							},
							{
								"astId": 969,
								"contract": "stack_contract.sol:StakingContract",
								"label": "users",
								"offset": 0,
								"slot": "5",
								"type": "t_struct(AddressSet)646_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Stake)974_storage)dyn_storage": {
								"base": "t_struct(Stake)974_storage",
								"encoding": "dynamic_array",
								"label": "struct StakingContract.Stake[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)290": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(Stake)974_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingContract.Stake[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Stake)974_storage)dyn_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)646_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 645,
										"contract": "stack_contract.sol:StakingContract",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)331_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)331_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 326,
										"contract": "stack_contract.sol:StakingContract",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 330,
										"contract": "stack_contract.sol:StakingContract",
										"label": "_positions",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Stake)974_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.Stake",
								"members": [
									{
										"astId": 971,
										"contract": "stack_contract.sol:StakingContract",
										"label": "stakedAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 973,
										"contract": "stack_contract.sol:StakingContract",
										"label": "withdrawDate",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 321,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 320,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								320
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 224,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 233,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 290,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 290,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 290,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 290,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 290,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 290,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 291,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								224,
								233
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 297,
												"id": 300,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 320,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 307,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 306,
												"id": 309,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 320,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 320,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "205:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 323,
								"nodeType": "StructuredDocumentation",
								"src": "231:1098:4",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "EnumerableSet",
							"nameLocation": "1338:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 331,
									"members": [
										{
											"constant": false,
											"id": 326,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1862:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 331,
											"src": "1852:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 325,
												"nodeType": "ArrayTypeName",
												"src": "1852:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 330,
											"mutability": "mutable",
											"name": "_positions",
											"nameLocation": "2054:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 331,
											"src": "2020:44:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 329,
												"keyName": "value",
												"keyNameLocation": "2036:5:4",
												"keyType": {
													"id": 327,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2020:33:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1805:3:4",
									"nodeType": "StructDefinition",
									"scope": 933,
									"src": "1798:273:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "2310:337:4",
										"statements": [
											{
												"condition": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2324:22:4",
													"subExpression": {
														"arguments": [
															{
																"id": 343,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "2335:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 344,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "2340:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 342,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "2325:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$331_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2325:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 370,
													"nodeType": "Block",
													"src": "2604:37:4",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2625:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 341,
															"id": 369,
															"nodeType": "Return",
															"src": "2618:12:4"
														}
													]
												},
												"id": 371,
												"nodeType": "IfStatement",
												"src": "2320:321:4",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "2348:250:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 352,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "2379:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 347,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 335,
																			"src": "2362:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2366:7:4",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 326,
																		"src": "2362:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2374:4:4",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2362:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2362:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 354,
															"nodeType": "ExpressionStatement",
															"src": "2362:23:4"
														},
														{
															"expression": {
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 355,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 335,
																			"src": "2520:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 358,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2524:10:4",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 330,
																		"src": "2520:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 359,
																	"indexExpression": {
																		"id": 357,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "2535:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2520:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 360,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 335,
																			"src": "2544:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 361,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2548:7:4",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 326,
																		"src": "2544:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2556:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2544:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2520:42:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 364,
															"nodeType": "ExpressionStatement",
															"src": "2520:42:4"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2583:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 341,
															"id": 366,
															"nodeType": "Return",
															"src": "2576:11:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "2077:159:4",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2250:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2267:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2255:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 334,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 333,
														"name": "Set",
														"nameLocations": [
															"2255:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 331,
														"src": "2255:3:4"
													},
													"referencedDeclaration": 331,
													"src": "2255:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2280:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2272:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 336,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:32:4"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2304:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:6:4"
									},
									"scope": 933,
									"src": "2241:406:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "2887:1296:4",
										"statements": [
											{
												"assignments": [
													385
												],
												"declarations": [
													{
														"constant": false,
														"id": 385,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2999:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 456,
														"src": "2991:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 384,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2991:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 390,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 386,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3010:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3014:10:4",
														"memberName": "_positions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 330,
														"src": "3010:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 389,
													"indexExpression": {
														"id": 388,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "3025:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3010:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2991:40:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "3046:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3058:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3046:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 454,
													"nodeType": "Block",
													"src": "4140:37:4",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4161:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 383,
															"id": 453,
															"nodeType": "Return",
															"src": "4154:12:4"
														}
													]
												},
												"id": 455,
												"nodeType": "IfStatement",
												"src": "3042:1135:4",
												"trueBody": {
													"id": 451,
													"nodeType": "Block",
													"src": "3061:1073:4",
													"statements": [
														{
															"assignments": [
																395
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 395,
																	"mutability": "mutable",
																	"name": "valueIndex",
																	"nameLocation": "3421:10:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 451,
																	"src": "3413:18:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 394,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3413:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 399,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 396,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "3434:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3445:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3434:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3413:33:4"
														},
														{
															"assignments": [
																401
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 401,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3468:9:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 451,
																	"src": "3460:17:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 400,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3460:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 402,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "3480:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 403,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3484:7:4",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 326,
																		"src": "3480:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3492:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3480:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3501:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3480:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3460:42:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "3521:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 409,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "3535:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3521:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 435,
															"nodeType": "IfStatement",
															"src": "3517:378:4",
															"trueBody": {
																"id": 434,
																"nodeType": "Block",
																"src": "3546:349:4",
																"statements": [
																	{
																		"assignments": [
																			412
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 412,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3572:9:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 434,
																				"src": "3564:17:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 411,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3564:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 417,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 413,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 377,
																					"src": "3584:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 414,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3588:7:4",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 326,
																				"src": "3584:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 416,
																			"indexExpression": {
																				"id": 415,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 401,
																				"src": "3596:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3584:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3564:42:4"
																	},
																	{
																		"expression": {
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 418,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 377,
																						"src": "3705:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 421,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3709:7:4",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 326,
																					"src": "3705:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 422,
																				"indexExpression": {
																					"id": 420,
																					"name": "valueIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 395,
																					"src": "3717:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3705:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 423,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 412,
																				"src": "3731:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3705:35:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 425,
																		"nodeType": "ExpressionStatement",
																		"src": "3705:35:4"
																	},
																	{
																		"expression": {
																			"id": 432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 426,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 377,
																						"src": "3844:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 429,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3848:10:4",
																					"memberName": "_positions",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 330,
																					"src": "3844:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 430,
																				"indexExpression": {
																					"id": 428,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 412,
																					"src": "3859:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3844:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 431,
																				"name": "position",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 385,
																				"src": "3872:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3844:36:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 433,
																		"nodeType": "ExpressionStatement",
																		"src": "3844:36:4"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 436,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "3973:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 439,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3977:7:4",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 326,
																		"src": "3973:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3985:3:4",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3973:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3973:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 442,
															"nodeType": "ExpressionStatement",
															"src": "3973:17:4"
														},
														{
															"expression": {
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4069:28:4",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 443,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "4076:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 444,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4080:10:4",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 330,
																		"src": "4076:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 446,
																	"indexExpression": {
																		"id": 445,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "4091:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4076:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 448,
															"nodeType": "ExpressionStatement",
															"src": "4069:28:4"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4119:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 383,
															"id": 450,
															"nodeType": "Return",
															"src": "4112:11:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "2653:157:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2824:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2844:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2832:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 376,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 375,
														"name": "Set",
														"nameLocations": [
															"2832:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 331,
														"src": "2832:3:4"
													},
													"referencedDeclaration": 331,
													"src": "2832:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2857:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2849:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 378,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:32:4"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2881:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 381,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2881:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:6:4"
									},
									"scope": 933,
									"src": "2815:1368:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "4343:50:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 468,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "4360:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4364:10:4",
															"memberName": "_positions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 330,
															"src": "4360:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 471,
														"indexExpression": {
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4375:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4360:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4385:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4360:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 467,
												"id": 474,
												"nodeType": "Return",
												"src": "4353:33:4"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "4189:70:4",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4273:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4295:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4283:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 460,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 459,
														"name": "Set",
														"nameLocations": [
															"4283:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 331,
														"src": "4283:3:4"
													},
													"referencedDeclaration": 331,
													"src": "4283:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4308:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4300:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 462,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4300:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4282:32:4"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4337:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4337:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:6:4"
									},
									"scope": 933,
									"src": "4264:129:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "4539:42:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 485,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "4556:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4560:7:4",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 326,
														"src": "4556:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4568:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4556:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 484,
												"id": 488,
												"nodeType": "Return",
												"src": "4549:25:4"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "4399:70:4",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4483:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4503:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "4491:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 479,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 478,
														"name": "Set",
														"nameLocations": [
															"4491:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 331,
														"src": "4491:3:4"
													},
													"referencedDeclaration": 331,
													"src": "4491:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4490:17:4"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "4530:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4529:9:4"
									},
									"scope": 933,
									"src": "4474:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "4999:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 501,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "5016:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5020:7:4",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 326,
														"src": "5016:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 504,
													"indexExpression": {
														"id": 503,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "5028:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5016:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 500,
												"id": 505,
												"nodeType": "Return",
												"src": "5009:25:4"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "4587:331:4",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4932:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4948:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "4936:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 493,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 492,
														"name": "Set",
														"nameLocations": [
															"4936:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 331,
														"src": "4936:3:4"
													},
													"referencedDeclaration": 331,
													"src": "4936:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4961:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "4953:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4935:32:4"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "4990:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 498,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:9:4"
									},
									"scope": 933,
									"src": "4923:118:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "5655:35:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 517,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "5672:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5676:7:4",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 326,
													"src": "5672:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 516,
												"id": 519,
												"nodeType": "Return",
												"src": "5665:18:4"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "5047:529:4",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5590:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5610:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "5598:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 509,
														"name": "Set",
														"nameLocations": [
															"5598:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 331,
														"src": "5598:3:4"
													},
													"referencedDeclaration": 331,
													"src": "5598:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5597:17:4"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "5637:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 513,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5637:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 514,
													"nodeType": "ArrayTypeName",
													"src": "5637:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:18:4"
									},
									"scope": 933,
									"src": "5581:109:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 525,
									"members": [
										{
											"constant": false,
											"id": 524,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5747:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 525,
											"src": "5743:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 523,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 522,
													"name": "Set",
													"nameLocations": [
														"5743:3:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 331,
													"src": "5743:3:4"
												},
												"referencedDeclaration": 331,
												"src": "5743:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5722:10:4",
									"nodeType": "StructDefinition",
									"scope": 933,
									"src": "5715:45:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "6006:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 537,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "6028:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6032:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 524,
															"src": "6028:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 539,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "6040:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 536,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "6023:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$331_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 535,
												"id": 541,
												"nodeType": "Return",
												"src": "6016:30:4"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "5766:159:4",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5939:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5962:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5943:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 528,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 527,
														"name": "Bytes32Set",
														"nameLocations": [
															"5943:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 525,
														"src": "5943:10:4"
													},
													"referencedDeclaration": 525,
													"src": "5943:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5967:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 530,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5942:39:4"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "6000:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 533,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6000:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:6:4"
									},
									"scope": 933,
									"src": "5930:123:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "6300:50:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 555,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "6325:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6329:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 524,
															"src": "6325:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 557,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "6337:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 554,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "6317:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$331_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6317:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 553,
												"id": 559,
												"nodeType": "Return",
												"src": "6310:33:4"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "6059:157:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6230:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6256:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "6237:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 546,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 545,
														"name": "Bytes32Set",
														"nameLocations": [
															"6237:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 525,
														"src": "6237:10:4"
													},
													"referencedDeclaration": 525,
													"src": "6237:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6269:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "6261:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 548,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6261:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:39:4"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "6294:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 551,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6294:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:6:4"
									},
									"scope": 933,
									"src": "6221:129:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "6517:52:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 573,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "6544:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6548:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 524,
															"src": "6544:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 575,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "6556:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 572,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "6534:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$331_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 571,
												"id": 577,
												"nodeType": "Return",
												"src": "6527:35:4"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "6356:70:4",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6440:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6468:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "6449:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 564,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 563,
														"name": "Bytes32Set",
														"nameLocations": [
															"6449:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 525,
														"src": "6449:10:4"
													},
													"referencedDeclaration": 525,
													"src": "6449:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6481:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "6473:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 566,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6473:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6448:39:4"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "6511:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6511:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6510:6:4"
									},
									"scope": 933,
									"src": "6431:138:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "6722:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 589,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "6747:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6751:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 524,
															"src": "6747:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 588,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "6739:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$331_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 587,
												"id": 592,
												"nodeType": "Return",
												"src": "6732:26:4"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "6575:70:4",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6659:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6685:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "6666:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 582,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 581,
														"name": "Bytes32Set",
														"nameLocations": [
															"6666:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 525,
														"src": "6666:10:4"
													},
													"referencedDeclaration": 525,
													"src": "6666:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:24:4"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "6713:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6713:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6712:9:4"
									},
									"scope": 933,
									"src": "6650:115:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "7190:46:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 606,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "7211:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 607,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7215:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 524,
															"src": "7211:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 608,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "7223:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 605,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "7207:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$331_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7207:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 604,
												"id": 610,
												"nodeType": "Return",
												"src": "7200:29:4"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "6771:331:4",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7116:2:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7138:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "7119:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 597,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 596,
														"name": "Bytes32Set",
														"nameLocations": [
															"7119:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 525,
														"src": "7119:10:4"
													},
													"referencedDeclaration": 525,
													"src": "7119:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7151:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "7143:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7143:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7118:39:4"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "7181:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 602,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7181:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7180:9:4"
									},
									"scope": 933,
									"src": "7107:129:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "7857:192:4",
										"statements": [
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "7884:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 641,
														"src": "7867:22:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 624,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7867:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 625,
															"nodeType": "ArrayTypeName",
															"src": "7867:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 631,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 628,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "7900:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7904:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 524,
															"src": "7900:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 627,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "7892:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$331_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7892:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7867:44:4"
											},
											{
												"assignments": [
													636
												],
												"declarations": [
													{
														"constant": false,
														"id": 636,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7938:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 641,
														"src": "7921:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 634,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7921:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 635,
															"nodeType": "ArrayTypeName",
															"src": "7921:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 637,
												"nodeType": "VariableDeclarationStatement",
												"src": "7921:23:4"
											},
											{
												"AST": {
													"nativeSrc": "7980:39:4",
													"nodeType": "YulBlock",
													"src": "7980:39:4",
													"statements": [
														{
															"nativeSrc": "7994:15:4",
															"nodeType": "YulAssignment",
															"src": "7994:15:4",
															"value": {
																"name": "store",
																"nativeSrc": "8004:5:4",
																"nodeType": "YulIdentifier",
																"src": "8004:5:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7994:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7994:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 636,
														"isOffset": false,
														"isSlot": false,
														"src": "7994:6:4",
														"valueSize": 1
													},
													{
														"declaration": 626,
														"isOffset": false,
														"isSlot": false,
														"src": "8004:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 638,
												"nodeType": "InlineAssembly",
												"src": "7955:64:4"
											},
											{
												"expression": {
													"id": 639,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 636,
													"src": "8036:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 621,
												"id": 640,
												"nodeType": "Return",
												"src": "8029:13:4"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "7242:529:4",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7785:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7811:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "7792:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 615,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 614,
														"name": "Bytes32Set",
														"nameLocations": [
															"7792:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 525,
														"src": "7792:10:4"
													},
													"referencedDeclaration": 525,
													"src": "7792:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$525_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7791:24:4"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "7839:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 618,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7839:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 619,
													"nodeType": "ArrayTypeName",
													"src": "7839:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7838:18:4"
									},
									"scope": 933,
									"src": "7776:273:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 646,
									"members": [
										{
											"constant": false,
											"id": 645,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8106:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 646,
											"src": "8102:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 644,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 643,
													"name": "Set",
													"nameLocations": [
														"8102:3:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 331,
													"src": "8102:3:4"
												},
												"referencedDeclaration": 331,
												"src": "8102:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8081:10:4",
									"nodeType": "StructDefinition",
									"scope": 933,
									"src": "8074:45:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "8365:74:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 658,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "8387:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8391:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 645,
															"src": "8387:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 666,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 652,
																					"src": "8423:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8415:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 664,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8415:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8415:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8407:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 662,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8407:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8407:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8399:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 660,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8399:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 657,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "8382:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$331_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8382:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 656,
												"id": 671,
												"nodeType": "Return",
												"src": "8375:57:4"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "8125:159:4",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8298:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8321:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "8302:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 649,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 648,
														"name": "AddressSet",
														"nameLocations": [
															"8302:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 646,
														"src": "8302:10:4"
													},
													"referencedDeclaration": 646,
													"src": "8302:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8334:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "8326:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8301:39:4"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "8359:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 654,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8359:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8358:6:4"
									},
									"scope": 933,
									"src": "8289:150:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "8686:77:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 685,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "8711:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8715:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 645,
															"src": "8711:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 693,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 679,
																					"src": "8747:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8739:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 691,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8739:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8739:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8731:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 689,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8731:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8731:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8723:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 687,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8723:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8723:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 684,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "8703:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$331_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8703:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 683,
												"id": 698,
												"nodeType": "Return",
												"src": "8696:60:4"
											}
										]
									},
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "8445:157:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8616:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8642:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "8623:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 676,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 675,
														"name": "AddressSet",
														"nameLocations": [
															"8623:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 646,
														"src": "8623:10:4"
													},
													"referencedDeclaration": 646,
													"src": "8623:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "8647:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8622:39:4"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "8680:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 681,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8680:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8679:6:4"
									},
									"scope": 933,
									"src": "8607:156:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "8930:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 712,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "8957:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8961:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 645,
															"src": "8957:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 720,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 706,
																					"src": "8993:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8985:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 718,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8985:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8985:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8977:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 716,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8977:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8977:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8969:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 714,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8969:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8969:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 711,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "8947:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$331_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8947:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 710,
												"id": 725,
												"nodeType": "Return",
												"src": "8940:62:4"
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "8769:70:4",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8853:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8881:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "8862:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 703,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 702,
														"name": "AddressSet",
														"nameLocations": [
															"8862:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 646,
														"src": "8862:10:4"
													},
													"referencedDeclaration": 646,
													"src": "8862:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8894:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "8886:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8886:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8861:39:4"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "8924:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 708,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8924:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:6:4"
									},
									"scope": 933,
									"src": "8844:165:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "9162:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 737,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "9187:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9191:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 645,
															"src": "9187:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 736,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "9179:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$331_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9179:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 735,
												"id": 740,
												"nodeType": "Return",
												"src": "9172:26:4"
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "9015:70:4",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9099:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9125:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "9106:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 730,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 729,
														"name": "AddressSet",
														"nameLocations": [
															"9106:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 646,
														"src": "9106:10:4"
													},
													"referencedDeclaration": 646,
													"src": "9106:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9105:24:4"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "9153:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9153:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9152:9:4"
									},
									"scope": 933,
									"src": "9090:115:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "9630:73:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 760,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 746,
																						"src": "9675:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 761,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9679:6:4",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 645,
																					"src": "9675:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$331_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 762,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 748,
																					"src": "9687:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$331_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 759,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 507,
																				"src": "9671:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$331_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9671:22:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9663:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 757,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9663:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9663:31:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9655:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 755,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9655:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9655:40:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9647:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 753,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9647:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9647:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 752,
												"id": 767,
												"nodeType": "Return",
												"src": "9640:56:4"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "9211:331:4",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9556:2:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9578:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "9559:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 745,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 744,
														"name": "AddressSet",
														"nameLocations": [
															"9559:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 646,
														"src": "9559:10:4"
													},
													"referencedDeclaration": 646,
													"src": "9559:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9591:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "9583:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9583:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9558:39:4"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "9621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9621:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9620:9:4"
									},
									"scope": 933,
									"src": "9547:156:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "10324:192:4",
										"statements": [
											{
												"assignments": [
													783
												],
												"declarations": [
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10351:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "10334:22:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 781,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10334:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 782,
															"nodeType": "ArrayTypeName",
															"src": "10334:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 788,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 785,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 773,
																"src": "10367:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10371:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 645,
															"src": "10367:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 784,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "10359:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$331_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10359:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10334:44:4"
											},
											{
												"assignments": [
													793
												],
												"declarations": [
													{
														"constant": false,
														"id": 793,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10405:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "10388:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 791,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10388:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 792,
															"nodeType": "ArrayTypeName",
															"src": "10388:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 794,
												"nodeType": "VariableDeclarationStatement",
												"src": "10388:23:4"
											},
											{
												"AST": {
													"nativeSrc": "10447:39:4",
													"nodeType": "YulBlock",
													"src": "10447:39:4",
													"statements": [
														{
															"nativeSrc": "10461:15:4",
															"nodeType": "YulAssignment",
															"src": "10461:15:4",
															"value": {
																"name": "store",
																"nativeSrc": "10471:5:4",
																"nodeType": "YulIdentifier",
																"src": "10471:5:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10461:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10461:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 793,
														"isOffset": false,
														"isSlot": false,
														"src": "10461:6:4",
														"valueSize": 1
													},
													{
														"declaration": 783,
														"isOffset": false,
														"isSlot": false,
														"src": "10471:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 795,
												"nodeType": "InlineAssembly",
												"src": "10422:64:4"
											},
											{
												"expression": {
													"id": 796,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 793,
													"src": "10503:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 778,
												"id": 797,
												"nodeType": "Return",
												"src": "10496:13:4"
											}
										]
									},
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "9709:529:4",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10252:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10278:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "10259:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 772,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 771,
														"name": "AddressSet",
														"nameLocations": [
															"10259:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 646,
														"src": "10259:10:4"
													},
													"referencedDeclaration": 646,
													"src": "10259:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10258:24:4"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "10306:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 775,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10306:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 776,
													"nodeType": "ArrayTypeName",
													"src": "10306:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10305:18:4"
									},
									"scope": 933,
									"src": "10243:273:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 803,
									"members": [
										{
											"constant": false,
											"id": 802,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10567:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 803,
											"src": "10563:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 801,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 800,
													"name": "Set",
													"nameLocations": [
														"10563:3:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 331,
													"src": "10563:3:4"
												},
												"referencedDeclaration": 331,
												"src": "10563:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$331_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10545:7:4",
									"nodeType": "StructDefinition",
									"scope": 933,
									"src": "10538:42:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "10823:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 815,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "10845:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10849:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 802,
															"src": "10845:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 819,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "10865:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10857:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 817,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10857:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10857:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 814,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "10840:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$331_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10840:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 813,
												"id": 822,
												"nodeType": "Return",
												"src": "10833:39:4"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "10586:159:4",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10759:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10779:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "10763:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 806,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 805,
														"name": "UintSet",
														"nameLocations": [
															"10763:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 803,
														"src": "10763:7:4"
													},
													"referencedDeclaration": 803,
													"src": "10763:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10792:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "10784:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10784:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10762:36:4"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "10817:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 811,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10817:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10816:6:4"
									},
									"scope": 933,
									"src": "10750:129:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "11123:59:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 836,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "11148:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11152:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 802,
															"src": "11148:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "11168:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11160:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 838,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11160:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11160:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 835,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "11140:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$331_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11140:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 834,
												"id": 843,
												"nodeType": "Return",
												"src": "11133:42:4"
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "10885:157:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11056:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11079:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "11063:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 827,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 826,
														"name": "UintSet",
														"nameLocations": [
															"11063:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 803,
														"src": "11063:7:4"
													},
													"referencedDeclaration": 803,
													"src": "11063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11092:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "11084:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11084:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11062:36:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "11117:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 832,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11117:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11116:6:4"
									},
									"scope": 933,
									"src": "11047:135:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "11346:61:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 857,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "11373:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11377:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 802,
															"src": "11373:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 861,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "11393:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11385:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 859,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11385:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11385:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 856,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "11363:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$331_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11363:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 855,
												"id": 864,
												"nodeType": "Return",
												"src": "11356:44:4"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "11188:70:4",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11272:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11297:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "11281:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 848,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 847,
														"name": "UintSet",
														"nameLocations": [
															"11281:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 803,
														"src": "11281:7:4"
													},
													"referencedDeclaration": 803,
													"src": "11281:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11310:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "11302:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11302:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:36:4"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "11340:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 853,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11340:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11339:6:4"
									},
									"scope": 933,
									"src": "11263:144:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "11557:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 876,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "11582:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11586:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 802,
															"src": "11582:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 875,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "11574:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$331_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11574:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 874,
												"id": 879,
												"nodeType": "Return",
												"src": "11567:26:4"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "11413:70:4",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11497:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11520:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "11504:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 869,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 868,
														"name": "UintSet",
														"nameLocations": [
															"11504:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 803,
														"src": "11504:7:4"
													},
													"referencedDeclaration": 803,
													"src": "11504:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11503:21:4"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "11548:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11548:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11547:9:4"
									},
									"scope": 933,
									"src": "11488:112:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "12022:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 895,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "12051:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 896,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12055:6:4",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 802,
																	"src": "12051:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$331_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 897,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 887,
																	"src": "12063:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$331_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 894,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "12047:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$331_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12047:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12039:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 892,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12039:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12039:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 891,
												"id": 900,
												"nodeType": "Return",
												"src": "12032:38:4"
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "11606:331:4",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "11951:2:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11970:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "11954:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 884,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 883,
														"name": "UintSet",
														"nameLocations": [
															"11954:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 803,
														"src": "11954:7:4"
													},
													"referencedDeclaration": 803,
													"src": "11954:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "11983:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "11975:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11975:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11953:36:4"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "12013:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12013:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12012:9:4"
									},
									"scope": 933,
									"src": "11942:135:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "12695:192:4",
										"statements": [
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12722:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "12705:22:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 914,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12705:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 915,
															"nodeType": "ArrayTypeName",
															"src": "12705:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 921,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 918,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "12738:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 919,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12742:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 802,
															"src": "12738:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$331_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 917,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "12730:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$331_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12730:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12705:44:4"
											},
											{
												"assignments": [
													926
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12776:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "12759:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 924,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12759:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 925,
															"nodeType": "ArrayTypeName",
															"src": "12759:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 927,
												"nodeType": "VariableDeclarationStatement",
												"src": "12759:23:4"
											},
											{
												"AST": {
													"nativeSrc": "12818:39:4",
													"nodeType": "YulBlock",
													"src": "12818:39:4",
													"statements": [
														{
															"nativeSrc": "12832:15:4",
															"nodeType": "YulAssignment",
															"src": "12832:15:4",
															"value": {
																"name": "store",
																"nativeSrc": "12842:5:4",
																"nodeType": "YulIdentifier",
																"src": "12842:5:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12832:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "12832:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 926,
														"isOffset": false,
														"isSlot": false,
														"src": "12832:6:4",
														"valueSize": 1
													},
													{
														"declaration": 916,
														"isOffset": false,
														"isSlot": false,
														"src": "12842:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 928,
												"nodeType": "InlineAssembly",
												"src": "12793:64:4"
											},
											{
												"expression": {
													"id": 929,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 926,
													"src": "12874:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 911,
												"id": 930,
												"nodeType": "Return",
												"src": "12867:13:4"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "12083:529:4",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12626:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12649:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "12633:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 905,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 904,
														"name": "UintSet",
														"nameLocations": [
															"12633:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 803,
														"src": "12633:7:4"
													},
													"referencedDeclaration": 803,
													"src": "12633:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$803_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12632:21:4"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "12677:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 908,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12677:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 909,
													"nodeType": "ArrayTypeName",
													"src": "12677:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12676:18:4"
									},
									"scope": 933,
									"src": "12617:270:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "1330:11559:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "205:12685:4"
				},
				"id": 4
			},
			"stack_contract.sol": {
				"ast": {
					"absolutePath": "stack_contract.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"EnumerableSet": [
							933
						],
						"IERC20": [
							290
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						],
						"StakingContract": [
							1254
						]
					},
					"id": 1255,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1255,
							"sourceUnit": 291,
							"src": "57:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1255,
							"sourceUnit": 213,
							"src": "114:62:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"id": 938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1255,
							"sourceUnit": 934,
							"src": "177:65:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1255,
							"sourceUnit": 148,
							"src": "243:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 940,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"326:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "326:15:5"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "326:15:5"
								},
								{
									"baseName": {
										"id": 942,
										"name": "Ownable",
										"nameLocations": [
											"343:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "343:7:5"
									},
									"id": 943,
									"nodeType": "InheritanceSpecifier",
									"src": "343:7:5"
								}
							],
							"canonicalName": "StakingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1254,
							"linearizedBaseContracts": [
								1254,
								147,
								320,
								212
							],
							"name": "StakingContract",
							"nameLocation": "307:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 946,
									"mutability": "constant",
									"name": "SECONDS_PER_YEAR",
									"nameLocation": "383:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 1254,
									"src": "358:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 944,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "358:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 945,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "402:8:5",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 951,
									"mutability": "constant",
									"name": "MAX_STAKING_PERIOD",
									"nameLocation": "441:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1254,
									"src": "416:66:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 947,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "416:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 950,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "34",
											"id": 948,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "462:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_4_by_1",
												"typeString": "int_const 4"
											},
											"value": "4"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"id": 949,
											"name": "SECONDS_PER_YEAR",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 946,
											"src": "466:16:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "462:20:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 954,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "504:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1254,
									"src": "490:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$290",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 953,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 952,
											"name": "IERC20",
											"nameLocations": [
												"490:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 290,
											"src": "490:6:5"
										},
										"referencedDeclaration": 290,
										"src": "490:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$290",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 956,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "538:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1254,
									"src": "523:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 955,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "523:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 962,
									"mutability": "mutable",
									"name": "userStaking",
									"nameLocation": "598:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1254,
									"src": "561:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$974_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct StakingContract.Stake[])"
									},
									"typeName": {
										"id": 961,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 957,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "569:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "561:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$974_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct StakingContract.Stake[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 959,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 958,
													"name": "Stake",
													"nameLocations": [
														"580:5:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 974,
													"src": "580:5:5"
												},
												"referencedDeclaration": 974,
												"src": "580:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$974_storage_ptr",
													"typeString": "struct StakingContract.Stake"
												}
											},
											"id": 960,
											"nodeType": "ArrayTypeName",
											"src": "580:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stake_$974_storage_$dyn_storage_ptr",
												"typeString": "struct StakingContract.Stake[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"global": false,
									"id": 966,
									"libraryName": {
										"id": 963,
										"name": "EnumerableSet",
										"nameLocations": [
											"622:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "622:13:5"
									},
									"nodeType": "UsingForDirective",
									"src": "616:49:5",
									"typeName": {
										"id": 965,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 964,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"640:13:5",
												"654:10:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 646,
											"src": "640:24:5"
										},
										"referencedDeclaration": 646,
										"src": "640:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"constant": false,
									"id": 969,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "704:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1254,
									"src": "670:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$646_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"id": 968,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 967,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"670:13:5",
												"684:10:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 646,
											"src": "670:24:5"
										},
										"referencedDeclaration": 646,
										"src": "670:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$646_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "StakingContract.Stake",
									"id": 974,
									"members": [
										{
											"constant": false,
											"id": 971,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "751:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 974,
											"src": "743:20:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 970,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "743:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 973,
											"mutability": "mutable",
											"name": "withdrawDate",
											"nameLocation": "785:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 974,
											"src": "777:20:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 972,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "777:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "727:5:5",
									"nodeType": "StructDefinition",
									"scope": 1254,
									"src": "720:89:5",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 980,
									"name": "Staked",
									"nameLocation": "825:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "848:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "832:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "832:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "862:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "854:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "831:38:5"
									},
									"src": "819:51:5"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 986,
									"name": "Withdrawn",
									"nameLocation": "881:9:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "907:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "891:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "921:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "913:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:38:5"
									},
									"src": "875:54:5"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "993:45:5",
										"statements": [
											{
												"expression": {
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 996,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "1003:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 997,
														"name": "_stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "1018:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"src": "1003:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "1003:28:5"
											}
										]
									},
									"id": 1001,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 992,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "981:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "985:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "981:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 994,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 991,
												"name": "Ownable",
												"nameLocations": [
													"973:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "973:7:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "973:19:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "958:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "951:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$290",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 988,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 987,
														"name": "IERC20",
														"nameLocations": [
															"951:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 290,
														"src": "951:6:5"
													},
													"referencedDeclaration": 290,
													"src": "951:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:22:5"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "993:0:5"
									},
									"scope": 1254,
									"src": "939:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "1117:686:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1011,
																	"name": "period",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "1148:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1157:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1148:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1014,
																	"name": "period",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "1162:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1015,
																	"name": "MAX_STAKING_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "1172:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1162:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1148:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e6720706572696f642063616e6e6f7420657863656564203420796561727320616e64206d7573742062652067726561746572207468616e2030",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1205:65:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df401bb5dd749b242221e1a45a3e34dea092c9ed1f71c241bb199b116619d137",
																"typeString": "literal_string \"Staking period cannot exceed 4 years and must be greater than 0\""
															},
															"value": "Staking period cannot exceed 4 years and must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df401bb5dd749b242221e1a45a3e34dea092c9ed1f71c241bb199b116619d137",
																"typeString": "literal_string \"Staking period cannot exceed 4 years and must be greater than 0\""
															}
														],
														"id": 1010,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1127:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1127:153:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "1127:153:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1022,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "1311:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1320:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1311:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1336:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1290:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1290:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "1290:87:5"
											},
											{
												"assignments": [
													1030
												],
												"declarations": [
													{
														"constant": false,
														"id": 1030,
														"mutability": "mutable",
														"name": "newStake",
														"nameLocation": "1400:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1091,
														"src": "1387:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$974_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 1029,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1028,
																"name": "Stake",
																"nameLocations": [
																	"1387:5:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 974,
																"src": "1387:5:5"
															},
															"referencedDeclaration": 974,
															"src": "1387:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$974_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1038,
												"initialValue": {
													"arguments": [
														{
															"id": 1032,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "1417:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1033,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1425:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1431:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1425:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1035,
																"name": "period",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1005,
																"src": "1443:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1425:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1031,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "1411:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$974_storage_ptr_$",
															"typeString": "type(struct StakingContract.Stake storage pointer)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1411:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$974_memory_ptr",
														"typeString": "struct StakingContract.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1387:63:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1044,
															"name": "newStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "1489:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$974_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$974_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1039,
																"name": "userStaking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "1460:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$974_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
																}
															},
															"id": 1042,
															"indexExpression": {
																"expression": {
																	"id": 1040,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1472:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1476:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1472:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1460:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$974_storage_$dyn_storage",
																"typeString": "struct StakingContract.Stake storage ref[] storage ref"
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1484:4:5",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1460:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$974_storage_$dyn_storage_ptr_$_t_struct$_Stake_$974_storage_$returns$__$attached_to$_t_array$_t_struct$_Stake_$974_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct StakingContract.Stake storage ref[] storage pointer,struct StakingContract.Stake storage ref)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1460:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "1460:38:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1047,
																"name": "userStaking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "1512:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$974_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
																}
															},
															"id": 1050,
															"indexExpression": {
																"expression": {
																	"id": 1048,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1524:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1528:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1524:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1512:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$974_storage_$dyn_storage",
																"typeString": "struct StakingContract.Stake storage ref[] storage ref"
															}
														},
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1536:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1512:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1546:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1512:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1062,
												"nodeType": "IfStatement",
												"src": "1508:86:5",
												"trueBody": {
													"id": 1061,
													"nodeType": "Block",
													"src": "1548:46:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1057,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1572:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1576:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1572:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1054,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "1562:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$646_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1568:3:5",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 673,
																	"src": "1562:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$646_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$646_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1562:21:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1060,
															"nodeType": "ExpressionStatement",
															"src": "1562:21:5"
														}
													]
												}
											},
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1609:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1091,
														"src": "1604:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1063,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1604:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1075,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1067,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1645:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1649:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1645:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1071,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1665:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$1254",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$1254",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1657:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1069,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1657:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1657:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "1672:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1065,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "1619:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1632:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 289,
														"src": "1619:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1619:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1604:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "1697:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1706:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1689:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1689:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "1689:35:5"
											},
											{
												"expression": {
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1081,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "1734:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1082,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "1749:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1734:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "1734:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1086,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1777:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1781:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1777:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1088,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "1789:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1085,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "1770:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "EmitStatement",
												"src": "1765:31:5"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1008,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1007,
												"name": "nonReentrant",
												"nameLocations": [
													"1104:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1104:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1104:12:5"
										}
									],
									"name": "stake",
									"nameLocation": "1057:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1071:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "1063:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "period",
												"nameLocation": "1087:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "1079:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:32:5"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1117:0:5"
									},
									"scope": 1254,
									"src": "1048:755:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "1851:860:5",
										"statements": [
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "userStack",
														"nameLocation": "1876:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 1217,
														"src": "1861:24:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct StakingContract.Stake[]"
														},
														"typeName": {
															"baseType": {
																"id": 1099,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1098,
																	"name": "Stake",
																	"nameLocations": [
																		"1861:5:5"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 974,
																	"src": "1861:5:5"
																},
																"referencedDeclaration": 974,
																"src": "1861:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$974_storage_ptr",
																	"typeString": "struct StakingContract.Stake"
																}
															},
															"id": 1100,
															"nodeType": "ArrayTypeName",
															"src": "1861:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$974_storage_$dyn_storage_ptr",
																"typeString": "struct StakingContract.Stake[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1106,
												"initialValue": {
													"baseExpression": {
														"id": 1102,
														"name": "userStaking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "1888:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$974_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
														}
													},
													"id": 1105,
													"indexExpression": {
														"expression": {
															"id": 1103,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1900:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1904:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1900:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1888:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$974_storage_$dyn_storage",
														"typeString": "struct StakingContract.Stake storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1861:50:5"
											},
											{
												"assignments": [
													1108
												],
												"declarations": [
													{
														"constant": false,
														"id": 1108,
														"mutability": "mutable",
														"name": "unstackAmount",
														"nameLocation": "1930:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1217,
														"src": "1922:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1107,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1922:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"hexValue": "30",
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1946:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1922:25:5"
											},
											{
												"assignments": [
													1112
												],
												"declarations": [
													{
														"constant": false,
														"id": 1112,
														"mutability": "mutable",
														"name": "useHasActiveStack",
														"nameLocation": "1963:17:5",
														"nodeType": "VariableDeclaration",
														"scope": 1217,
														"src": "1958:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1111,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1958:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1113,
												"nodeType": "VariableDeclarationStatement",
												"src": "1958:22:5"
											},
											{
												"body": {
													"id": 1180,
													"nodeType": "Block",
													"src": "2034:364:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1125,
																				"name": "userStack",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "2052:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct StakingContract.Stake memory[] memory"
																				}
																			},
																			"id": 1127,
																			"indexExpression": {
																				"id": 1126,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1115,
																				"src": "2062:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2052:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$974_memory_ptr",
																				"typeString": "struct StakingContract.Stake memory"
																			}
																		},
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2065:12:5",
																		"memberName": "withdrawDate",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 973,
																		"src": "2052:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2080:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2052:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1131,
																				"name": "userStack",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "2085:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct StakingContract.Stake memory[] memory"
																				}
																			},
																			"id": 1133,
																			"indexExpression": {
																				"id": 1132,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1115,
																				"src": "2095:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2085:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$974_memory_ptr",
																				"typeString": "struct StakingContract.Stake memory"
																			}
																		},
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2098:12:5",
																		"memberName": "stakedAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 971,
																		"src": "2085:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2113:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2085:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2052:62:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1158,
															"nodeType": "IfStatement",
															"src": "2048:200:5",
															"trueBody": {
																"id": 1157,
																"nodeType": "Block",
																"src": "2115:133:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1138,
																				"name": "unstackAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1108,
																				"src": "2133:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1139,
																						"name": "userStack",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1101,
																						"src": "2150:9:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr",
																							"typeString": "struct StakingContract.Stake memory[] memory"
																						}
																					},
																					"id": 1141,
																					"indexExpression": {
																						"id": 1140,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1115,
																						"src": "2160:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2150:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$974_memory_ptr",
																						"typeString": "struct StakingContract.Stake memory"
																					}
																				},
																				"id": 1142,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2163:12:5",
																				"memberName": "stakedAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 971,
																				"src": "2150:25:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2133:42:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1144,
																		"nodeType": "ExpressionStatement",
																		"src": "2133:42:5"
																	},
																	{
																		"expression": {
																			"id": 1155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 1145,
																						"name": "userStaking",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 962,
																						"src": "2193:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$974_storage_$dyn_storage_$",
																							"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
																						}
																					},
																					"id": 1149,
																					"indexExpression": {
																						"expression": {
																							"id": 1146,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "2205:3:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 1147,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2209:6:5",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "2205:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2193:23:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Stake_$974_storage_$dyn_storage",
																						"typeString": "struct StakingContract.Stake storage ref[] storage ref"
																					}
																				},
																				"id": 1150,
																				"indexExpression": {
																					"id": 1148,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1115,
																					"src": "2217:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2193:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$974_storage",
																					"typeString": "struct StakingContract.Stake storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 1152,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2228:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					{
																						"hexValue": "30",
																						"id": 1153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2231:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 1151,
																					"name": "Stake",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 974,
																					"src": "2222:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_Stake_$974_storage_ptr_$",
																						"typeString": "type(struct StakingContract.Stake storage pointer)"
																					}
																				},
																				"id": 1154,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2222:11:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$974_memory_ptr",
																					"typeString": "struct StakingContract.Stake memory"
																				}
																			},
																			"src": "2193:40:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$974_storage",
																				"typeString": "struct StakingContract.Stake storage ref"
																			}
																		},
																		"id": 1156,
																		"nodeType": "ExpressionStatement",
																		"src": "2193:40:5"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "2265:32:5",
																	"subExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 1159,
																							"name": "userStack",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1101,
																							"src": "2267:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct StakingContract.Stake memory[] memory"
																							}
																						},
																						"id": 1161,
																						"indexExpression": {
																							"id": 1160,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1115,
																							"src": "2277:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2267:12:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$974_memory_ptr",
																							"typeString": "struct StakingContract.Stake memory"
																						}
																					},
																					"id": 1162,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2280:12:5",
																					"memberName": "withdrawDate",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 973,
																					"src": "2267:25:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1163,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2295:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "2267:29:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1165,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2266:31:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1167,
																				"name": "userStack",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "2301:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct StakingContract.Stake memory[] memory"
																				}
																			},
																			"id": 1169,
																			"indexExpression": {
																				"id": 1168,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1115,
																				"src": "2311:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2301:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$974_memory_ptr",
																				"typeString": "struct StakingContract.Stake memory"
																			}
																		},
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2314:12:5",
																		"memberName": "stakedAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 971,
																		"src": "2301:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2329:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2301:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2265:65:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1179,
															"nodeType": "IfStatement",
															"src": "2261:127:5",
															"trueBody": {
																"id": 1178,
																"nodeType": "Block",
																"src": "2331:57:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1174,
																				"name": "useHasActiveStack",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1112,
																				"src": "2349:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2369:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "2349:24:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1177,
																		"nodeType": "ExpressionStatement",
																		"src": "2349:24:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1118,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "2007:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1119,
															"name": "userStack",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "2011:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct StakingContract.Stake memory[] memory"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2021:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2011:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2007:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1181,
												"initializationExpression": {
													"assignments": [
														1115
													],
													"declarations": [
														{
															"constant": false,
															"id": 1115,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2000:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1181,
															"src": "1995:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1114,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1995:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1117,
													"initialValue": {
														"hexValue": "30",
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2004:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1995:10:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2029:3:5",
														"subExpression": {
															"id": 1122,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "2029:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1124,
													"nodeType": "ExpressionStatement",
													"src": "2029:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1990:408:5"
											},
											{
												"condition": {
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2411:18:5",
													"subExpression": {
														"id": 1182,
														"name": "useHasActiveStack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "2412:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1192,
												"nodeType": "IfStatement",
												"src": "2407:72:5",
												"trueBody": {
													"id": 1191,
													"nodeType": "Block",
													"src": "2430:49:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1187,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2457:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2461:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2457:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1184,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$646_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:6:5",
																	"memberName": "remove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 700,
																	"src": "2444:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$646_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$646_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
																	}
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2444:24:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1190,
															"nodeType": "ExpressionStatement",
															"src": "2444:24:5"
														}
													]
												}
											},
											{
												"assignments": [
													1194
												],
												"declarations": [
													{
														"constant": false,
														"id": 1194,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2502:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1217,
														"src": "2497:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1193,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2497:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1197,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2534:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2538:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2534:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1199,
															"name": "unstackAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "2546:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1195,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "2512:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2525:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "2512:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2512:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2497:63:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1203,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "2578:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2587:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2570:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2570:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "2570:35:5"
											},
											{
												"expression": {
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1207,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "2616:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1208,
														"name": "unstackAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "2631:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2616:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "2616:28:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1212,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2678:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2682:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2678:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1214,
															"name": "unstackAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "2690:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1211,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "2668:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2668:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1216,
												"nodeType": "EmitStatement",
												"src": "2663:41:5"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1095,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1094,
												"name": "nonReentrant",
												"nameLocations": [
													"1838:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1838:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1838:12:5"
										}
									],
									"name": "withdraw",
									"nameLocation": "1818:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1826:2:5"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1851:0:5"
									},
									"scope": 1254,
									"src": "1809:902:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "2773:47:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1225,
														"name": "userStaking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "2790:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$974_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
														}
													},
													"id": 1228,
													"indexExpression": {
														"expression": {
															"id": 1226,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2802:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2806:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2802:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2790:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$974_storage_$dyn_storage",
														"typeString": "struct StakingContract.Stake storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1224,
												"id": 1229,
												"nodeType": "Return",
												"src": "2783:30:5"
											}
										]
									},
									"functionSelector": "fc0e3d90",
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStake",
									"nameLocation": "2726:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2734:2:5"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "2757:14:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct StakingContract.Stake[]"
												},
												"typeName": {
													"baseType": {
														"id": 1221,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1220,
															"name": "Stake",
															"nameLocations": [
																"2757:5:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 974,
															"src": "2757:5:5"
														},
														"referencedDeclaration": 974,
														"src": "2757:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$974_storage_ptr",
															"typeString": "struct StakingContract.Stake"
														}
													},
													"id": 1222,
													"nodeType": "ArrayTypeName",
													"src": "2757:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$974_storage_$dyn_storage_ptr",
														"typeString": "struct StakingContract.Stake[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2756:16:5"
									},
									"scope": 1254,
									"src": "2717:103:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "2900:41:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1240,
														"name": "userStaking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "2917:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$974_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct StakingContract.Stake storage ref[] storage ref)"
														}
													},
													"id": 1242,
													"indexExpression": {
														"id": 1241,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "2929:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2917:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$974_storage_$dyn_storage",
														"typeString": "struct StakingContract.Stake storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1239,
												"id": 1243,
												"nodeType": "Return",
												"src": "2910:24:5"
											}
										]
									},
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserStake",
									"nameLocation": "2835:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2856:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2848:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2848:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2847:14:5"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2884:14:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$974_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct StakingContract.Stake[]"
												},
												"typeName": {
													"baseType": {
														"id": 1236,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1235,
															"name": "Stake",
															"nameLocations": [
																"2884:5:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 974,
															"src": "2884:5:5"
														},
														"referencedDeclaration": 974,
														"src": "2884:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$974_storage_ptr",
															"typeString": "struct StakingContract.Stake"
														}
													},
													"id": 1237,
													"nodeType": "ArrayTypeName",
													"src": "2884:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$974_storage_$dyn_storage_ptr",
														"typeString": "struct StakingContract.Stake[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2883:16:5"
									},
									"scope": 1254,
									"src": "2826:115:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "3001:35:5",
										"statements": [
											{
												"expression": {
													"id": 1250,
													"name": "totalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 956,
													"src": "3018:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1249,
												"id": 1251,
												"nodeType": "Return",
												"src": "3011:18:5"
											}
										]
									},
									"functionSelector": "7bc74225",
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalStake",
									"nameLocation": "2956:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2969:2:5"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "2992:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2992:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2991:9:5"
									},
									"scope": 1254,
									"src": "2947:89:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1255,
							"src": "298:2741:5",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								980,
								986
							]
						}
					],
					"src": "32:3007:5"
				},
				"id": 5
			}
		}
	}
}